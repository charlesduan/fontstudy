%!PS-Adobe-2.0
%%Pages: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: functions.ps
%!PS-Adobe-2.0

%
% functions.ps
%
% Convenience functions for me, that I think are useful in multiple files.
%

% An inch
/inch { 72 mul } bind def

% Given a dictionary, print its keys. Leaves the dictionary on the stack.
/pkeys {
    dup { pop == } forall
} bind def

% Given a set of pairs 1 2 3 4 5 6 and a number of pairs 3, pulls pairs out and
% leaves 1 3 5 2 4 6 on the stack.
/seppairs {
    2 dict begin
    dup array /Evens exch def
    dup array /Odds exch def
    1 sub -1 0 {	% odd even index
	dup Odds exch	% odd even index Odds index
	5 2 roll	% Odds index odd even index
	Evens exch	% Odds index odd even Evens index
	3 -1 roll	% Odds index odd Evens index odd
	put put
    } for
    Odds aload pop Evens aload pop
    end
} def

% Min/max functions
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def

% Given a number and a base/bounds, determine whether that number falls within
% the base/bounds. Accept all possible values for both base and bounds,
% including negative.
% value base bounds -- bool
% Add a tolerance value to base and bounds, because sometimes the
% floating-point arithmetic is a bit off.
/withinRange {
    dup 0 gt {
	% If bounds is positive. value - base >= 0 and <= bounds.
	3 1 roll sub	% bounds value-base
	dup 0 ge {
	    ge
	} {
	    pop pop false
	} ifelse
    } {
	% If bounds is negative, value - base <= 0 and >= bounds.
	3 1 roll sub
	dup 0 le {
	    le
	} {
	    pop pop false
	} ifelse
    } ifelse
} def

% Append two strings.
/append {
     2 copy length exch length add  % find the length of the new.
     string dup     % string1 string2 string string
     4 2 roll       % string string string1 string2
     2 index 0 3 index
     % string string string1 string2 string 0 string1
     putinterval    % stuff the first string in.
     % string string string1 string2
     exch length exch putinterval
} bind def

% Sorts an array using a comparator function. The specification of the
% comparator function is as follows:
%
% Takes two arguments. Returns TRUE iff the two arguments are in the correct
% order in their presentation; false otherwise.
%
% The array is sorted IN PLACE; that is, its contents will be overwritten. If
% this is not desired behavior, place at the beginning of the call:
%
% dup length array copy
%
% [array] {proc} -- [array]
/bubblesort {
    4 dict begin
	/proc exch def
	/ary exch def
	ary length 2 sub -1 0 {
	    /noexch true def
	    0 1 3 -1 roll {
		/pos exch def
		ary pos get ary pos 1 add get 2 copy proc not {
		    ary exch pos exch put
		    ary exch pos 1 add exch put
		    /noexch false def
		} {
		    pop pop
		} ifelse
	    } for
	    noexch { exit } if
	} for
	ary
    end
} def

% Reverses an array.
/revArray {
    2 dict begin
	/ary exch def
	/len ary length 1 sub def
	0 1 ary length 2 idiv 1 sub {
	    dup len exch sub ary exch get	% i ary[len-i]
	    ary 2 index get			% i ary[len-i] ary[i]
	    ary 3 index len exch sub 3 -1 roll	% i ary[len-i] ary len-i ary[i]
	    put ary 3 1 roll put
	} for
	ary
    end
} def

% Puts an array onto the stack.
/loadArray { aload pop } bind def

% Get the first or last element of an array.
/firstElt { 0 get } bind def
/lastElt { dup length 1 sub get } bind def

% Iterates several times.
% num { proc } --
/iterate {
    /IterateProc exch def
    -1 0 { pop IterateProc } for
} def
%%EndResource
%%BeginResource: points.ps
%!PS-Adobe-2.0

%
% points.ps
%
% Utility functions for points.
%

% Requires: functions.ps

% Given a pair of points, determines the average of them.
% x1 y1 x2 y2 -- x1+x2/2 y1+y2/2
/avgPoint {
    3 -1 roll add 2 div 3 1 roll add 2 div exch
} bind def

% Given a pair of points and a tolerance, determine whether the second point is
% within the tolerance range of the first point. Tolerance should be >= 0.
% x1 y1 x2 y2 tol -- bool
/eqPoint {
    dup 6 2 roll	% tol tol x1 y1 x2 y2
    3 -1 roll		% tol tol x1 x2 y2 y1
    sub	abs		% tol tol x1 x2 |y2-y1|
    3 1 roll		% tol tol dy x1 x2
    sub abs		% tol tol dy dx
    3 1 roll		% tol dx tol dy
    ge			% tol dx bool
    3 1 roll ge and
} bind def

% Given two points, tests them for exact equality.
/equalPoint {
    3 -1 roll eq 3 1 roll eq and
} bind def

% Scales a point by a constant.
% x1 y1 scale -- x y
/scalePoint {
    dup 3 1 roll mul 3 1 roll mul exch
} bind def

% Add two points.
% x1 y1 x2 y2 -- x y
/addPoint {
    3 -1 roll add 3 1 roll add exch
} bind def

% Subtract two points.
/subPoint {
    3 -1 roll exch sub 3 1 roll sub exch
} bind def

% Performs a dot product on 2d points.
/dotProduct {
    3 -1 roll mul 3 1 roll mul add
} bind def

/magnitude {
    dup mul exch dup mul add sqrt
} bind def

% Iterates over a list of points. The point list is a list of 2-element lists.
/ForallPointDict 1 dict def

/forallPoint {
    % We must make a global definition here, because without it we need to store
    % the procedure on a local dictionary (which violates the nature of forall)
    % or leave the procedure on the stack (which violates the nature of forall).
    ForallPointDict exch /fp exch put
    {
        aload pop ForallPointDict /fp get exec
    } forall
} def

% Given a pair of coordinates, get one of them. These are really stupid
% functions, but they make the code easier to read.
/xcoor { dup type /arraytype eq { 0 get } { pop } ifelse } bind def
/ycoor { dup type /arraytype eq { 1 get } { exch pop } ifelse } bind def

% Sorts an array of points by x or y coordinate, ascending.
/sortByX {
    { xcoor exch xcoor exch lt } bubblesort
} def

/sortByY {
    { ycoor exch ycoor exch lt } bubblesort
} def

% Given a user path and a list of points, gives the points that are in the fill
% region of the user path (by inufill).
% [ [points] ] { upath } -- [ [points subset] ]
/pointsInRegion {
    1 dict begin
	cvlit /ThePath exch def
	[ exch {
	    2 copy ThePath inufill {
		[ 3 1 roll ]
	    } {
		pop pop
	    } ifelse
	} forallPoint
	]
    end
} def

% Defines a point.
/defPoint {
    dup type /nametype eq {
	1 index type /arraytype eq { exch aload pop } { 3 1 roll } ifelse
    } if
    2 packedarray cvx def
} def

% If two points are too close for comfort, discard one of them.
% [ [ point list ] ] -- [ [ subset ] ]
/uniquePoints {
    5 dict begin
    /theArray exch def
    /newArray [ ] def
    0 1 theArray length 1 sub {
	theArray exch get loadArray /curPoint defPoint
	/noMatches true def
	0 1 newArray length 1 sub {
	    newArray exch get loadArray curPoint 3 eqPoint {
		/noMatches false def
		exit
	    } if
	} for
	noMatches {
	    /newArray [ newArray aload pop [ curPoint ] ] def
	} if
    } for
    newArray
    end
} def
%%EndResource
%%BeginResource: angles.ps
%!PS-Adobe-2.0

%
% angles.ps
%
% Fun tricks for curve segments and angles.
%

% Requires: functions.ps points.ps

% Given two points, finds the angle in degrees from the horizontal of the line
% defined ending at the first point.
% x1 y1 x2 y2 -- angle of vector from (x1,y1) to (x2, y2)
/lineAngle {
    4 2 roll subPoint exch atan
} bind def

% Given a curveto (8 arguments), get the starting angle. This will be the
% direction the curve starts out traveling.
/curveStartAngle {
    pop pop pop pop
    lineAngle
} def

% Given a curveto (8 arguments), get the ending angle. This will be the
% direction the curve would continue to travel in if it didn't stop.
/curveEndAngle {
    lineAngle 5 1 roll
    pop pop pop pop
} def

% Takes two points p and q and an angle theta. Pretend that an angle was drawn
% with a circular pen of radius r. If the pen had zero radius, then the path
% would have angled at p with an angle of theta. But because the radius is
% greater than zero, the "angle" occurs at point q. This function will return
% the diameter 2*r.
%            /
%           /*
%          / |
%         /  `.   ..*|
%        /    q.-^   | r
%       /       \.   |
%      /theta     ^*.|
%     p----------------
%
/penDiameter {
    2 div sin 5 1 roll subPoint magnitude	% sin(theta/2) l
    1 index mul exch				% l*sin sin
    1 exch sub div				% l*sin / (1-sin) = r
    2 mul
} def

%
% Given a box, defined by lower left and upper right points, and a point and an
% angle, draw the line that fits in the bounding box, goes through that point,
% and travels at that angle.
%
% +------------------+
% | \                |
% |  \               |
% |   \ theta        |
% |    p-------      |
% |     \            |
% |      \           |
% |       \          |
% +------------------+
%
/boundedLine {
    6 dict begin
	{ dup 0 ge { exit } if 180 add } loop
	{ dup 180 lt { exit } if 180 sub } loop
	/Theta exch def
	/Point defPoint
	% If the angle is over 90 degrees, swap left and right for convenience
	2 seppairs 2 copy max /BoxTop exch def min /BoxBot exch def
	2 copy max /BoxRt exch def min /BoxLft exch def
	% First, the upper intersection point.
	% Degenerate cases: point is on top of box and angle is horizontal
	Point ycoor BoxTop eq
	% Point is on side of box and angle is vertical
	90 Theta eq Point xcoor BoxRt eq Point xcoor BoxLft eq or and
	or {
	    Point
	} {
	    Point BoxRt BoxTop lineAngle Theta ge {
		BoxRt Point xcoor sub % horizontal distance
		dup Theta sin mul Theta cos div % vertical distance
		Point addPoint
	    } {
		Point BoxLft BoxTop lineAngle Theta ge {
		    BoxTop Point ycoor sub
		    dup Theta cos mul Theta sin div
		    exch Point addPoint
		} {
		    BoxLft Point xcoor sub % horizontal distance
		    dup Theta sin mul Theta cos div % vertical distance
		    Point addPoint
		} ifelse
	    } ifelse
	} ifelse
	% Lower point.
	% Degenerate cases: point is on top of box and angle is horizontal
	Point ycoor BoxBot eq
	% Point is on side of box and angle is vertical
	90 Theta eq Point xcoor BoxLft eq Point xcoor BoxRt eq or and
	or {
	    Point
	} {
	    /Theta Theta 180 add def
	    Point BoxLft BoxBot lineAngle Theta ge {
		BoxLft Point xcoor sub % horizontal distance
		dup Theta sin mul Theta cos div % vertical distance
		Point addPoint
	    } {
		Point BoxRt BoxBot lineAngle Theta ge {
		    BoxBot Point ycoor sub
		    dup Theta cos mul Theta sin div
		    exch Point addPoint
		} {
		    BoxRt Point xcoor sub % horizontal distance
		    dup Theta sin mul Theta cos div % vertical distance
		    Point addPoint
		} ifelse
	    } ifelse
	} ifelse
    end
} def

% Line bounded by the current path's bounding box. Takes a point and an angle.
/bboxLine {
    pathbbox 5 5 addPoint 4 2 roll 5 5 subPoint 4 2 roll 7 4 roll boundedLine
} def
%%EndResource
%%BeginResource: extremes.ps
%!PS-Adobe-2.0

%
% extremes.ps
%
% Functions for manipulating extremes.
%

2 dict begin

    /pointList [ ] def

    /addPoint {
	[ 3 1 roll ] [ exch pointList aload pop ] /pointList exch def
    } def

currentdict
end
/ExtremesDict exch def


% Now, the public interface

% Given a coordinate pair, test it as an extreme point candidate. Require that
% the point be within the clipping path for consideration.
/cmpPoint {
    ExtremesDict begin
	addPoint
    end
} def

% Clear out the current extreme values.
/resetExtremes {
    ExtremesDict begin
	/pointList [ ] def
    end
} def
%%EndResource
%%BeginResource: intersect.ps
%!PS-Adobe-2.0

%
% intersect.ps
%

% Requires: functions.ps

% Given four absolute points, determine the intersection between the lines.
% x1 y1 x2 y2 x3 y3 x4 y4 -- x y true OR false
% The first line is the one between (x1,y1) and (x2,y2).
/intersect {
    16 dict begin
	4 seppairs
	% Given a pair of x or y coordinates, a parametrization of the line
	% segment defined by them is {x,y} = mt + b, where b is one of the
	% coordinates and m is the difference between the two of them.
	dup /yb1 exch def sub /ym1 exch def
	dup /yb2 exch def sub /ym2 exch def
	dup /xb1 exch def sub /xm1 exch def
	dup /xb2 exch def sub /xm2 exch def
	% It turns out that the solution for the intersection is:
	%      xm2(yb1-yb2) + ym2(xb2-xb1)
	% t1 = ---------------------------
	%           xm1 ym2 - xm2 ym1
	%      xm1(yb1-yb2) + ym1(xb2-xb1)
	% t2 = ---------------------------
	%           xm1 ym2 - xm2 ym1
	%
	% Let's hope we code this right...
	xm1 ym2 mul xm2 ym1 mul sub	% Denominator
	/Denom exch def
	yb1 yb2 sub xb2 xb1 sub		% factor1 factor2
	2 copy
	ym2 mul exch xm2 mul add	% f1 f2 t1-numerator
	/t1num exch def
	ym1 mul exch xm1 mul add	% t2-num
	/t2num exch def
	% If we've got coinciding lines, just take the middle
	t1num 0 eq
	Denom 0 eq
	and {
	    false
	} {
	    % Now we perform range checks. The numerators should each be at
	    % least zero and no more than D.
	    t1num 0 Denom withinRange t2num 0 Denom withinRange and {
		% If true, then we simply plug in t1 into its respective x and y
		% equations to get x and y values.
		t1num Denom div dup
		xm1 mul xb1 add exch
		ym1 mul yb1 add
		true
	    } {
		false
	    } ifelse
	} ifelse
    end
} def


%%EndResource
%%BeginResource: bzfunc.ps
%!PS-Adobe-2.0

%
% bzfunc.ps
%
% Bezier curve functions
%

% Requires: functions.ps

% Our bezier curve functions. Given the x or y coordinates and a t value,
% calculate the value at that point.
% x0 x1 x2 x3 t -- x
/bezierFunc {
    2 dict begin
    /t exch def
    /s 1 t sub def
    t mul t mul t mul			% x3 * t^3
    exch t mul t mul s mul 3 mul add	% x2 * 3t^2(1-t)
    exch s mul s mul t mul 3 mul add	% x1 * 3t(1-t)^2
    exch s mul s mul s mul add		% x0 * (1-t)^3
    end
} def

% Given four points and t, calculate the bezier function at that value t.
% x1 y1 x2 y2 x3 y3 t -- x y
/curvetoPoint {
    dup 5 seppairs	% x0 x1 x2 x3 t y0 y1 y2 y3 t
    bezierFunc 6 1 roll
    bezierFunc exch
} def

% Finds the Bezier extrema.
% x0 x1 x2 x3 -- [ values ]
% where values is, for each extreme, the value t. We assume that x0 = 0.
/bezierExtremes {
    6 dict begin
	% Originally, this function assumed rcurveto semantics, so a would
	% always be 0. But pathforall uses curveto instead. Since we don't want
	% to do all the math all over again, we collect a first, and then make
	% all the values relative. It makes no difference, since the value we
	% return, time, is independent of the relative location of the curve.
	4 -1 roll
	/a exch def

	% Define the four parameters
	/d exch a sub def
	/c exch a sub def
	/b exch a sub def

	% The function is:
	%   3bt(1 - t)^2 + 3ct^2(1 - t) + dt^3
	% Its derivative is (divided by three):
	%   b - 4bt + 2ct + 3bt^2 - 3ct^2 + dt^2
	% Which means the zero point is:
	%       (2b-c) +- sqrt( b(b-c-d) + c^2)
	%   t = -------------------------------
	%               3b - 3c + d
	% (the quadratic formula divided all over by two).
	% Let B=2b-c, det=b(b-c-d)+c^2, and A=3b-3c+d.
	/det b c sub d sub b mul c c mul add def
	/A b 3 mul c 3 mul sub d add def
	/B b 2 mul c sub def

	A 0 eq {
	    % If we've got a straight line on our hands; i.e., A=0
	    % Then the function is:
	    %   0 = 2(c-2b)t + b
	    %   b = 2(2b-c)t
	    %   t = b / 2(2b-c) = b / 2B
	    B 0 eq {
		% If B=0, then no solution, because it's horizontal
		[ ]
	    } {
		% Otherwise it's at -c / -B. Recall we must add a back to the
		% resulting value.
		[
		    b B 2 mul div dup 0 1 withinRange not { pop } if
		]
	    } ifelse
	} {
	    det 0 le {
		% If the determinant is negative, there is no solution. If it's
		% zero leave nothing on the stack, since the point we've found
		% is neither a max nor a min.
		[ ]
	    } {
		% Leave -B[+-]sqrt(det)/2A 2 on the stack. Recall we must add a
		% back to the resulting value.
		[
		    B det sqrt add A div dup 0 1 withinRange not { pop } if
		    B det sqrt sub A div dup 0 1 withinRange not { pop } if
		]
	    } ifelse
	} ifelse
    end
} def

% Returns the two extremes arrays, x extremes and then y extremes.
% x0 x1 x2 x3 y0 y1 y2 y3 -- [ x ] [ y ]
/curvetoExtremes {
    4 seppairs
    bezierExtremes 5 1 roll bezierExtremes exch
} def

%%EndResource
%%BeginResource: bzintc.ps
%!PS-Adobe-2.0

%
% bzintc.ps
%
% Intersection between a Bezier curve and a line.
%
% IMPLEMENTATION NOTE: while we could solve this problem systematically--the
% cubic equation is solvable--the solution is over 2 pages long and takes about
% a minute to derive for Mathematica. Instead, we derive it by picking out
% segments from the Bezier curve and finding intersections via interpolation.
%

% Requires: bzfunc.ps intersect.ps


% Takes curveto arguments (4 points) and two points defining a line segment for
% intersection.
/curvetoIntc {
    10 dict begin
	% Collect up the first four args, the line segment point
	4 packedarray cvx /LineSegment exch def
	% Collect up the next 8 args, the curve definition points
	8 packedarray cvx /CurvePoints exch def
	% Counter for how many intersections we've found. The tryCurveIntc
	% function will leave the points on the stack.
	/NumPoints 0 def
	/ThisDict currentdict def
	/AddPoint {
	    ThisDict dup /NumPoints get 1 add /NumPoints exch put
	} bind def
	/RecursiveDepth 0 def
	0 0.05 1 tryCurveIntc
	NumPoints
    end
} def

% Helper function for rcurvetoIntc. Assumes /LineSegment and /CurvePoints to
% exist in some dictionary. Takes for-like arguments (init, delta, final) on the
% stack, iterates over them, and searches for intersection points.
% init delta final -- points
/tryCurveIntc {
    4 dict begin
	/RecursiveDepth RecursiveDepth 1 add def
	exch dup /Delta exch def exch
	3 copy exch 2 div add exch	% i d f f+d/2 i
	dup /LastT exch def		% Save i to lastT
	CurvePoints 9 -1 roll curvetoPoint
	2 packedarray cvx /LastPoint exch def % Using initial, get Bezier point
	exch pop	% Kill original final; use augmented one
	{	% Begin for loop
	    dup						% t t
	    CurvePoints 9 -1 roll curvetoPoint		% t x y
	    2 copy LastPoint LineSegment intersect {	% t x y x-intc y-intc
		% If we found an intersection
		2 copy LastPoint 0.1 eqPoint RecursiveDepth 1000 gt or {
		    % If the point happens to be close enough to LastPoint, then
		    % we'll consider it good.
		    AddPoint
		    5 2 roll
		} {
		    % If they're too far apart, then we're in trouble. Using
		    % LastT and T, we'll recursively call this function.
		    pop pop			% t x y
		    3 -1 roll dup 4 2 roll	% t t x y
		    % Save off t, x, y, so whatever recursive tryCurveIntc does,
		    % we can replace our old values at the top of the stack.
		    3 packedarray cvx /Save exch def
		    LastT exch 2 copy 		% LastT t LastT t
		    exch sub 5 div		% LastT t (t-LastT)/5
		    exch
		    tryCurveIntc
		    Save
		} ifelse
	    } if					% t x y
	    2 packedarray cvx /LastPoint exch def
	    /LastT exch def
	} for
    end
} def
%%EndResource
%%BeginResource: intcmgr.ps
%!PS-Adobe-2.0

%
% intcmgr.ps
%
% Manages intersections between a line and various curves.
%

% Requires: intersect.ps bzintc.ps functions.ps

10 dict begin

    % Place where points will be stored.
    /pointList [ ] def

    /addPoint {
	[ 3 1 roll ] [ exch pointList aload pop ] /pointList exch def
    } def

    % Line to check for intersections.
    %/intcLine { 0 0 0 0 } def

currentdict
end
/IntersectDict exch def

% Resets the intersection manager.
/resetIntc {
    IntersectDict begin
	/pointList [ ] def
    end
} def

% Sets the line to test against other points.
/setIntcLine {
    IntersectDict begin
	4 packedarray cvx /intcLine exch def
    end
} def

% Basically performs "intersect", but saves the result value.
/intcLines {
    IntersectDict begin
	intcLine intersect {
	    addPoint
	} if
    end
} def

% Performs curvetoIntc, calculates the actual intersection point, and saves the
% result.
/intcCurve {
    IntersectDict begin
	intcLine curvetoIntc -1 1 {
	    pop addPoint
	} for
    end
} def

% Iterates over the points collected.
/intcForall {
    IntersectDict /pointList get exch forallPoint
} def

% Shows the intersection line (without messing up the path)
/showIntcLine {
    IntersectDict begin
    gsave
	newpath intcLine moveto lineto stroke
    grestore
    end
} def
%%EndResource
%%BeginResource: drawing.ps
%!PS-Adobe-2.0

%
% drawing.ps
%
% Drawing stuff.
%

/pointbox {
    gsave
	newpath moveto
	-10 -10 rlineto
	20 0 rlineto
	closepath fill
    grestore
} bind def
/uppointbox {
    gsave
	newpath moveto
	-10 10 rlineto
	20 0 rlineto
	closepath fill
    grestore
} bind def
/rtpointbox {
    gsave
	newpath moveto
	10 -10 rlineto
	0 20 rlineto
	closepath fill
    grestore
} bind def
/ltpointbox {
    gsave
	newpath moveto
	-10 10 rlineto
	0 -20 rlineto
	closepath fill
    grestore
} bind def

/drawHorizLine {
    gsave
	3 setlinewidth
	newpath dup 0 exch moveto
	700 exch lineto
	stroke
    grestore
} def

/drawLine {
    gsave 4 copy moveto lineto stroke grestore
} def


%%EndResource
%%BeginResource: pathtricks.ps
%!PS-Adobe-2.0

%
% pathtricks.ps
%
% Methods for manipulating paths.
%
% All of the functions in this package assume that there is a current path. They
% do not change the path at all.
%

% Requires: extremes.ps intcmgr.ps points.ps drawing.ps angles.ps

% General method for executing pathforall in a useful method such that
% currentpoint works correctly. Expects methods linetoHook, movetoHook,
% curvetoHook, and closepathHook to exist. If startingHook and/or endingHook are
% defined, then they will be executed at the appropriate times.
%
/tracePath {
    10 dict begin	% Save the starting X and Y; also makes hooks local
    gsave
    /startingHook where {
	pop startingHook
    } if
    {		% moveto
	2 copy mark 3 1 roll movetoHook cleartomark
	/startPoint defPoint
	/curPoint startPoint defPoint
    } {		% lineto
	2 copy mark 3 1 roll linetoHook cleartomark
	/curPoint defPoint
    } {		% curveto
	6 copy mark 7 1 roll curvetoHook cleartomark
	/curPoint defPoint
	pop pop pop pop
    } {		% closepath
	mark startPoint linetoHook cleartomark
	mark closepathHook cleartomark	% just in case
	/curPoint startPoint defPoint
    } pathforall
    /endingHook where {
	pop endingHook
    } if
    grestore
    end
} def

%
% INTERSECTIONS
%

% Dictionary defining hooks for line intersections. It is expected that the user
% of this dictionary initialize the line for the intersection manager.
5 dict begin
    /movetoHook { pop pop } def
    /linetoHook {
	curPoint intcLines
    } def
    /curvetoHook {
	curPoint 8 2 roll
	intcCurve
    } def
    /closepathHook { } def
currentdict
end
/PathIntcDict exch def

% Given the points for a line, determine an intersection.
/pathLineIntc {
    resetIntc
    PathIntcDict begin
	setIntcLine
	showIntcLine
	tracePath
    end
    IntersectDict /pointList get
    uniquePoints
} def

% EXTREME VALUES

5 dict begin
    /movetoHook { pop pop } def
    /linetoHook {
	curPoint cmpPoint
	cmpPoint
    } def
    /curvetoHook {
	2 copy cmpPoint
	curPoint cmpPoint
	curPoint 8 2 roll
	8 packedarray cvx /points exch def
	points curvetoExtremes
	{ points 9 -1 roll curvetoPoint cmpPoint } forall
	{ points 9 -1 roll curvetoPoint cmpPoint } forall
    } def
    /closepathHook { } def
currentdict
end
/PathExtrDict exch def

% Determine the extremes.
/pathExtremes {
    resetExtremes
    PathExtrDict begin
	tracePath
    end
    ExtremesDict /pointList get
} def


% Direction of fill
%
% Given an array of points and a point offset, extracts those points that, when
% the offset is applied to them, 
% [ point array ] offx offy -- [ point array subset ]
/offsetInFill {
    1 dict begin
	2 packedarray cvx /offset exch def
	[ exch
	{
	    2 copy offset addPoint infill {
		[ 3 1 roll ]
	    } {
		pop pop
	    } ifelse
	} forallPoint
	]
    end
} def

% Midpoint of the current path.
/pathMidpoint {
    pathbbox 2 seppairs add 2 div 3 1 roll add 2 div exch
} def

% Upper right coordinate of current path.
/pathUR {
    pathbbox 4 2 roll pop pop
} def

% Path lower left coordinate.
/pathLL {
    pathbbox pop pop
} def

% Vertical line that splits the bbox in half. Leaves the coordinates on the
% stack.
/vertSplitLine {
    dup pathUR xcoor mul	% frac frac*llx
    exch 1 exch sub		% frac*llx 1-frac
    pathLL xcoor mul		% frac*llx (1-frac)*urx
    add dup			% avgX avgX
    pathLL ycoor 10 sub exch
    pathUR ycoor 10 add
} def
/horizSplitLine {
    dup pathUR ycoor mul	% frac frac*lly
    exch 1 exch sub		% frac*lly 1-frac
    pathLL ycoor mul		% frac*lly (1-frac)*ury
    add				% avgY avgY
    pathLL xcoor 10 sub exch
    pathUR xcoor 10 add 1 index
} def

/vertLineThrough {
    xcoor dup
    pathLL ycoor 10 sub exch
    pathUR ycoor 10 add
} def
/horizLineThrough {
    ycoor
    pathLL xcoor 10 sub exch
    pathUR xcoor 10 add 1 index
} def

% Show a letter.
/letterPath {
    newpath 0 0 moveto true charpath
    gsave stroke grestore
} bind def



%
% ANGLE AT A POINT IN THE PATH
%
6 dict begin
/movetoHook { pop pop } def
/linetoHook {
    /theAngle where {
	pop pop pop
    } {
	curPoint 4 2 roll
	4 copy thePoint linePtIntc {
	    pop pop lineAngle /theAngle exch def
	} if
    } ifelse
} def
/curvetoHook { } def	% Should never occur, since we flatten the path
/closepathHook { } def
/endingHook { /theAngle where dup { exch pop theAngle exch } if } def
currentdict
end
/PathAngleDict exch def

/pathAngle {
    PathAngleDict begin
    gsave
	flattenpath
	/thePoint defPoint
	tracePath
    grestore
    end
} def

% Produces the coordinates for a perpendicular through a given point.
/perpThroughPoint {
    90 add bboxLine
} def

% Measure height/depth of the path.
/measureHeight {
    gsave
	flattenpath pathUR ycoor
	dup drawHorizLine
    grestore
} def
/measureDepth {
    gsave
	flattenpath pathLL ycoor
	dup drawHorizLine
	neg
    grestore
} def


%%EndResource
%%BeginResource: bracket.ps
%!PS-Adobe-2.0
%
% bracket.ps
%
% Given the darkness parameter, a point on the stem, the edge of the serif, and
% the corner where the stem and the edge should meet with no bracket, finds the
% height of the bracket.
%
% Requires: points.ps pathtricks.ps drawing.ps
%
/findBracket {
    4 dict begin
	/corner defPoint	% Point where the serif and stem meet
	/edge defPoint		% Point at top end of serif
	/bracket defPoint	% Point where bracket should end
	/fraction exch 1 exch div def	% Darkness parameter (usually 1/3)
	10 {
	    edge bracket drawLine avgPoint corner
	    pathLineIntc dup length 0 eq {
		/bracket corner defPoint
		pop exit
	    } if
	    firstElt loadArray % Better only have one element!
	    corner subPoint fraction scalePoint corner addPoint
	    % First line for the intersection, that goes through edge. This line
	    % should intersect the stem line at the bracket point.
	    edge subPoint 10 scalePoint edge addPoint edge
	    % Second line for the intersection
	    bracket corner subPoint 20 scalePoint corner addPoint corner
	    intersect {
		/bracket defPoint
	    } {
		/bracket corner defPoint
		exit
	    } ifelse
	} iterate
	bracket pointbox
	mark bracket edge drawLine avgPoint corner drawLine cleartomark
	bracket
    end
} def


%%EndResource
%%BeginResource: pointintc.ps
%!PS-Adobe-2.0

%
% pointintc.ps
%
% Determines when a point intersects with a line or a curve.
%

% Requires: functions.ps points.ps bzintc.ps

% The tolerance range for intersections. By default 3 points.
/PtIntcEps 3 def

% Makes a line segment given one of the points and a true/false value for which
% direction to draw the line.
/epsilonLine {
    {
	2 copy
	PtIntcEps 0 addPoint 4 2 roll
	PtIntcEps 0 subPoint
    } {
	2 copy
	0 PtIntcEps addPoint 4 2 roll
	0 PtIntcEps subPoint
    } ifelse
} def

% Given a line segment, does it intersect /pt1?
% x1 y1 x2 y2 x y -- false OR x' y' true
/linePtIntc {
    5 dict begin
	/p defPoint
	/p1 defPoint
	/p2 defPoint
	/p2top p p2 subPoint defPoint
	/p2top1 p1 p2 subPoint defPoint
	/p2top1mag p2top1 magnitude def
	p2top magnitude p1 p subPoint magnitude add p2top1mag sub
	-1 2 withinRange {
	    p2top1mag 0 eq {
		p1 true
	    } {
		p2top1
		p2top p2top1 dotProduct p2top1mag dup mul div
		0 max 1 min
		scalePoint
		p2 addPoint true
	    } ifelse
	} {
	    false
	} ifelse
    end
} def

/ifCurveIntc {
    curvetoIntc dup 0 gt {
	-1 2 {
	    pop pop pop
	} for
	true
    } {
	pop false
    } ifelse
} def

% Does a curve intersect?
% x1 y1 ... x8 y8 x y -- x y true OR false
/curvePtIntc {
    10 copy true epsilonLine ifCurveIntc {
	12 2 roll
	pop pop pop pop pop pop pop pop pop pop	% 10 of them
	true
    } {
	false epsilonLine ifCurveIntc
    } ifelse
} def

%%EndResource
%%BeginResource: subpath.ps
%!PS-Adobe-2.0

%
% subpath.ps
%
% Produces subpaths based on starting and ending conditions.
%

% Requires: angles.ps pointintc.ps


% Makes a subpath, as a user path.
/traceSubpath {
    20 dict begin	% Save the starting X and Y; also makes hooks local
    /moveto { /moveto cvx } def
    /lineto { /lineto cvx } def
    /curveto { /curveto cvx } def
    /closepath { /closepath cvx } def
    % Execute the initialization hook, which should be at the top of the stack.
    exec
    [
    pathbbox 100 100 addPoint 4 2 roll 100 100 subPoint 4 2 roll /setbbox cvx
    % Each partial path segment in the path must be traced independently. Guess
    % that there are at most 100 segments in any path.
    1 1 100 {
	/segmentToTrace exch def
	/inSubpath false def
	1 1 2 {
	    /currentSegment 1 def
	    pop	% Get rid of the for argument
	    /ignoreCycle segmentToTrace currentSegment ne def

	    {		% moveto
		% You should never encounter a moveto in a subpath; it's bad
		% karma. TODO We have to figure out how to deal with multiple
		% subpaths within a path. The way we should do this: break the
		% path up into individual parts, and then run all this stuff on
		% each part.
		ignoreCycle {
		    pop pop
		} {
		    /nowPt defPoint
		    /startPt nowPt defPoint
		} ifelse

	    } {		% lineto
		2 copy /newPt defPoint
		% If the new point equals the old point exactly, then ignore
		% this entire thing.
		newPt nowPt equalPoint ignoreCycle or {
		    pop pop
		} {
		    2 packedarray cvx /linetoArgs exch def
		    inSubpath {			% We're in the subpath.
			/defaultEndSubpath { linetoArgs lineto } def
			lineTestEnd {
			    /inSubpath false def
			    exit
			} {
			    linetoArgs lineto
			} ifelse
		    } {				% We're not in the subpath.
			/defaultStartSubpath {
			    nowPt moveto linetoArgs lineto
			} def
			lineTestStart {
			    /inSubpath true def
			} if
		    } ifelse
		    /nowPt newPt defPoint
		} ifelse

	    } {		% curveto
		2 copy /newPt defPoint
		newPt nowPt equalPoint ignoreCycle or {
		    pop pop pop pop pop pop
		} {
		    6 packedarray cvx /curvetoArgs exch def
		    inSubpath {			% We're in the subpath.
			/defaultEndSubpath { curvetoArgs curveto } def
			curveTestEnd {
			    /inSubpath false def
			    exit
			} {
			    curvetoArgs curveto
			} ifelse
		    } {				% We're not in the subpath.
			/defaultStartSubpath {
			    nowPt moveto curvetoArgs curveto
			} def
			curveTestStart {
			    /inSubpath true def
			} if
		    } ifelse
		    /nowPt newPt defPoint
		} ifelse

	    } {		% closepath
		/newPt startPt defPoint
		/linetoArgs startPt defPoint
		newPt nowPt equalPoint ignoreCycle or not {
		    inSubpath {
			/defaultEndSubpath { linetoArgs lineto } def
			lineTestEnd {
			    /inSubpath false def
			    exit
			} {
			    linetoArgs lineto
			} ifelse
		    } {				% We're not in the subpath.
			/defaultStartSubpath {
			    nowPt moveto linetoArgs lineto
			} def
			lineTestStart {
			    /inSubpath true def
			} if
		    } ifelse
		    /nowPt newPt defPoint
		} if
		/currentSegment currentSegment 1 add def
		/ignoreCycle currentSegment segmentToTrace ne def
	    } pathforall

	    %inSubpath not { exit } if
	} for
	% If the last segment is greater than or equal to the segment we just
	% traced plus one, then the next cycle will be useless so it and all
	% following ones should be canceled.
	currentSegment segmentToTrace 1 add lt { exit } if
    } for

    % Remove the last moveto
    dup /moveto eq {
	pop pop pop
    } if
    ] cvx
    end
} def

/drawSubpath {
    gsave
	currentlinewidth 3 mul setlinewidth
	dup ustroke
    grestore
} def

/useSubpath {
    gsave
	exch newpath uappend
	exec
    grestore
} def

/subpathEndpoint {
    gsave
	newpath uappend currentpoint
    grestore
} def


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Some start and end condition functions
%

% Start when the angle meets some condition.
% {cond} --
/startWhenAngle {
    /StartTestCond exch def
    /lineTestStart {
	nowPt linetoArgs lineAngle StartTestCond {
	    defaultStartSubpath
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestStart {
	nowPt curvetoArgs curveStartAngle StartTestCond {
	    defaultStartSubpath
	    true
	} {
	    false
	} ifelse
    } def
} def

/endWhenAngle {
    /EndTestCond exch def
    /lineTestEnd {
	nowPt linetoArgs lineAngle EndTestCond {
	    defaultEndSubpath
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestEnd {
	nowPt curvetoArgs curveEndAngle EndTestCond {
	    defaultEndSubpath
	    true
	} {
	    false
	} ifelse
    } def
} def

/endBeforeAngle {
    /EndTestCond exch def
    /lineTestEnd {
	nowPt linetoArgs lineAngle EndTestCond {
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestEnd {
	nowPt curvetoArgs curveEndAngle EndTestCond {
	    true
	} {
	    false
	} ifelse
    } def
} def

/endBeforeStartAngle {
    /EndTestCond exch def
    /lineTestEnd {
	nowPt linetoArgs lineAngle EndTestCond {
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestEnd {
	nowPt curvetoArgs curveStartAngle EndTestCond {
	    true
	} {
	    false
	} ifelse
    } def
} def

/startAtPoint {
    /StartPoint defPoint
    /lineTestStart {
	nowPt linetoArgs StartPoint linePtIntc {
	    moveto linetoArgs lineto
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestStart {
	nowPt curvetoArgs StartPoint curvePtIntc {
	    pop pop
	    defaultStartSubpath
	    true
	} {
	    false
	} ifelse
    } def
} def

/endAtPoint {
    /EndPoint defPoint
    /lineTestEnd {
	nowPt linetoArgs EndPoint linePtIntc {
	    lineto
	    true
	} {
	    false
	} ifelse
    } def
    /curveTestEnd {
	nowPt curvetoArgs EndPoint curvePtIntc {
	    pop pop
	    defaultEndSubpath
	    true
	} {
	    false
	} ifelse
    } def
} def

%%EndResource
%%BeginResource: textmgr.ps
%!PS-Adobe-2.0

%
% textmgr.ps
%

% Require: functions.ps

<<
    /TextFont /Helvetica findfont 30 scalefont def
    /TextXPos 0 def
    /TextTopYPos 900 def
    /TextYPos 900 def
    /TextLineSkip 40 def
>>
/TextDict exch def

/resetText {
    TextDict begin
	/TextYPos TextTopYPos def
    end
} def

/setTextPos {
    TextDict begin
	dup /TextTopYPos exch def
	/TextYPos exch def
	/TextXPos exch def
    end
} def

%
% font-dict baselineskip --
/setTextFont {
    TextDict begin
	/TextLineSkip exch def
	/TextFont exch def
    end
} def

%
% (string) number --
/stringOfText {
    gsave TextDict begin
	TextFont setfont
	newpath TextXPos TextYPos moveto
	20 string cvs
	CurrentFile ( = ) append exch append ( # ) append exch append
	TextToConsole { dup = } if
	show
	/TextYPos TextYPos TextLineSkip sub def
    end grestore
} def

/TextToConsole false def
%%EndResource
%%BeginResource: unitalic.ps
%!PS-Adobe-2.0

%
% Takes a font dictionary, makes a new font dictionary that is unitalicized, and
% produces the new font.
%

/unitalic {
    dup /FontInfo get /ItalicAngle get
    dup sin exch cos div % Angle had better not be 90
    [ 1 0 4 -1 roll 1 0 0 ] makefont
} def
%%EndResource
%%BeginResource: width.ps
%!PS-Adobe-2.0
%
% width.ps
%
% Determines the appropriate left width.
%
% This entire file is just one big function. It requires that someone (namely,
% widthlibs.ps) define various values that specify the current letter's width,
% various naming conventions, etc.
%
% Requires: pathtricks.ps points.ps functions.ps drawing.ps

/LeftRightWidth {

% Draw some reference lines
gsave
newpath 0 0 moveto 0 200 lineto stroke
0 100 moveto WidthUnit 100 lineto stroke
rightSidebearing 0 moveto 0 200 rlineto stroke
grestore

/Extremes pathExtremes def
Extremes sortByX firstElt /LeftPoint defPoint
Extremes sortByX lastElt /RightPoint defPoint
Extremes sortByY firstElt /BotPoint defPoint
Extremes sortByY lastElt /TopPoint defPoint
LeftPoint ltpointbox
RightPoint rtpointbox
LeftPoint xcoor /LeftEdge exch def
RightPoint xcoor /RightEdge exch def

0 XHeight SubscriptFraction mul horizLineThrough pathLineIntc
sortByX dup firstElt /HalfwayLeft defPoint lastElt /HalfwayRight defPoint

gsave flattenpath
{ HalfwayLeft startAtPoint HalfwayRight endAtPoint } traceSubpath
{ pathExtremes } useSubpath sortByX lastElt /LowerRightPoint defPoint
grestore
LowerRightPoint rtpointbox
LowerRightPoint xcoor /LowerRightEdge exch def

% Chop the letter up into small slices each HeightUnit high. For each slice,
% look at the x coordinates of the intersection, keeping the smallest and
% largest values. Stuff them into an array.
[
    BotPoint ycoor
    HeightUnit
    TopPoint ycoor {
	/curYcoor exch def
	curYcoor XHeight SubscriptFraction mul HeightUnit withinRange {
	    ] { gt } bubblesort /SubPoints exch def [ SubPoints loadArray
	} if
	curYcoor 0 exch horizLineThrough
	pathLineIntc dup length 0 gt {
	    sortByX dup firstElt xcoor exch lastElt xcoor
	} {
	    pop
	} ifelse
    } for
] /Points exch { lt } bubblesort def

% Sort the array by lowest x coordinate. For coordinate n, shift it outward by
% WidthUnit/n. Of those coordinates, take the one that is farthest out.
LeftEdge ForcedWidth sub
1 1 Points length 2 div MaxUnits min {
    dup 1 sub Points exch get exch
    MaxUnits div WidthUnit mul sub
    min
} for

% Draw a line at that farthest sidebearing point.
gsave 2 setlinewidth newpath
    dup dup BotPoint ycoor moveto TopPoint ycoor lineto
stroke grestore

/LeftPosition exch def LeftPosition % For subscript calculation

doLeft (Left) exch neg AdjustScale round cvi stringOfText

% Reverse the array and do everything again, for the right side.
Points revArray pop

RightEdge ForcedWidth add
1 1 Points length 2 div MaxUnits min {
    dup 1 sub Points exch get exch
    MaxUnits div WidthUnit mul add
    max
} for

gsave 2 setlinewidth newpath
    dup dup BotPoint ycoor moveto TopPoint ycoor lineto
stroke grestore

/RightPosition exch def RightPosition % For subscript calculation

doRight (Right) exch rightSidebearing sub AdjustScale round cvi stringOfText

LowerRightEdge ForcedWidth add
1 1 SubPoints length 2 div MaxSubscriptUnits min {
    dup 1 sub SubPoints exch get exch
    MaxSubscriptUnits div WidthUnit mul add
    max
} for

% The subscript cannot extend past the superscript, and it cannot extend beyond
% the specified subscript indentation limit.
RightPosition min RightPosition MaxSubscriptIndent sub max

gsave 2 setlinewidth newpath
    dup dup BotPoint ycoor moveto XHeight SubscriptFraction mul lineto
stroke grestore

doSubscript (Right subscript) exch rightSidebearing sub AdjustScale round cvi
stringOfText

% Now, try to find the center of the top of the letter.

unmeasurableAcccentLetter {
    pathbbox avgPoint
} {
    % Hack: for T, i, and j, measure from the middle of the letter; all other
    % letters, measure from near the top.
    CurrentLetter (T) eq CurrentLetter (i) eq CurrentLetter (j) eq
    or or { 0.5 } { 0.9 } ifelse
    horizSplitLine pathLineIntc sortByX dup
    firstElt /TopLeft defPoint lastElt /TopRight defPoint
    TopLeft ltpointbox TopRight rtpointbox
    TopLeft TopRight avgPoint
} ifelse

 /TopMiddle defPoint TopMiddle pointbox

% This calculates the proper offset from TopMiddle to the accent position.
TopPoint ycoor TopMiddle ycoor sub dup
currentfont /FontInfo get /ItalicAngle get neg dup sin exch cos div mul exch
TopMiddle addPoint /AccentPoint defPoint

AccentPoint pointbox
mark AccentPoint TopMiddle drawLine cleartomark

AccentPoint xcoor RightPosition LeftPosition add 2 div sub

doAccent (Accent point) exch AdjustScale round cvi stringOfText

% In the case of the letters i and j, output the resulting widths so that we can
% calculate the values for the dotless j, even if it doesn't exist.
(i) CurrentLetter eq (j) CurrentLetter eq or {
    /CurrentFile CurrentLetter (-width) append def
    (Width) RightPosition LeftPosition sub AdjustScale round cvi stringOfText
} if

% In the case of the letter i, also do dotless i
(i) CurrentLetter eq {
    gsave 20 dict begin
	0 1 currentfont /Encoding get length 1 sub {
	    dup currentfont /Encoding get exch get /dotlessi eq {
		/DotlessiPos 1 string def
		DotlessiPos exch 0 exch put
		/rightSidebearing { DotlessiPos stringwidth pop } def
		/CurrentLetter (dotlessi) def
		400 0 translate
		DotlessiPos letterPath
		LeftRightWidth
		exit
	    } {
		pop
	    } ifelse
	} for
    end grestore
} if

} def

% Auxiliary function to find letters that should not be measured for the top
% point (instead, the middle of the box should be used). Although it is highly
% unlikely, you may wish to change this list as necessary. In fact, this list
% really should be located somewhere else!
/unmeasurableAcccentLetter {
    false
    UnmeasurableLetters {
	CurrentLetter eq { pop true exit } if
    } forall
} def

/UnmeasurableLetters [ (C) (E) (F) (G) (S) (Z) (a) (c) (e) (o) (r) (z) ] def

% Helper functions in qualities of letters
/doLeft { /CurrentFile { CurrentLetter (-left) append } def } def
/doRight { /CurrentFile { CurrentLetter (-right) append } def } def
/doSubscript { /CurrentFile { CurrentLetter (-subscript) append } def } def
/doAccent { /CurrentFile { CurrentLetter (-accent) append } def } def
/rightSidebearing { CurrentLetter stringwidth pop } def

%%EndResource
%%BeginResource: superness.ps
%
% superness.ps
%
% Functions to determine superness parameters.
%
% Requires: points.ps pathtricks.ps functions.ps
%

% Given a horizontal extreme point and a vertical extreme point and a boolean
% for whether to use the outer or inner intersection point, calculate the points
% relevant to superness.
/findSupernessPoints {
    10 dict begin
	/Outer exch def
	/vertPoint defPoint /horizPoint defPoint
	vertPoint xcoor horizPoint ycoor /Corner defPoint
	horizPoint xcoor vertPoint ycoor /Center defPoint
	Corner pointbox Center  pointbox
	Center Corner pathLineIntc sortByX
	Center xcoor Corner xcoor gt { revArray } if
	dup length 1 gt {
	    dup length 2 sub 2 getinterval
	    Outer { 1 } { 0 } ifelse
	} {
	    0
	} ifelse
	get /SuperPoint defPoint
	SuperPoint pointbox
	Center Corner SuperPoint
    end
} def

% Given a center, a corner, and a superness intersection point, determine the
% superness.
/findSuperness {
    3 dict begin
	/SuperPoint defPoint /Corner defPoint /Center defPoint
	SuperPoint Center subPoint magnitude
	Corner Center subPoint magnitude
	div
    end
} def
%%EndResource
%%BeginResource: lddr8a.pfb
%!PS-AdobeFont-1.0: DidotLH-Roman 001.000
%%CreationDate: Fri Jul 17 15:59:58 1992
%%VMusage: 30003 36895
%% The digitally encoded machine readable software for producing the 
%% Typefaces licensed to you is copyrighted (c) 1992 Adobe Systems. All Rights 
%% Reserved. This software is the property of Adobe Systems Incorporated and 
%% its licensors, and may not be reproduced, used,  displayed, modified, 
%% disclosed or transferred without the express  written approval of Adobe. 
%%  The digitally encoded machine readable outline data for producing the 
%% Typefaces licensed to you is copyrighted (c) 1981 Linotype-Hell AG and/or 
%% its subsidiaries. All Rights Reserved. This data is the property of 
%% Linotype-Hell AG and/or its subsidiaries and may not be reproduced, used, 
%% displayed, modified, disclosed or  transferred without the express written 
%% approval of Linotype-Hell AG  and/or its subsidiaries. 18 Linotype Didot* 
%% Roman 05735 
%% Linotype Didot is a trademark of Linotype-Hell AG and/or its subsidiaries.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.000) readonly def
/Notice (Copyright (c) 1992 Adobe Systems Incorporated.  All Rights Reserved.Linotype Didot is a trademark of Linotype-Hell AG and/or its subsidiaries.) readonly def
/Copyright ( The digitally encoded machine readable software for producing the
 Typefaces licensed to you is copyrighted (c) 1992 Adobe Systems.
 All Rights Reserved. This software is the property of Adobe Systems
 Incorporated and its licensors, and may not be reproduced, used, 
 displayed, modified, disclosed or transferred without the express 
 written approval of Adobe.
 
 The digitally encoded machine readable outline data for producing
 the Typefaces licensed to you is copyrighted (c) 1981 Linotype-Hell AG
 and/or its subsidiaries. All Rights Reserved.
 This data is the property of Linotype-Hell AG and/or its subsidiaries
 and may not be reproduced, used, displayed, modified, disclosed or 
 transferred without the express written approval of Linotype-Hell AG 
 and/or its subsidiaries.
 18 Linotype Didot* Roman 05735 ) readonly def
/FullName (Linotype Didot Roman) readonly def
/FamilyName (Linotype Didot) readonly def
/Weight (Regular) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /DidotLH-Roman def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 39649 def
/FontBBox{-162 -299 1084 941}readonly def
currentdict end
currentfile eexec
f9aaad3f543291a48c1c1cca379acadd12f33ca5468f32121f2f21c854d7
6b24095957a615f98b57700bd6b5fc2e3a34b66ff682c8be9ec985db6004
62d5d88fc816243bbf052a68c26a1bce921cd63441d9c72ede7aaf8ea71a
887b59ff3b19f6ea82d1d55e2510c2efeaff7b1e03f22f2b344810caa122
cba565c4b74936cda9fd38866776c39701ed7bb7af06e0f73e07516c0711
2901433c2abecd2f82a4dacbd2c258f563c18629e46634052a421bda75db
f4963607886a5de3212544d318bc949c4d7aa60513bc01bae3dcfa550a79
9e51785969e6037c505f811c25ee92a01ecc5c63b3b65611cf17e9388553
c1d8877f2889ea396d931b02f76ecc6e08d7113b1c1344b8bfaaa3ddc2c0
892c2c39360ff15d141dbba1630ec31bfde84e7843b09602069108cb319a
c43134ccf4b07442429624ae39a5ea692e958e1426ae5dcd5da0bf53f122
76d504599dc71716832447a7572b2235d86a796132bad55d479f2ba8bb51
bddd4faa2d90e8ecd4514460d313093854ab5f8157ee53e564d57a7b2caa
382e8cbbcfd20931e04a024b12aecfc94e631849ae250d33056041892a8c
217ad797453a591bb0e84923b43540a9f995fdd18b040d7ee6c05fff8b88
ee65328d0d687218b3be337f326f48d4477c6e80084d0bf934f803ab597e
fe402799b4f616e56ec069f5fe6858fbf06b2c8b8b68f5ed495af96f2543
04e22bfa0bfaa4ed4b69b0b192fdba34388b7c7d6ef5927cee1f992eeffd
5ef60b43ba8215785ba809d7d97e9e6cc70fc5aa22ea9b9fc284fd8d56f7
8edf591d88fb9eb9b40815362adc2c5b80129a0adc2959a941efdbb46aef
e94a89921d1120565feeb96a862e547d90b5e30332f57851ad177e89f7f7
7c2ae4bcda8479fe447af9df363440219953d1d31bd56744a8161450f09f
01495c7d82c031dd60ec2e70052329d105f1283e8604419ea0cf75ae2253
a5787789b430d7d0ead018b9c5a756c4b5e70166f3d37ce73839abe3520e
566399400b806f8689789a4d73e672354db1c56cd5d14d698bd6d01e9456
d6b74ffe8c59187b555ca307ff9ca2b77bc1a45a3ec3b0bd1a315de89da5
5d4d22e3e9bb5e97fc51c0015cecfcbfebab6e8d7ba206c0da0c800a3a26
1a21bf5037dd2c51e70a0eefe50f6cc85c210e56f341e2edb160d64ccfb6
b197ba46eaea3f2b2bb096ba10dd86015bec641298b982b1c61060d159fc
1368b28f1559523cdfff0f3eaac142d16609684ea33a87589f32cbb0eea2
511c0ddeb78d8cf4625a5b676b0b609069fd09276aebe374b487bd755599
aa622e86c65176151333ff3448c8759e8f9f8ae66420e7bc0188a60e4ae6
68bd9f096ea59ae1209f6d5cd4dc75e6bda1685a2f7d47542dad0b21a147
decd36aee4503d6351bbb92a37151fc7ef0ee9df6f75597db9159c9a8d58
a08ef64e2b5a8f6157434545881b7a7cfe3ea26b7eddb5b3740c0eef4e11
b786e3c691744b995e337bda7b912819c8f12c748caac02ae443d3c413bc
5ef0557dd159c2679b05ebab70cd591b4bb0531da22dd897a90e039a5da9
d56b63faeee7ebe35359b7e81a2b52abb0b608259cc88561a3e169ce5fc0
ccab571a82616844fcc73ce1d4eea84216709c4b9053796468b09efc212a
c31733f01cce4f942bd4e6d68abf91461f41ad4e6d2949d32989fded19fa
cbe7daed8ab828900ac6828ca0967703105e1071ddd5209472c5755346f8
b81f1738f75ffe235e8ff5ead7a5231bbf2a853e338ca388a3a17fc99ebe
09372bcd3102fbb32b9c52003f825bb42864f5eb0d80e5696ac6f3a40ad3
022591c31a4d2458efc5cf4195bb0510de92a7beb2e30244ed6ff0ab6e7f
21d58f2285485848c811871b3b5fdec3bf339287ac4f076f343324e5f91e
40c84040f526ec96bba2a78b271ca2aca7ff6b22cef7c6b63fa067e594e9
ccf22f0fd909e73c3ad0a20fd94dcee3125cc2f22cdeaa725d33fdf8979e
90a14cf0fb1dd4b9536979bab3b4c38b81681126503950985e9516ec354f
1c9d272d1208cae6178258d5934cbb0d319de62226f9d1dcff19aa728039
b09bca2aab5790ae70464b445df1c8e5ff75ed0635d5874903a8170b1800
eaef354cf0cc4cda9a21e4da1af572cdb266571b543ed13027d165d13915
4901a9de8a1e472d656c961b93cba52069c024e3733db09df2b07bbe645e
8050b18a4a54b53f2383ffb55ea5554a335340185c0c5a07b6498b5e0631
b8a3051caff0cbe8e67e1e70af1ae2953aa9933d115e264f33bb35ca8cd0
20c70a902ae7854ee37168546cd934c3ca302f333eb0df3e178351347680
3956825ddad686f084c82c26e51fd71616808876e887c7791824f3fd42de
8e35bbf5a25a7788591e3eca605f2bfbaf53ebbaa74339c50a61e575f22b
80d8ac2a2f43816bdae9eebc4a94df40342242ed3d28dc66da2a8e3ca8c1
a13e939b82e1d86d58f4689095d5fe2ec20ff2940f291abe8039e69fec44
9e0d5283a2f368a1cb762cebef868843251dee5efecc8a6fbfe6ddf0d8a8
e3bde6b70f485352482f66b3311659ac7da2986f97fe571a3c0d59a35ffa
d0e4eeb3557f57b767f552e7be10c1755dee3cdc9aac11252f399a70e3e9
b3458f272d241d7f8ca01e810184d78f5884743f88091bb4127179449939
0c8e4f84c64e8a62509515b1fab81c9d0f43a9ff6467207ffa233603591c
a3194398451f00283bb47719e2678d928c6684a18e9799aeb21a87a3897b
8bde83ba6cdbd1b0aa70134aee38027bf502a7b1ea71216ad5f8c72496e9
2275bf3624dd86131381f2996194b6c5afcb2456f4bec240ea8bd819b9c3
c9a4a960163370dfed307fe8ac94f8a3ee1daa8c66c4bc32f4b213f4a4e1
f41c0a27df0cf09fc698bbbe110e04bf6867fa95ae77aebd18239dabe7c9
b2316eb665bea57e316e4121027cdeaef4b44a0caf50371d6ef32674ffb6
42d1a3dd01217636aa1b7f393207f7765ead76fea954bb4acb899626c4f3
91b8be1287d1277678e577c5b52e1d61035ebd9e6ea9ff4a0c2c6a72ebf2
cdacf01700782ba21cc042e6234f2b354cfbdf8dae0887503e4dac20db70
2ab9698e9572db715b6eaba6f5f6e766613d35380500455d5c782bdae4d2
08b014c15a7c1326528ef3f44992db1720960b1a179de52486e1983c40b4
10c7128d42c31e0e387b88091d0869afc46ced5df04997fb8a199a0279a7
5cea9ba390082cc144ca8ee79fab1adaeaa24097bd41248939fb9f7d8347
7767907b2daccf19f3001068a5e78792ec3f57aeb8a7a12f5a4b4960d561
39f5c4007092963aa7d742c0743549c913aa54ac0cc06c8a4bfd58de5562
f8123c9a73592b7d1a9ad0900e5cf5501aa6ae27adfbef9762c42c41a718
0188e62623735e10b502d3b0d87029c90f7881dfc91780bfe3367e39948b
fe9f7205deaadcd14bc225750486859a27368016fece229fcdf5e24c9216
6c90766f37e03c8e5cf318911aa126d6baf35632e6947a8b45233672021c
b09843818bfda589895a84357f1b1cc70247d3993a65139f026b6833b252
de2526961de614606e40da9945a8c54a67f6456d7f8dbc361771021d94ec
9526cedfe05727e3942d6a563237c86f1e640c2d2a61e2018b4a0874204a
92661e14b0b7688381add5a98b10edf60e3fdea66423f96d569663bcd763
d7553bee5635ce0438bad1edbb6457d72a796201976825dbf75f804f7eb6
da59fbf94d0ac541f2cfa71674391ae15d3a7cc4b83c1c966eaf491ce04d
fa2c51eaefc01dbabfa8ff33cd141562b71125d7b9bdc4a8bf7292264846
aa107e3bfe064cdbb6a4a9cc6edfae98a63a5a8e488b1bac74d34847883b
1376f2806c23455edfc6a11e9e3ff3fa019f608b083baa6332490081c36a
eccfef578d83c65da6be925ea354b34e07e5d9ad311387dda79363218f3a
a4d309b8d62446a2ea6f261256b20f5b87d012d86d63e9ff5656be288917
b4a4b9caa8e830e4781e5ab779ca4342fcb13b4ecfb9f80bf82106df4ce9
3a8b2bf0dbc08414189ebeddc5b9393aad8edc179a9abdece3dd7cf8a9a8
145899828c6cc54cd6fd19fbb378ed94ece449b0b2b2328f8e4fd3b8f67d
fe48bf6d5887576745c1b7669a9c1f43b56e158af42532475b0667251831
bd76e748078a8a5f08c9acfdf0b166b6ae685f797fde993c2d22caa81c95
2b24970476637786ef7ae3d0125359fbabdd327581f90cd094e0c43a7261
ad37968fed7e0c7a782cb5bf8d4be40eaea3e156d1f7ea9c3c4b162a7331
fb253141dc3b53f0d8fea4115848c3d906427bcfdcbede4a706b3c64fcd1
08dad8ea2220f2e4a257fe2e37390379e49a826c8f28d5b013b847e4228d
cc20342c06c13ff288ac2d60fd3200ced8428d248b1555dd50914faee072
901f336c078ec01f16fcf688f76b7f570301b9e4ec38665eca68088d5125
e733dc84246af2a88166deabc5026e66e7ef4d11fd753a66dce85044d210
c8efcf043f6b27824fd7f00c4f79ba94ac417e61234024a28b057ebd29c3
dd1f6ff041e25cca8f46ad362452b1d3166e95e6070d20d2446b8cecd368
3b54093a11102b9c651367dd205a128543f6428a7a5553312e27773ad914
c2a866e524e1f4112f0c7e99295ceaf25e9cb61fdb38e1a6f9322aa0c6e0
54f14b97d2688b98e2885ae48803aa9508ee7aa7ec50ace67b8fbf9a5f15
667d041ade9ae52d25fc61d5c9c68996535ee8d31370ba0784262d1bbb29
949c5d3d0b6e682aa367e46b8cf1079e79de138ac86a680037f0ab7588da
ab11e6cd36404d977ad41aaf63a2b045b22606a6402fa4ca11862f8aa4ed
5198f8bbfe53722ef8fd856c9411814be68af430c45a0bb74fa87d6c8b51
840a54824ff40cb4e07fe66c635f94724c1b4d321f182854a55aa6e6e70c
230fc5fbc5f677e786a79486918c0ccb026e694d997422554dc9efa8edcc
2570ce8b001bacbf87887d50b5cba050ed0f6ce27dfa9712609c00115327
8360e28ef64ed34fdf6c09763d537024a856f807519ed994b6cfb6a93a5f
a68a3463c7b4e76606ac885e9c58b4dd7361327efa5aad2b32df49bbac05
e451eea01cb532a453e267c476402e1c5b613aed6d1a553016f8ea43cb6b
5c6e3bbf98cf9595c3ba8da751003f347ea658e639acdffb2ceb1e26c748
4e4eef391460d00fd2c91531398c9eea7e825cbb4414141f4f01758e95b7
38783844f9e13baff397113e5f869334d6bd73bef1963254f589db4c0725
cd15da6a6288815199ba17f983a58531604777cf887349fc55ae87002595
c0cac01f0a5e537d7ee957953571a43bec8e087ac1abd7ef66aee3671246
48ed7ae76e2e7b387726d59e59ef48aa7dd5980ed1d0720d5e4b523b54ee
7e4ac7626b3b2920853582fc181bdb34767d1a54fb3831472e3874e82e47
781e050221a0674650a65b5ccab0c25a559b4f466844f8d99b67e35e6bb9
3eabb831a75eac8710fa816dfb02aad8ceeb57dcf4d367150023a0cf7586
9df57bec8f6ac22dd822e803976199a52befd19aeb38d4b6e3849f995211
d6c91b7c129fb5ac1e8ecb6b4e498a7755d99567a6784ab86027d4aca3df
5795ee2a7b9081f1ac50e6ba55f99a432e67b89730fd904d63da401819ad
dcc829ecc784b39712b22972f1b174c52e2a59c0e06b05d2d31cb48a90f3
32e4bd9fcc788062d1f8c5c6ed09fa7f55293e652b6150d03c338f95bd94
059a5edfc172124b60354a2493cd3c10ce46108ac7a0c55753ac696e57b0
59dfc8bad9b102477a20110f0a74e63374c80fdc10ed8071e6151d9a0a1f
a4eb30458fd964fe1d2772c286dffad29f7bd3ff213fd4d4fca116cffff0
740b0bab4492d2471f81e9c9a3272ffe7bf67d848e7cd282ca3579bb6074
0f8ed8307318a8dcb91596d422086b2f00525a1a78be72bb1f945f052757
dfa075148c939607268ecc23b7c848ed2313f96a6423b110ce70d23a9037
31e8a3ef12814e4fe9c7880049333ac9950b2634b738d041b8386c9229c5
4c44011fe98b21f2a19a9ee4486e8a093192d3e79bbf1d4c15a535bab75e
07e2741ff70cd6d81127ec87ab66851f826c63afb08996ae497dc6458b7d
2c9f97e6960fb51396405a48469207853c5113e029d611bf1e734aeb09c4
186aaa67c2fe71b2604493a578f5e91763b55bba2f765dda37de2eeea00c
c268edfbd6544be95ef69bd63e4496bf31686649ec121d959bc82900e80b
3d410e21c670bf02ab91e04d49c59641b6c4ffd77ddd3b29be85d1df560e
0ed18837969815e4d199e89e94a9b4f326c32f030cdb84fb5d073e84905d
63676a6ec0c35157a8c6e336a37ca8283be5d508c74f7a57e4829e590ee4
4ad66744b49d7759eb9ab361aad79cc24230fca2be9e426dd97ae7de6c2c
b0938ea621742f7e507bab0cde611432c04a170c35d1cb9985c5ed6c9e1b
d78e8456a65def69f65a3c4c9f1fdf5cc6d8801b4dea9580e54ef0f16cd9
781abab03d0366e9581c2830deca5025c8544e286476099501c028002479
6bffce6a1e3153862ce040e6c58a65f67d8a69caeda17c1b1f7fc4e276cf
f1063e50be9fa01cbf16310cc95b35493f57a9436c90f810ee5587531f8c
eedb93394ded809460a8dc42308da4dfc1a36efa98272d5c33dd32f1dada
43083768127d19d12cfbecb6b48e9137f103cee15e5a442950e90e3a9542
61f8c3e42c84b9488f6a5fef77292af990040dfb565176f6c970cb0516be
70ac6ca1c08a025fee1327a14e72aac70a39738b84c9f9b80ae4c107db8a
fa1a103c7b7d5f9cd862e4f8eb8be96c784423c87ef6d57820f51c5d4110
88ac6ec9100a4188b2d950881462e5f8764d62d66c3e72c27f9c87b96370
e248aef2d666abd4bc7ada4dcc3ac4f79caeb401417e5dfffdc15e19d3fc
80a7e3952cf33436102dcbc78a9ef6b97655abae078fe43193affbae3535
b05336960a9e63565dea717ac74628c0c8a5779169f0062c9e01ea49ab6e
56913aa0bc1ae71581c5913ef037df65f9b2eee51fcc94524290fc54bb19
612a4d2d60da5bed06cae642b44820662ba57c1f084506eea3ea91fbd1b2
ad9e72658ec1d6de2e548d9437aaf4b1c1f6aa772ad7d13e3146b92586f5
73f9ad7bfcd4660055f581a46ebe4a677871010d2402c8a45c996996de5f
c33cac03c86a88cb96b2fedc321c756fbe34decf39b9250771da363d389d
7b2926fbf0a6d960b65abc00f258f8a6d0bf50427541f160eed718fd3454
b7849dafafedb207bff2b1e990d07cd09bc672c92eefb07e7429088a7ab2
6f24a5ed349f8ce1af4ee2ff19bf3a0d6983df61299eed01aefb692b60d3
26486266314765a405d754711bf924430c7b0b1928eff042e3039e13dd9f
6c2a03101158c9e3e25e93d996c029e8315cb169aa410beb56eaf7ff5ded
5d0ed4be3d4decc613da8b79a97a789d0f372d518e4fe8593e25d2604aa8
dc6b7188ca2a5c8931eeca98e412010bc15b278723287252908872faa238
afec9415ccee51a48b6ad058d210a4cc15a43059caafbb29589af81df99b
ae6e49b9b1023ee08ea3291f48f9b84ee9e71105d767d0bcc6f3f4448679
ec41e8cfd619c0ec70250e944c3cfa43e3d1bfa7a1a7dfe02d22cddc8b28
3fbb84b633f4effd95903d1b9f567726a9b9118510b6f44b06c1d9fe932b
09d5b57d73a7d4f9694c2391b82b8b2487b9a6aca784ca2c2001b34eb4e2
35f792493906ee102c2cb0b2e7b5d44dce78fd299609d8615d1935bacad6
a2fa0b4bd429bc65fc4e0353da87954e1ba64f169ab31cff42fe6b4cf574
ffdf5560d396e4d4c28ecc2ff308747fc77845c852eb55be5a0eab31a8e2
bb5c885dab3c0332178e7398476d8759e9e2ebc44f231af59dbf5f62d1df
80f9979307753e280c9deda974597fa409e3a132233962a3ab9901055e21
9e38a6ddd0c04bca21405b656e09b3ecf744cd51fd8b720ebfd7a848054f
961633dd688993943427cba24a3340ce8672a37bd8f6b5d267006ddc67bf
51647b06e02eed7fd2f1a96687e7d270799261230345cc171d00e3bc1f2d
22e6b624b44418cbef18aa0ab9a3771d4ca0f5baef23b1aed12bf33ac0bf
a51c3558016a88373456fd1ec5526688058f28e62a30bfb1050bbac8cad2
079761e4f987296a2e90f56b354e63337d8ea5fd5c76a0895b69fabbec6d
55e4a76d16591a345b675862374284f23a47b3515681dba45602a43624c2
d52abc36c0bad7b73e832536872f174a9e28b55bc3354dc4067bcaa5ea21
1238c05ba92d3d5b2fe95c500599d91183c72f712f031d5017835f5da708
8991e705202d3547accb85f4c8342ebff7952d36a40304ab3223fb3d3300
86a8274c7929ad37d7151232f1b2c382d59d30901fa2da4ef251c3239043
4207575b04392dd716598abbd3f0ac27a0deee05d1706f047543c39c394d
5ff2999a90de183e602db8377703a21c61ca318ca94f6634935bac79d27b
7688ff0eef8ab215426d711e56ee70f7fc9cf9d499d608e3c30f8755d3d3
c246dc357ea780d7bbfe1b129c727b938d5157cd59db6b6e06df7fadfd81
64eb60131f02e468601ccf4e1143553dcd5741e060998e72bd385a1acaad
2fd127d422dfb64c00d9a8f00beac028b53d145589680cfd61d2f767d15f
9b361e843b45d0d46d2d537397ae47cd1b4da1c03e94a8de142ae4c097c5
90b1479c11b5c0284d19fdc8efdff88b941132e75732dd3bbd687eb53dc1
9be5b69f45def5907a99fd391fd2c3799af7e7fa0e0b5d98b3be3d108008
ad5e371d9a0719a3de35762dbcfabef1b569c84c053d6ec9ab2f53ec52f7
fab76223bc43a73f70806523df4b1787417146ada3803358a9bc6194f405
80a96bda241a1a7baba688f67bdbcd30f10ed7300ce844cd4067d25c84ad
d3ca5e7fc82e20f562a4e2bb76b56c61033e9e68c3169c2785fa03a319a8
b18c83f5d8dcb1e12b228f7669c3efc744f7ef3e4520aa121faa258717da
c6509ab40f6ebe43e877b8377f89847341cbfdfae715e2dfd2f64c7e43a0
28850e7b06eba7d6efff3f0b363c8dd66bdfb844290618452ad088e3c214
5a546b054170a1666464680b33fd9b1ca017e69e7e92fed95b5949fea3b1
126ce81b6863d8d7c47b9d64a3df3429a0b58ac5872fce2e9d79c538ee56
d459238185ddc9a62b4a3df918a08dcc8705a67692235cb96cbd7def8f8e
f93cdc770c7aab0e215b8bbd40bb58c85ee555e128f95cf16bd6feaab610
810272c208066f6cc0942c3f105ace1564c7804bb104bcb0cdecde1dfca1
4137ddbfcd74a219c747b5e6ddf82a98eb820239a0f1fb5c8b02fb448276
117ab0a59be18bd5be1d72f10102857bffb20663e2318018ef7ba0a5d98e
661284c74465d4f4d92f7da0509adb745e5aa2afdc66441873b819bd52e9
74056369ea5c4eecc5886fb3ee7d3233d3aa87284c50700de67f89d1d507
179707b999ef2d8dec992fbaebcaf45ac02ee38950cd075a8174399f9596
562d103980ef68423f9a4ff38d0b30ee1403fd22182f10d75dbac233afe6
e83f8ec4456a32c0015d9de5275a23a1e7f25b59cb436d389826dfb26bfc
bd2f7c805b3d2c1f3b110dfad665ca03b6eec15727364aaa7dbb6bd20abc
624203bc9936fb6c77c1024887899caf31cd62cceb4e544357684ae8ea18
84957b458b3fd936e0ac542486fa43b535cabc35e825e080e70bfd16f5ac
46a5dff0893a1543c20a237e9de5104d73cab79f45f7b47700485480d683
159aced83444c71ff6df80aa847178fefb70e6318f88d92d24af07b53409
90b772e72db7ca555d83401c654cba6b1bda763477105175ef736f8e3605
bb082f59b64324cfcb533dea88353522c822c1758825f8b8a2bcf15801cf
3023013be170c153455ecf0a98548baa5e52803157de8ff58fd60aef7cf5
250e1f9e588c9a0b4e20a84bb201cf6298122ed0d2eeed0435a47664d489
c912b3a5e2dc44bf6071c66236e5318e03e6f18581bb6b0b728e92a602a7
72f64f4af4035f2fcee08ab4e79d8a8fc8234acaf18534184babe6dfb86a
0b345ffc5a1414640d2928c2a42dbec68eb13e4b8ec7b6577cf880b2df62
812f04204bbf81514c551b359b0d1c7147c20f1eb26242ef6e95b907ff9e
4bfc965584ae12fc1b333cbe3709f27d565b700fc7c529fb05e8db8cacc8
e1682a66240c0ff9d64467f110efa25da7469a8037b35dcd2e2c5b6fdd07
702b75277d9cda857974be08744687da95a319eb469d7432fbfa699e9f8e
b29d7ab25a92fcca7386b40efe4c047894a71fc2cc7648d6a6db8a0f7496
6019aad7ada2997d74607f0ea43c75eaf22587c0ed48f621f810f3c8d829
0aac56f4b052675bb426b9f413615473dbd3c94ed0b33c48c6cb3ecb8ee7
e862e8a0dfddc216eed899e447158599ffe7d51ac106e12f62f100695e0d
24d9d0b97c64bf888acb569005ec39c14cc83889440b15c7bfeef0ffab91
88e686427c95b285dcfc422b522c8f4b16e66ab1334c8ac3b4f201445c4e
332adaaafe3d846f1ef4a2a92fed250634a00880b703307a76653809414d
76158d5be9465615cab3396b4bbdc0efcb92f7c22599420cbbafb825a406
d63ad81961a7e444225532904933f37a979f561aecb98e2b0033a5d781e3
265fc14c2c333b0d87fa12390ba23a84026c586a30270f6cd53592f88e18
e2e6096d7504189441774bc20aad8646a02fc7cb425936f39488fbb34fe1
fdd47da685ecd573b5d2e4cdd74c4bdca09b5f4042a97ae75f2256364d7e
74789dadbc812b9039f5fb23526e5408f33aa28260ed02cbfeec62e6a102
82feeeed748204544114db706b454b2852c670ee7a217cd60a8c5002fa96
2bde197dfb37275a0314d6a15196a38ed131f223173045bc403f59c0cbff
d97bfefa0fba554e35e5a030d5550821fd7425415461f87004b3e0a90582
86781e9fc848a65719649a17c910bc04a1380b3c2a403bd0afec830f2677
44fff76acbb0f750230c2ee20c7e871bc08661563bca15fe19559a5afaf1
37a379a1b3867002e1f481ce28e63c3103718a8896891e9f778ee0361846
15291195f6d7af3aeb7c26bbf6a12ce46aae7dd0b979e7f894439f00beb6
2ac51fb50ab42af7654421e28a8da98e4b47809d975f554a9cfe76a82f95
704e7fb5dcfd8731a269251a0ce26908070b763afecfbcee6246b8edbe21
73e144d65981c70795489a65db12de7364be8d43857c1670558a2b853760
8fc0687e5ab9c08f82ff9a31d8ae87d51b3cdcb71dcee7847d1a882832c6
799069d50b19811016ae8a289f3dc39828349af0238e24d247c04cc80044
96ea3fc50824bdbf673c1886c46594e38326e85bb360fb19d5f7de4f01ef
0a08f8e97f09fdfec437833cc4353b764eff96c5727ed81446b75f252d56
72264154b28d4dadae83c69d776981d25c4b5870b43a46dcd201b947f02b
e19fc74ab6d4d0cd2e3124a3b50302c445cc1270cef31358f4eea54f9d74
4dd9a8e5a398b3ba1fb3851329a38e96b19070c20b1335a2fffa1a8c57ff
f48ebd0ec88a0fe69aab4c4bc188d86ddf6fab814333c50aabbfde9f3396
28e94d9391b51ef43ee6f2e5df06fbf6dc356d6f1909b3c08c00afe9c493
49cf20313a1dd3a13034b8cff867c7f43a227c812748b5ad72c9fe9cb6eb
977a9bd09bc21f2401e2a29db882e41313925a5fc5efc31e1bd977f4bd1b
8deceb2ed5c14657eafabe7aa4050412da59625c437d4c19304342154f82
164c8d9b8bd068036b854143e3240b6ee4cb9596a19a7e800c25ff0ffa7c
50f1b35df71db2c9fec8f5de5778015b3fc0564ef5eedb2daa281367c603
3a5deb75806e7586c65cc27135d23a4236edb168f758044ee76b6da55657
f33b7e044f3c7cd73696d78b225964f74116ada3b17b34b91af8c07645e0
f1378d794e81b2cfecdda188c94fd907f2296592c188b14c6fb7574dfeb6
d0d251632e13b71b345a842b8405f007949849c1eed1623ed0b0f1b3c54f
357eb7bc338da302e2a4dfbe2d5ea798215ed708c76388d7986aa2d2c0c6
6e4b8cf1189e3987656376f76e015d909d3457feb66b12fcb111108ea7f5
04c16261d62bf54a9bf7b8522f0547bf6d8efdaef785cc1a329cf6528725
fd16adab26f4f18ec0bc40ea08b98bc090da827bf8d40154e21c4768679d
65d649471cef0467caa3f0c361ddb2821f0da9b696b80080b1cc265f1805
a1f09377b854a1d77c7c3b1ca8e2a802980cc7a1e78cd02abc0f7312fe6f
770c564c451adc096670bab341d813c6d4b1ba745df1e4c2948b73afc12c
5777a0871308a29edd504adc403d4cbf1584a523d91e8e64d57451b8f65c
8fd298877549e91785bec3247b8cdf487078b127418157485a778f7ea10d
5925a2db12cfa1c1322f621c980928f8804e5575dae436a0944a9fe34c6a
04cbe343548fa7b088c98344d6a76c2c719a499c1047c047a3077c655d85
6735daa8e5492b6dae6b0994e5598e11fd12e26254ab80a29616e9cac7e5
29ae574df9499593144154c0581512b5940b75f97f10413a64224fd858c4
8ca801534aa71e20f6891a4ffab63581983294101dd6a23f58d145faf1de
425b408fff173ebb62cdecf4e440e0c342003837dc803527a39a73f97699
2f6856d2efef8e3d81853d5a85e0c53feefe6185d4feee65f6045f02efdb
2d94cc515da8c91a63d78dac192c2787656882d486fd5de7140d475b79df
6ec33214767c3af3cf7499c1d03efadb5438209da7e749a6a8d053458345
d93423e970413e0e7f2f5a3bdd08b92c2ce366a485bd7a53f0bb2948a1af
8bf40cd741fd762a5eb9aee8573cb5ec440ad74d445d4027950d957f346d
4a00ed4836eb5762303210618b09ad017a531633bfaa33c958524b862bad
b55ba8898c51476326824a39254d1797e84b4f00ca8af56e9cb76c0614d1
06f554947d9db0fc9d17a611c42e44df1af848aaf1f94de3cef3e938fe07
f5ae931b852af44bb38952f2ff9710a19b4e6a8803c39c238418942ac175
b8f082e8d8c93384a3adcbbc78d456a3d0027a60910ea7c09e607a1a41a5
8d266e33eeeb3b0fbbe84cbdebf72a64f93bc179ed9f41931a53d45edd2b
87a6a577651bfa4ab0b8edca4a5e1e3ffd2cc335450b15e582f9901cdfb3
3bbf008b956f39a68af22fe5c1e56230317780dd8d6306b4f704a7b56ccc
0e1fc4e0e88e699241e10fe31a33b0143436f4626d0cb9741b98cc31535e
7f168321bf3365e3c2e05727699b6712d5b0df5cb165984bf69c6c7b643c
aabfa070d38c16766e28a6d882631332307f139017d8c37a46254e2f2b3b
a2de405017c72c30ef218a54e36d76e6e5f290c26fb9df6625d04e4aa000
493c10d59d6043e5de21513cd2441937136ec27f9cebef9c07e681355b17
3bd8c4bae7b9c34fecc6e706358792c325100a5bfcdefa9be41de84449ae
32ced0cecbc066104a5a17a7ce5dad0de3950d68770638476aba0e8d0120
be6708d723118e9e470064b43b5bd3a58ac930f07fc59694770338a896f9
b5a0f1daa0ed11269efec4dabb4750fb34b6ef836f8f62b2a8085d674643
601c86d9b2ea64a6b242b2b4c745a14389eb7b24a0a8712da63e6074b8c0
faf75f4b72677202bf6de38293a7dfe02d22cddc8883af388a89347c5863
93bc0987bea4e01fb9e857aa1fb33c0c3efb3d66e373a473d20350a3ee54
da8c36e96387365670c8935d06eeeb6ebd8600e177fbdfdaf55daa740244
c0f46d710b15210df2a684a1e7b30b6db0ed1b3b792afa5e2613708c87cb
3a78250084e898a16fe67fc84aba52c8cbd0a661cd975543a9ef57b99ca8
3bc9b3f7a9fd81dcd0ae7f2878feedfbbec7e1dbc08456d7f3ba6f0e36bf
cfdbd43eb33d4ef694a6997c084649801a5a5ceb0a22f529d611c5a35f29
ac0379e0c4aa4396f99430844659367d204d6c5dc31b94bd9b8f93529e91
622538ed47a657682ceb24b042411975cc2acfcfa3b98557930651d91602
110ec0dab0f6bafe6aa4888d4fc92273e5e511070f6f974112da342a28c7
cbb47b488145d263ac6f1882cecbee4eac10c78f4a00cc9b6ba419b337d0
d7e5dc76e7dc450d3b22273a64a06ce285569a3aad249d59016fe4cb5e45
20bc698ae6188c0fa4bac26de7f2c55a3f4494479b96c238150c9ee76d61
6c62d15467d36fcf86c2e3e8fa2a2039643d4c29586f308327f265c2c285
06184152cf5024ec19105be9b482d6161597830fcb6569a27776d85efc8e
ca07ddca8364fa5ac53327cfd382f125d468a554c6246123da47673662a3
2b9de5886359c8bad19125b2aa6367f6035f04fdb35f190b8917aa4cd5de
0b5d7847a04bb9c532791f87b1bf976410193168f71c0f21339b71c9bf4e
cee23e1680b000ee3a5323c9e8158f0eb46dac668b513c0531cf3a14d2f8
495678dd12e1fe52c99850b3baecc697abe85a33819f80868e9d58ea7c11
abf55a7d6c9d333c61afd2b42350f24bd4832df305df4f6f3ec77e21237f
5e84c46af54b8d0b57d40ad7ebfb0dd737b0d9407c2a9ed7a9ae16d64b58
b6adb15fad1fbb4168122770c7d78b3998fdc69a7a136fd16645e6a77e22
ea6dcbf427a687eb1aab7fb699f23cf639176f7887eb4ff1802e5ecdbe48
4b0d224e49141d991eba09f36f8cb3c98d1a21761c6569d0f016be5f25e5
540c0ac27a05b59e01ed2902c4e0a5e35e943b5e5ae89f0d752a61923b35
820d491d32648de71f6eeb2ce6dc0fdc0a854e0371482ff2dbc1e837bc2e
6ad9446e3571110aaec5d916a3093746dbcff443ddc2fdae31ddb099be09
d7bbd085ddf54ba21d087fd6470c588cb783c5e55ded02305e2103ed3f0f
267bab4ebcdbc82aaa524b42e4dad253482f469103086ba83aca328a8457
0103537e6874f1d4be727406002343d197f5dd5a3a5fcc6119197370ee86
e6d3aa3941c118a65cadfcc2332e0decd086141eff84b3ae3636d2406484
60b5c23e8aac0b371a1aab188bb9a190d6ae6df3bffe9b0a14eea91735fe
92ba3cb71c59f2cd0d43f86e14b3818c052f70017c308ab75f0f8a157589
9d75147c48dee5f139054c7388fb71d2bcd597fefbf4502e10da68d451b8
e9c3e962dbd63521bbed5986af5d2be4e3be805c6186cb4189220c5ce546
8059f7fb866d584bee4029fc6414e98dbe89401404c70c46350d7ecde6e2
7a1685c9224f5bdb352b7f3dfb629f5ce8071e928c971a3f17979c539da4
4e83e2a37ad7a6738caa9ee216db4bcbb63fa7667e1ec1cb7bdf08b548ef
c8425f613650e54e3c4cb5d535a9287c9036e334e57b3f10f5378e37a8d9
b2bdc05c42751755ca52e272f4e5beb198e5d8655f34caf4996d88101eaa
1957918f56cf5105d15a01fdcb51857d646469075a3ca6525b5c2cf64d6c
6cc1d97c2cfbb4e1af5aace5ef20094816458cc5c3f664aa3cd74a6cd671
760a22759f1412d841349860b03b3628f37371d5c9ede791002fe1a60ae1
99865177369211d1823f429ea0cd8714b387edbc50cf81bce8106a50b10e
97f66c6db616d4b83034859887d2e470f8ee2e5e8a7ec2e4bd520e530c2a
dcd7a820d0e83a7e716dd8b5a4debc2ff568c95912d7812c3c2a9b0d1fe2
ef7b1c6fed8bf896a92eacfbfdbd69e73c57f2bce64c75822828ca64629f
de1e0d14ac10511f053cf398c0e7d3880e84a1804dcb862299328dc23e43
778fd2229a06df0412f6deb2188e3ec186c00085870ef462c93870631ac1
63823cc129fad1486177815a7f938cdc441397c70abe78b22e4250f3a0cb
b6b6b7d797d4177939a8cbb8c72dcf88d778a47ff99f19883416e27100db
0f02642588850f27ffbd034f036aea3ab683acf5dc85e8c884df0b180c41
02b475d7c1381a3fb07ac7dedfb7131121df65a11569db7d894ee75e8dbb
1b0f26fb952e5652932bbd38168d8d9a2a94ba9efd7c4d702f9ca59d6554
ae7fc0c45f26daecc20aa684bba7c15a758578b9f5f4b98413559451ba81
9b152a1c09dcdc9fb5f587d69fcfdca970b26a64ac79f01a9b20829a5969
549ab113d8319695e7055aef1eb52ae011f0b93fb1b59d6ef69c798b4ed2
b8bb07e85c79e96160138b7b44bec84ede0a6fd8bd6510ffd6dd8905f770
c01b984696429797021ef9d441de8be5a1cc58b85bd6dc88b6382efc6658
843b86cf224257370d91c154fe507e3b52c506ebff58b69857bb574f4560
c6961e47fd5c4a1908f9d6426ae1f987a40eef15ead9dd3b44b25d3bf6cc
659c3b087c272c453a445a75eff87aac3247adb7ec0b115d9f3d4c250b1e
5e6a6642d0172dfc20b153618cb929e9e433f6573ed87ae403209e37b5bc
774f47cfd9e2add4cf1f0420e403acc9c07925ec6f3f6ff253beae734329
3d3b1e559f49cabbf13c246124b498e8e7683d39d23b93b0cabbbaabfdaf
e30b3a56e46d333f2b1cb3d4f6fc74a52c8832952d09851dfb2d4bc23388
31b556aaf91abef03595e06fea6139fb140ae2d46283f7cb59e2aef34639
86e61be2e05f4369d86d89d308bb8e030b3047b612b6f849ac694f9cd45c
a66b06cd13824301072a440cf68a767acf0a98dcb38edfdc0e45207a1fb4
58af155f7727ddeaab29c24f869059b8a2714b88924219a4594b96ef9c7d
dc29ff1b9201fb2136dac3e0f46a1ed83236caaf045528e8642c056d48a1
e4dd8707bfc3dac0f45901a5df3f2250e75752cd9e9f08c96318107a05d4
e5cc59e158fa610accc9e124694e704a386adc8a9fabe34f58c9eafe37cc
f0613dee787d9d194f4cff6f83db72bdffb006d4d8ddc9c3a0e86f21b1cf
38b44eca612ac12207e86ae6ae8a5bff8f78583ebef2b07d43c1f6400bb1
7f99f6b6d3ddc524630c8fc74eafd0a44db6a1f6a320d7adcb9ededdbf14
67b4cf70ebdc0ff2e8f3e5483656018b85d92b7c852ca2dfcdb51a750651
38fcdd6c6d14ef5769a2c640927a6490c05b74f2c9b34a2835fc96909a53
5f2f7c85d66f31b5f3eada6d8a2972deb0626f749deadb381f963b1cb325
2fd5cd8b190f80c8448b1968b79c9cd5b1954411a1eb9739bec83969e1e1
1619bdd65dab7b3da13e97e0232c80c19a4ff9fac81fa2967da16df95a04
d317bad034abbffc2b7f15f8bb9941cdb9ce3557b5dfee6634a670ccb714
40c0ad1fc4d70d96014e5989624be9906969e1dc1ceb256a609fbb1823b2
601471359336c0785eb50897058255fb9500a4f0f3f6abae3878b90b5e15
6ac1dc97b5db6848eafd5d7bcc174f995c2c60644a0226f6d45b0ed07051
0f7b26dd41177b09708ceb60e76f7140f6bf56041b2c35528475a5bed421
cf32e3e13005cb65723b8b5809f0b709f5d09c1b39e2851d51407bf3bc97
9a536417b33d66695ffdb7cea77f528f77e5a74e2ad6bfb697beeedecfa1
6827ac129f097b5ef31df700f67a3ddc3eff71b2b08ba301729eb2882329
e0a8a9daf0bc994c96841c86652f8dcb81bddd01ae3c53651e225531aba5
ab6c26d475f7e1c8e19b3eb1bf50f9041fa44fc4d45151c30aa2ee156ef4
f6105ecfa136340ab963b5f801b652cee4992c8ef2b5fe64842acd96c4b1
6e3fbab758488fab15839f1843f5d541038ba8ebbf9be6543dde6ac59c41
f974ccbdd989e44d47ac0c2824b917a5fc6fdc90bdc7211ca43df80df4c4
c0ddaf5f6c5438790854e79b3bd4055cc26a7350ff64e61333df9e1fe415
4bd91502caec1a10faf838f21613703226d2224095b7e44ecd069c109c11
b46affd181f0dfbb3ef0366bb1956e1ee25d548f18a0442d938a5e60c3ac
1506856036aeb7d440c4f7d8843c80a68d0f4bb6b3a70b66998a5a29981b
e9ef8527053acf32be45d550abc464ec203a572405acff196c05db28fba8
be15b627ce0e0d7d541150f0b13951b2c3e3654c09df789f30edf675ca19
ff5eb6b3090f8fb0eb433262e59b2591361fc7af3e4bf35968cb3f2afa6b
afbaf589f201ae9c3c9ef1f68e1681553a8d8806b1f6a6b818da135aa408
350141fa083d3371750841f8927d014058fca2ff8744354bd769c8682b86
7efff73b1c95382623b772ab6ec6e12560a68eea824f78396b9a3fa88d33
da32ba2a77e11a98be198045bf4222bd5ac594218cd8f6ca45e0f7d596df
3ece493a71bab2661ac1a95e455ff0c23470a58bb0b5ca8c8cd53b198d11
c06711814987729d227b90d0e98454ddf45d68dc1662c8782f7e18fd6ebc
bebae5593a4fbbb0c25326856e0f325f5b97fe6dc8554917e88ef5bcdaad
910667d32529a9246d90b8c86186797744ad5fef53c269459c8d65bf4c2b
cab6cece2f3c535db1b43d738c27acef5b74bbce0dae29d9f9f5fce2a256
4f3a8bc8441fbab5ae716b94c161ffaeea2d0f7f13420fe0c530a272dd65
f3eac70e5941491ba41384559a3010df654cd916cd32b8f88088ab37581f
013b19786026fb296244af9f1922e883bd19b7331740b4122f423d1b7675
fac123e53bea3006196441102626fead75ccb1d7d0854be0e7f9873846e3
f07a989cc9577d4ffd9b7cd92044061a47f8242b751aaaa5788fad524b7b
dfc9bce1d91adec1a9c498f8d01252e5b773a71dc29d982a527abac052d0
584199bed81dc7f76ed342a9262a7404a7526948dbee4c5a451f141fb530
3b13d6250605ebbce92ffc60c8899d38da30518695b679b8bfe0dcf88ec2
1d93c9d19e734e64f06ce21e214e6644332d23f318e287c2c619e9c8bcc0
3c780a75e6f38cebe8383e3d7937eb61f9ab458223b4b5b328407cf2ab6a
513e1076e93421542045a8a000efc7b88a39a7bee27a76c5b64bb66fe973
290694956c2ad9a55ee2c9c8ec24b123f81840cfd4f7ec4db1507ceb253b
6fd346eab366d4824ba2cfdadf9b7752801810eea7caec8246d55174531d
bf6d3914709a83f5c923521aaa80cbbeef12af76eb1f5593292133a62f4b
a207f849ae403d3714f99883762fe0bb34005d280dfae4c62838c6597925
9943eace9576ff1d69963b1c27e04d00b30bf9ddc48330a38e76413b6bc9
47492ba38c81d347f6915f6529854ec736ea1df4b5ebf48b3f689055c60c
6cf6901a8b95d20e3b20bcd56261cc9ddbe1732cf7f1fc12f55c291b03ce
a95f241b0d8754ae538d1bcb604e4a70bbc03e60ca99f7a23d5c7ac95af2
37f25b52ef669b539f75d1c451fe2ed0d53249f309067139133a292a55b1
06ef32ea9c34b07211feaae2ea796b0ccaf72ace6abeb5fa85e0db9b876c
f1c7a918d9491c9d39f3c952561d2370036885f36884a0c5d1e5305bd7bb
d822e809d3f1b3f76469a0008362b7b25eb8498e19b0afb6524a70170bef
827b2921f79acc0b51bb658fa6fcdf1fafca6388e2e78feb07752b144b00
1723df8e40d1efb8f2f9e626b9ea58def64588af3c4d095d553cbdf220cb
0f3e17e302a9de0ce4c6b8dc9283ee59aecaca694e4e8667969c7685b7b3
9b81d747f09568d639d9cdeab69a60b463bd8a09fe642b08fbcf2946d9d6
7a5a8fb3e0beff98a06151b5ac8264de9eb53b887b661566c6f44000820e
be724a19817b64157420fc29f26fa3219582287fb35cc0c58e2c4b46c62d
f6a9d1801720f283005883ec0d97abfa5cb2754248b0c671ede8f3119a17
f28de1ea93e81f41598b5daed81b795aeedec983567c71bbd4b442c63e32
c1c25ce856aa6e99f8efac3fd1d24a4df88caa638affe6b7b837c8b6c346
81b6b325d13744a6a45fb90072c0582adf807126b88957de008fc2d0905a
e1fd0eef7ae35c28feb91757bab1fa8b6379cdfa79c3811ff17c56865ff6
202fbd00410fa4ee645b5695b2dec2846b120d6f62a3bb558fa7122d27c0
b7ef70dd6cc83d6a065c41ebc72006ae275e7504e053cee5d07998e2ea95
d7d5423bf3e3aae524ab0c2601a5e1944c83ba9175600687006990109c26
cbb5934d4a43d9f563cf29527684dcf83e623054cd8cace93f55fbaa997c
e8ea079620f50358bcadd709f8d71101311c35a96a529c5471244df64d2c
1f611ff6a2b68e54600953c715bb55e8dee3f27bd15bbc4db67bd257dd0e
e4ab88b9421c27c6a9d6b6c744cbcfd5ba21a992841911a2aa0da267013b
2e951e0e9f38fa8548558e381b0d8c356d48c8c510c2416b03120be1da5f
90bf5f7d098cd383baefc9c8577217dc639c5bd2e0923a60ddfbf756de9a
204e0ec3895349a390cd486f0cba5002fa6fd2986f08df5f6968ec03e1a0
b520a0952a269389a0a6e2ba263ef2bc5b6f6fef53fb419718208208dcc9
84e8ecb8e6bd7c9a1fde3228283dbafee276bc4deebab3b306d05efb73f9
e44d26839be1aa907d7ab9800b800f220ed6218f6166a3b46ac607970f5d
14a51d931bf77c5801112e11a79d74dc57ba5c06c536932ea3582b77d6df
18188c995ef06f340c1cd67c4d56e5ab7ddfabbd91b6c3c103190d8ecf4a
0c5aa562f00d60c3262943712b6dfb6d873bc07a3253360b260d0595316e
1afd1200031afe3db352a6fee3306bd4751cd18a1dcf6df3bb4ffe23afa7
485d5800567c83d3233ca367d0acc4c77a8ee9d0a3a5deced005d6d12097
72c9af4e75e73ec2ecfd071e772b2d29958b431246aa43179f8a43355858
e5a4b93ea39f059fdadae741024da30af4f2a14ebe0c33113ea22ee173a0
bc7b540142154ba5ddb557579aa2126d462a8594addb7973271f78136e24
89aa67b10f75c39a8f55e7ebb88a9485c4be62d9953bf06f7ea0e9e2b278
4c87313fa249fe1d83ef8b7462c49c3dabd5c571247083b8a6be42202c10
8f8ef96490cdebcf9d1565630a58d9eb3c1a668435d30ee24e7a45b86eec
0354471f7bfaa4fcc7297c93ba8bd1a11f6d45a561f1020267e043c9930b
94d10cf13af094705bdd8a9931e50df94987877e40fd26b969d37f89f4aa
6431914ac6df6fc4c9f91051bb49fbd19c7436c462c54f9004ca0a85deff
6fa5d7cb4b6a4df2acc28f0c420c99a805e278add9101092b89ca83626c1
93a58cf03ebc118eeba5ad2400da1dbb3e4af12a3eaa76fc97d9c9397ace
f72c58a7bcdf0204ddb59779966f1c4b17c78bbaa223b73b15a38e1b85ee
32ce797a6f75e1cf4ce311329f9245b9aa798c0e06d70d9a97461c2e54ee
1d6b4a5aa453f951c915d51cce1b777f1bbf9699c11551675bd4375153cc
3d4b780f154ceefce8ea69dce08e7ee6fbf75b066ce9260b313ae0b01ec8
7c16ed1fe68878561e4f00ca0d738545088a7183d93716137ba6f58226c1
aa6d5cb783400de29e0979b828ae819f61073832abe4b7af800e2104acda
d4f1171e0269effb5bffa8918c23ffc26dfd36d08b1d7c438b64534f347b
c1c4cc725196741a6dc1b216826a62e31bfbf4b29d73a42abc98dcf77f8c
63dd1da5c711982f036ce30977f539da3bc7e7dad0652bd048e16393634a
34f501a24c17b1a1c84abdd65fc152f6bbcdf9059d9bdf0a90f582c022c5
283fb20c15a022dd6053bdab1a741b781a65752ffe9bd39c9e510a41d83a
ab16bb3fc64e82bd3cfd4e40d8b92adb887041dc04edd28f0c235bc9a442
7c7b925eca2b87c1259fb182aca20000dee4ec5d8aaec505fb15cacd86c0
977499599b5238381d398a819bd57d593fe2c5393879e56bc99118142e93
9aaed78109bf9a9c9345d0254afa179d4f5bf8e9d5af75893b636ad15a4c
5005a654b4368d1fc73a9ce0d0d99ecda3f2df088156dd33f637efa66a4b
ad3c92410e33566abbe74c6689ff0efafecc9ecb3ed3e376a3e52c2810f5
40aada690d043329d6e9927f6c3148467c05dde36ee42d7c3b9d8b2ca00a
c503419f6255ee94288dc15a1b7a912a00508270f8d686e89d0017b4ec56
508a45211dc6a489dfd34417ff4b6918f7f59a591333c79ca946f89508ce
d8a53731958c892031ff9a02eb2a49b075640a427b8ea9ee9b87d7d968a2
5d23292d50ac5d7e6e26653bfa00f9fb171561963fd4377f5541c0c48b17
704f85f03980418148318ba0b24746f8b419d41268a0ef9a2ce53ed1ecfd
aaae50925e9924a1a54c07f6edacfe7784ec0a2c63c057eab03f8984fafc
50a0e72a6c5a6852d4554975fb212a2e977efebfc36c73f83e64ee57bff4
080dda8e9488ccc58ca66a3cb87b72a790081bb7d4b7fa1e3401ff824240
1cc62162a2294aa97fb9fb01849a7439ad643a253b3cc01aaf2f5083462b
4c8e03c3428813079032c0e7ecf69f7fa566f39e52cf7f86db628c8c9855
f8ba5269c3497878f4c44fd502e5d40e2423718f2159b436d400574c824d
8f8d7d53fe90bdc86fdf53d3556a7cce8586d381cd20c8a0d200cf6ce07b
36578bc711ed5ba4c8ee7baf2112aee90cfeb008a64ac52413d7d9aa8084
7f7c2e6c8b6748b9343c7377ac83f1ffd05181c68ea259cf87766e5159b4
cc1ff853f30ce1b9f7856ac63d4b51097f8fb7356d47d1c65e96d503bab7
dfd09514cca9a1c760d1dfdd814ea3a9865319de3eb6658e479ad1ed4e0c
56af08b12023e83f960a923fc8812ecc30eccba142c211e23368b38711e5
90e00000895ab9596bd1032240254cf298ebab6e005f94192762a2ef35ca
2a46dab28031a829752a5388eaab79dd249be15e91f3c011e86567fd8c46
810ab53daf2b9dbed9bbbaf7faa9790e46377dc29d0d9b6c4fe92db6cb67
bdbc4667ae5e0f309d1144411a896ce97e1aa379cf3632ac95a8472a937a
ac0acfb4768663114f5a7ad198f27eecab3c79c283310c023303f6203a1b
2581c177a3381d18455e50c77dd1842e8857c3529a56c16f3295e1386a0d
b46bdeaf708a562ca340368fa56b34814a06b4ea0e3e0b7d2cf71cc6506a
cd3c030f525d367515013077431df6ecbf2aee3a9b259afc05b139edaff3
78b903eaf3b640e08abe0c579e0eda7428d675e5277231bc6bf63c619fab
62a3daba6de17410d605f2f577d52db2bf2d5c30c3496e9721f72b448b5c
d7458efcc8b29875513e0bc2752230d438be97ea1eb979a594b71f63db59
b171e4d05054963bcd3c8c44de4daed19eda8f75c38f63c58cb778e0fe93
91df2291316842b9734b80a1ecba5812a7b38c427aaa064bca7e8bc98c9d
4f81a8534b4bf12f2b028b1e521c1f30c1ca5941cd4897d7cf88abb6d435
db2755374e5cf6e845a7f205b360f733cb0c7d4f6c77caeb817253ac5325
1a8a723e8bdaa888b1f3ce97e6c09b2e38ab6c3127956d60078d7414c3b4
73d5df407d1c49458ed23d1e57af63319c058893eadfa9854e8271b2712f
f93b8a85af1e09e36f696468563e11463a577ae11e5dbdcd307fd865a78a
fc20e460c7f38bab0ac94efc0867144d4cb0c80ac1596e167e0f57606d62
2fbf6c08739577cd5c3e7494b7c11f3aa886694226ce73ce6119e53a7db6
06ed79af8fe63cd8c0370060c623dcf6b0076f776c07548c11153d16510e
899471564dd53279ed50820a124e9a0adce02d867c5951dc7b9886911738
f45073e2604eb7e75d0bc4b70b5f4b151fa96f8d9626e543cf4544adc54c
ce5f6619e3ed60364bd15b9cf4a506fca063dee1f4019d32f67ca488b6ea
37650a0d9597dcbc23b93d6a2f301cfd61101c4972cd8f184558fc537e44
f9470fc20ba33d675bd2fb3cc1f291ec963213d03f50e208fa38dad564d2
b7fae5bc4647f41505b737d08027421efed41ff3a370f14150666c4acd7a
674109f85f05f7eaaab16ede4c425ab082692b04f6c3c4655fbf92de1271
e7d6519a51d0202e434494c760810e3f103a3e9521257fc6d746bf9b041b
8191008e17a7898381011edb4f094109a4edbd5caabce9563455f76f1b90
b96c35215f31fd23e1b21d94714a04f2f54bcb2de6a212a5c3921d0f1861
0a4814e930e2d52c4f66a33678188b15bfb786d961b6bf8813f0ee514619
8f1f338ab852822ca59e3b8eabc12768cdadc981e700aa746d20dcf4705f
bb42fe13b1f9236e9b76c695b284278f617c0d55a62dfb73563d8dc2e3e8
fa7978bb84617b1ba23d1e340c881d71f18506cafab57dcd69eb7dfb1582
a0306284f70f56aab4ed220fbba80def64812492884c9cc90852ac213dc5
8ae2aca13c687ed911974daa7e1e04999d07f92e4b8fa6930cb3e02dedf6
0b55f2a5276341d5607af004d38fc605faf492aea067aa1510b8a3ce68e4
0b47645170c8d708c7875dbd778d7034635b283c30535ad5f2a802a97253
7eb5af793cef52d89ed1fefe97ea894348204f8a60461ce2487906833523
38c037aaf3e38e2a84e529fc058796837f5d61491aa7498f4e06e2f18f9d
b56b3857ff34937d6fe866d18b9132e60c3e4f08cf85d7dab7a8704b36a3
56e0662d466a8bbee3b187b9bf9e3ea5c12b5a0c68f3be781521d2329c72
c61dc5fee5bf0d38cd625cb70c27ebaf6b79728046d7a9c017a1108880c3
d435587f640b599fe82fe06dede9a3eb1b7315fe79deeb0dc360897f7373
8b4ab4a2745028bacb2ebd2c8c50263f53887a264c2c079c5cf82c25812c
dcc45947590c1b4fcab73793a72cd2c3ce3cb62db7ec9423bd72ac26cbe6
9e407c9746928b8a9a203885c15d219dcbdd13dc1a0184c786bd12ad27a7
807db7404dd721ff0e7cf02b0c9ae07586ebb61b1ed26b33facb6df2b1fe
daf27c2c30724bd0a980bcef0490c14e84254606c26e2189d2bc18830a2a
874f3bb58d2535ca2982a6ab82a515765090bcfbf2919e37f83a985a75b0
3f0b04ccdcdeeaa456701624a364d2ffabd8ef39c61d75cbfffe74407f7c
fd85123fd85b894a61fb3359a3e1770b8a656af56088fcbc2cefb4c59f1b
11c302f812473805d406b0bc14f16f59d4eed3a39102c32961058f22dbdc
6196493a4f8ad46f18335f86c48dd07590e11576ae1cf2a77e55d76aad8c
a48f6bc49a36fc91d0b015482fa0d51757c24f86d6e88371dc7a143f67b9
c84c63224a62a0000f6f8638ef4012f82043942f861cd68b4692c8529c98
ec550003c609eadec7a36d1d4320982168f24d33bdcd6b36e3840e983d42
20ac6a9a38337531d35ae470de306c7f66fb3f59f35598fad8191fb1cfae
c2e41664526f95c676af89cf65cd55f84863a8505ae372ad24e6cec3b51f
b96b3c4d0e41e62db6d303eaa1b8026d46d417bc96d1f36491161403dbe0
7a3bbae4e4699ffeb6666ad7351561807b557312bf33627a87e61481d392
529abe393e08bfd3a5e16315e5b0a30705c09b6e9111bb3c45537230cbe2
04b113b76cb30f64eb1fcf534edbfe187e43a2616ac3046ec7aec5c21057
84f3010adb1bcf24354b33fb99082f5f3c754b8fb3e582c0380cd41a481c
c44f8c9486fd5ffad259c3e83613a9de8d4112f2c8cbc8607f6becf46a7e
c634da8c216d1b692288388666ccf8770d4363244dd4c9caa13c42aba04d
32219edca90a3846d0484b273834f125e22a2f058fb2eae6f98d3bc17301
228da9c4a77ac5fc1e3220bfa460c8f01f9485338e729f6d36ee49d602bd
45d65df53d716f83ff09b8151cf30a27b4aaa691a6d9944b620f8922a483
9bcbfeda8d6612a587cf5fb797fc112bf47820ed0a9ee8182c318302a6df
ef5a86b08b38971e83e695850142b4d2ce48425b69f579658e255c529a7f
880de52832bb8c55300d861f45ddd281a4fe33b42086f0715dfb183571fa
4c89ed91c2e2caf2ee02a053437e33bea486b0544c5648d2aa501fddf956
293a635aa007ce5e28338220fa51719d516cec00ea146545e783e2042d6b
28aabf0feac29ac22e65fa4381fecff9de05aa18ca27b49a3dd504c5b5fa
cee2cde1f5dac6d0517553510d0ed746706dbf9854b591552650b329ea4d
25ef74c553ae155991aa6dcf3a940869a46f494d45207896ac03e3e1127c
43bcd6d65cf3a447165f56f50ec1ff27e73e76dac8824fd6cdd089321ef2
ea294b77a4c9a405bd37c6cc8e245b94c9c1dd094e5ac6950695a322aded
482b2ebc372b5c857fe491a6e49737e10c4b5763e35be42c0bc46f5b4e13
e74cad81a1791eb156f919f3d9ebbe7616436f0183354d25067b5b54f939
fa58700f0352b391e5a4ee56c1396e9343e0007850ee5cc784a09231af75
3c14d942d5f8efdb1aa089902012fa684913231699a6d4717daaa32ff1eb
4f1a9a16f732fc608e9036d78d9dd9078b68f17eb242ec8a3aa122130461
ddce764daddf27c75ce0ae232339447280bf1d38df410ddb6d5af292a123
bb4620898a9746a8c44e64376cfff86be1447b0e4e382307c000c3e782b4
8937ae4162010d1da532d94407faec68a4a790aa47167688e9b3ecb519d0
d94e3f836eaa1816fc258e7c5c1b055a195fb076bcbcc5b1444aa1ba7760
9e7c2b1d6ed55a13c555cf741dc979febc676749bdb2034d0af02782311d
c1aeeed6ad1119f0eee0220dc723a620aa5cfb68a98b15b3e029b7424e97
e48387437476638ff324c8e6ff35711f1cc3cffe0322fb5c9778035ace61
129247275f1228ab2808eef88133fd2b64cbc73597966485bc2e06f0bffb
0756cfcedcbe4fa6e5c0190de39c57021fd05e28f2c3355e0d648dea57ac
f2e516953dcba8cdd5a9307d1f17997a8591f52ba2a26f9e0bdb07f2428f
92d8dc64c011c88a8afe0fe1206d933c4e634765eb9f047a74089a026348
859dae8eab5652fb41c45cfa4c9264637974336144d1c5d01af1bcc54268
e351658424a086014fd737b10f0f9455882d4fc35fa1318e8d486804b669
0d7e0766fc410b708c5a610de3bd5f100d343565b5187b384fd41952e4ed
5fe1c9701bc99c29286db1135dcf07901e3379a41573ca71dca2ab9751b9
00471c06b3a7622e1f925b32375cf74249f70ab10e606e79ede575fd5c8f
100935a79d3e8ffd9eae347e94ff8f01cfa51658872744992d86407ee04c
0d71acaf1056a982882f2be146fc147f68d9569e2d704d61f533e3c721a0
53dc7adb3a3f805984eccfe6c30415d89fcf7042d1489aee119dc989589c
56a668179fdcbdfe57d819d79aa3264878881648cfa38d5241638472c18b
6e2dfa069888cf2cf0c8aaf6fc091e9d018c0eea03b18bd0831b41875e7d
cde86377339533c4979d84c11bc66ef26b8cfeb902f37f10e1765bd92e4d
7074d900af37bf390c8a349fe9246a3f98a980fcc0d3b54dace599166e56
beab6198b1faa3487a49bf853ba6c294e6d789eeedf755042142819452cd
51aab565baae086e7588fa09cea301007206a188a084df3fdad491d3ab9f
50e21fea658ecdcb67438dc54d182262324622160e1cb106d771e8ba6b50
d7aae14cc4a8f113de7455fcda5801c4106d9a8a260ce62fca28b281a1d4
8f5fb5f6b113145e01a48a7df75a18bd208b225d1e4cfebcaeb2920b1255
8d238e7a90662cbcdc8ebe0211e1f1837dc8b277aab4d6c98f2a190719d5
b4331910228ed4b2d8be2fd2235ba5817562c4513e4ca706242292826646
c086be995de9606d881d6273228eb0b81d679e85ebe6c5fecfe9d8cc1452
e87b26f5b1989e93b494ada08e97429e8347a20a3a47a1ef70c629681bb5
47f935950a960defc5032c93a3fcec2dd261a979df9adb009ebd76b35622
0145e22dcf298a2e0e8c02b9f67b6314557c5e793e3c6983862adae8788b
06e0c7c76ca151b7c014b2a7e87198a5c8d933784cb69f3115012c97fe4a
a1186dd4bf5bc363ab75846a7d6172500993d7c6a1ba0deaa4f84d0a9d1b
bbce23b43fd134ce9b3609b4245695969867e678afc00cb9faee568414c8
11e8b50412622a0d4248abb4102992ae9ac1f1845f7dfce9282105ddc183
adcb2c74d4bf2365bba742da26a0c94081b30ca518ef61663e8ccfea90fe
ef61fc75223bb75649f884e91aa43007bc4eeb7ec62d8101fb53af295241
8019e5f23a074ec6200276292169ec05d6112abab41f46f13c89393b1ffb
11c10d3ba42feb1888dadc2159e351b349c7f74695f946b43fbd35fa3d06
2a70e717dd621a4468506c7919c94ce499799121c81f617a672c655e5486
0d60884e106bade9c8447c770ba1841a10746d988a6e702e0dfe858794d1
0c6a4e4fb947464c7fd649702f0312d4162372e8535bddf1f94cbef60263
eb2531474a4ed9e44f158030bcaa8a2a19785dcf8b48fb23868a5e5db06d
5bbdd281c6948c5ad5e12775195bd343ac34ed1271875378cb32bc7099b7
5849fa6766ed7b7d763cc2b6fa58a01ddd74cab0b95feb9408373bb69bea
75b6ed23b60b6c151a09da330d28a113581a46c179110b3b552afd669792
a9ac729529c0554f6bec8248b7f2aba56e69ba786d42f5fb261068a0a348
ec4712acb1bbd251f778103b102ad0d70fca9b1d60beac7d010971b8b8c8
5077610e16f89532ba1c2a61d9fcb6b6dd3bfa6c05b8a4a24f0d4c610298
76b5af30286d51bbd601b80823ed0e6a1341cd672c7d2997320ccda560ab
02a154a057e67b2952bc6f73f514c5330ce68627fae5f6581e15ebf158e1
6ec62716e1be042dc29554c98592d5c4107a4331c4b890fe7db0c52c71e5
020504142d20450cf4201bf4610d8297b964726eef3520a494bebb5a7fd0
b35021085832f80ea918b7686d30c07e500648ea9405b9f5e54098901f1f
296ceeafc310ee432a8538a57395cbfc3d3593eb050f2e49db650fa68baa
c447f3ef543846e2046c9debe9036a01e54eee8aec9b374bc5358dd2b9b7
2f60105b38f20c45356dd5002aad9bea41c33ab9a31ef1a780beb0e3609a
da33d483e9b51659ffb147473782332074e9903d8970480ca5f16f57dceb
c0221835091794de4cbe85467d2ebd48ae8f318762fcf33b6b788b8b7be1
067d07ecdc1f064a69db6744757e562334da7bc524afcd56a86c145d2db7
43c76faf71a2e4c775cbcfc8c7e7cbfac202a61cf9832314948d8bb46aca
450445241602e47d4fe369d423c6591385ae289414fd94a5cd6752f015ea
b94f6d538ec683199faacde2e367c4a03c99b6ab4874241d182c40875dea
7134fd70efdd1189b3a7fe7e33b9f64b07fdab9d752bec3b8dd7465ab76e
3dbfbefdb0b054995f3b961038c07dcf3f7c33fe0a8c71a11ce4ecae11de
07009944f249c26a1ad2137f2e3cb7ece268b157022bceb1a80d600ae2d6
2d7d0cbad9cb1a708ca4b5bf0d4d7cee710d3efd5c00b82b8d7ae3e1d1f2
265a2174dcb80c514aefd4de6555d1ca8c9b3339c00cebd0b83de2b812a2
63f937fa870dc4ca6cebcd028e61d35b1ff3cbfb70032654e660950d143a
c0516abaed15eb1e2ae8fbc2907aed922dbb7a6e0a38b07440ffb87dbabf
d4ea4c1d089d16b07156f248dc0b23b13be0532ca1e8af87db7c10bcfaf9
7d26db3fbbdec218f8574afd20e502fdc9b0127ad089bcde4efadcaf9117
05706496777f4402fe98614cfa3b59f5d13ce438018d6c18ad7789a71764
a4b81444ae8b34a12fea8c98d8b1fe9ce98e81be3cb3a6c4d97b2f28abd1
5ab62ebac52aa90a768242e6325a834e2e9b966ecd6500a303769bb932b0
eca95c3fd94d55447c178358ff7b86752592630bdfac54c797858dea2fba
6b253178943b87f3aabba49fcf7079b2a65998edbd7ca8abb5340fb31a41
aaf5683fce951fe5f136afd6982dce0912c2f1b67aeab2df6da9ddc821fe
49c22b157ffc9f8f16afe5569cf19b6efa184b534fbdd46e83bc187380f0
b273c948f0a1e9c838a225e3348ae20af85abe91aca6c0cbe9e3fe2067ab
5a74d9a34c0382a9335d4b43bc8c2fb0191bde517c41499ff62aa7b9197f
7d793a007df1749f2f08e454a677867aeb69f259271b7d58c05cd97b4192
07bca94759b8562b533f4d083babeb9b88bbb9ba88c634b3aa7ba8db5e50
c6330d2331ebe4dbad2c7b95d5b75fb0403f78ba5cdfb09a70204a4fedac
6b87288b1917163ab0e66fe350ee7b11f0e15db2b065859477ff20f0ee1b
716d69279e0eaccaf803d886cb1e68b8781d9aff281ac5dc13b1b1d0506f
d389dfca8a1546b061072bff98d954b5efba7c00416e5aa1107054956799
0a4c5ef4fbfeb5eb70565c1bc0b0fcd91c70f997522c9fa26067820fe9ea
2c1bca1ab9050fa2cd327ddf77f66638e7a0eb67fb6ec6b9eb670d2ca978
50f03a43377c722d93c2095a42a369516741b83efe658156b4b74e191728
14758b449e3c3934c446e33e942fc9477f4504c465cc53c842e9d8796d58
0af2bde09a2b9b9336cf75b518897018f1036fa4c3d836e2105475baab50
e6e1f0f012d220e55352d8c7952b97a0007f438c0cf108663303538926e7
949c2c9d9adffa1ff57ee17d25adae447383346c2b0b703b8d229cdf4c96
b1bbed9d81731284b7493679f8f3061f6b1a2738c837cab395cd08aa2f12
2555268ad962bf06e3152af4d1ef33d6bdfceb0a27d2f66120637f095093
3d5c06e94babb34497021bc392855477c82026e878a82492beb4ad30fa34
dc70154bed06bfa8e4ec67a9386ff95c008eb9a8e3d78154647b362e4128
6b5bbd0baecb9ccefd58b3e0ea92325f8ab52f9ab57c9e0df6e11625bc0a
9c2ff306799c4552b372733e3f31dd95dc0ab9c1d3c9faed81c8db909c3e
ac565f833092f440c710a6979df78723f22af74d5f41eb89380ce0804963
12e93083b3525f5881dcb16de5c9731ac243d493469d846f3fe90b2421ec
d9bbed450d6ac39353cce62efe23cfb41d60b799f82915f92d662c949317
baceb48cf3738edd8ceb18ff47af045c22e82094fb40d0002bceab2bf980
2f180f0a54bdd90abc1019bb6c17bfc81439f0efc155395c937bcd518401
06aeb82a294b5b0b7c999fa9cacc539f759bc300238c1acc32fe2b99e34c
640b44f2a71e01c97f267050cd5f23e602815cfb36d95751c4129437eaf8
a135f28e68c1d9861bfbd6087faf3fb6addccfeec42109856346c4e04900
1994cb1efb395618ddef54fc4db293815823c8bbdef1924ce4d9d1248c68
489db6f0d8c81685eff0fb1efcf7fe0ce5d548759c9536e0cd486e219de5
89d53c20fc7292990e5021e44c6b8d7d34cdb5f1ba2fd244b6d0d47576c9
6b02a308b27db0b3762f6635aaa161254c4b1eec3146c99e05279c5fab3d
a4487f7a1581f880eb2c36f8edd3936d7939ec1ba2d6918445f09c1e9b40
f5c43a21023f79d04b4baae6458609f0ad2d2c825a190a39bc0ff87ed253
9ed1d6b37e7499b81be6b24bb30aca9d69c64394991efdade455c60a689d
6ef85ecf2f343cb976175bd26fc367b6325d98159bcd8a550e66899bdc00
c4c4ac619c4e4dc691ba85e1e40aacf5572a27a36530374dfed410e6170d
c716c886cc18556220f53b06f7d37b717da877ec98b70ba10d726492052d
0e79289ed89254cf802717771c9069bfc6803aaf7b7a936de57241f439ae
7255b1de38e63f754f418374727c8decc34d01e05c55263040cbff9a21e0
54bf30e04b27763efbb912bed6ccc5c9e83a4ddc377a1158028b4041188c
b937a3429bc37b42defb84ddb377683c979951a9091c7522ed78f5f7ac2a
6e486343fd7dc7de1fc117deae3a1d0d6ef460afdac1b6bc27b3a55db5f2
174c2b5fe8d70cda4e25fbc6dae7afc87fe848d7320c4224b1a8afb5cab6
8a6dd7ebe24c019ce1e3c92989dd16a39742a485f9a154f088921bbe5b35
1aca9410fef273b5bb1fea9c5f058d1240410b98dfdbed2751c1b6b8f648
60b65b99b81d7bd008c2b9a05f5998ad761e8bd2d6a581e4cefccd082fd6
906fe06d6a4297937245dc301a1846fc0ca5b1187da764cd13ef7741e425
9bb27433a2199affe88648660fc0b14f05d88fe9017bfde9ae8175202af3
50352592144a87313fa2b73004780a360b58ecea252bc277a4af4f1743b6
a7c0075ee2c776474a294d73e83e6cd4b703c155cf7a42fbc2051204fc4f
674eb0c01f78345513271db6f647ab430c7611e4ba35502cacc038ac4965
ed39f7be415df0cfc8d0def78b82a8f3a7e1b21a758fa68aab595fc3bde2
c17ab40fdeb7ad8c36e056dfc1ba129107fa8d344e22381c4fbeee5aeb4b
c1c2fe4408b0bd04947f0bb1706a0b6a462fda0cd367338e14177c8341a0
59aa1ae0a2ae4aa4091175b18a4a1136c6f58ec23e5eae2d2575f07dfc41
c4b7b5fa6b6a0a4375fec139ab41145b87af21e4fddad211db50458b11bc
3f7708acec43189f6147443dbab1749d3590c4e0f6cbece819acffb89561
92e63ce98bd50992d5406c38163d8850cd68b95f679f384b55896bc9443f
13f264a4f2f86fef603e8354aa1f937d2acfb4473e923f808132615aedb9
d56ddc1e42e76f181fdf9105cfca5d66d0b8435001631bfa435413de01c1
644b1d2b0ee236d19ea19da99d46e5d336526fda5a006f5356c0c5468b7a
ae732f4efc73026a453101f98dd647fca8b40150978fee8dc026e8df75ca
e68c28e638004b6ed88f86abb625c860246a6697cb0feac617f67c1709a1
3013b347ee0a692b66e1dc43c7d939f3f612b75e2e4e8acd2b309b78f024
235a1275c3cbf794cf3aa82609630db169847d7e87d79b5dafb2e4ffd579
b06ff1652a8e8f20ebe170ac29bbf552f42924f1b7e4edd4acfce0cf6d03
7fa3ebe272ddb216929039eb03d1d6f5b8b35775482002ec19589c7fb96a
ee3f38169220b1e837065541817d3d0bab24f6c5d7f2d82eaa7b98c62858
b72f4ade616a8714286a953c350554d2c055889d9f57919d91883776ff92
c3f10537794b2dee049196d118a2943336265a345379c17d3a95b833273f
4d7a040e22d68af948231636d47023a5e309f4212638fb29f49ca013ed81
29fa87015570d895a84f19c646c631e1bd6916b5a71334e124aa46e579af
707e89b51f9d5ba97fcf8ed0aac0e4bf38963463e16d7233344b5bda10df
cbb136c432c77b22ac2fc8f8a9638070bb28e71bbffc62749a0edcd691e2
fa3e3ca0a29ee37aabe499a84aac4e61e5cead84be0fcdca77714bff4b30
d2fbf4b1c4f82cd443420975a84a7c642e4e0fbb1a671d17272aa124f480
ffb6840923067d837d98e1565e16211063890a2ffb00240560b6b7613c22
ed4936016a68ca51ba4a833e608ad004957559df49e6a368315c47b40f8f
ee7256fd56d8ff193df043e0e72ab540931e87ad9046952d54793a0b20ac
c7e084f3ea40df9ec252d61df768b4b6f06a39184112954e5e6e79c152c0
2e55441c70b96f49247d6e6ce829248f2336c3b81b5c56395631901f6cea
170293cf4b61b815209f4f35f72290faaaafd2e25ed63be7f566bb6e4a02
4e253777a95152d53488ce3f8138a4d389246d7b819538afd826ee08371d
1b96fd7e33e1de47e138737eb580d0df3b1e2754f44f44ac1e8efb1dfa72
d07b4d239e011a696e7327d22fcf0e6ae06c6550c1205ac1e7af7fc7d2e6
02fc53d83277a37cf116dd6debada5e0c20ecb0628b99a2ec8dff9d400bb
5549f71593e2e876e3c1ce5c393639880ddf500fefcb7b4a5a16e776d38f
9eb4243d490e0798390c71d6dfb88bfaba59bf1df8cc9b50c17489f8b07e
ddbac79da68a9f2d2801f6894f302a0f9a3df987a27f57611ee017cf8eb7
a4e249937be70cc25611f6228ab329acbfecfe092b7cfb4ec4f34775e639
26a230536b0f260d8b8bde7c61fdd7776dcd1549c00242fe61a4e9f9851f
42405c3385ac6c4184cb12f11a39011bfafd4c8cc0111373a57daeec385d
d1b65c4415115b46ed9753ed3fadad3c728e62dff45a05918b294a7f896b
2e4e789cf23e7b11335209f4f98086fbeb0141c1df6654fc4f354583e351
ea1a6257c5f7ce75eddda601c910372c6c733609ab0412151c253e01a2d9
611a25730694d8ef1d78ae233d6d514e959c6bec783660a9a5f23d8940c3
d2413df57855856471d41db994b0497477cba339f042e1e4bc194210606a
24f679b9eea3a6f996bd01bd1314c5c06c3f1e5c8a824fc44fd07512b3f2
fb51c6b109edd01a33d647bd5e43f0572397e0ea3d7334a8b4bb5b9f0bef
87d45056291136aceb9f76a6ba2c0d035fdefa30d35b5595ee6a5ae3294c
5eb8cbbe0b50dc6296dc33e6dc886d61c0674cf77174344c1b221dd3505e
866b035bb9b94c84412269252cd500d0b220bb6b7e1cd7feaaade279c2e8
ae2aa0a3ba16077c625c021e086da74cb2bcb9ad0f882836e259d718dcc5
1982ae5ec0811e6a5443e11f5d8783a23525a43832b0d37cb9eee5746260
d01aa24757551f54b22499b4c79aeda9122cff8068516f496bbacc9a3521
8568f3dd5615cd40d2d866773795341525f986d75fb3f03ed7a92c1eb41c
0e68f054fbd72de1d39c02df750f429200e3048ac70f0a992890fa1b155c
c0bc04c9c93e75d405f384c00b39d547f38ad8745cf19bcdf2831ed52b5a
1ede9da730f7db3cfaa05142f5c3b7f85409e3a167c608c32a744aa62336
a5350cae20fe18da21e828ddc03eb477280d38f3158ce83383ed3ad669bd
9280993e1a8dd239727953337315bb205e8ff3bad4f8e6461754b549d410
1b35841be60266ff21abbe38d9b992d9e690b5393171cb81ba405f1eeae7
9b8350819d054a01d928a65d2c23c508707b6e6b7662f303fefb4dfd92cd
071011cb73bd48e390dcc8be181d90665b2c647c6e2fd7f9788ec05c6d59
24bdba0d5531d9d1684880d38cc80232457a0d13c09451041bad4e3584a5
f04dbf2d91d07451d6094131c6c8cd059ec9b8a5f9e46689abbee940e500
ba7a24eb4355e7589487e801f9dd5b2fdd91bca7dbad5ae4dd5a907436d1
f3c730f51eea11a7b612737288a6469a2501dab3fc1338a34f0a3415697a
0f9c208052bb9ec84436fb2c6ac89cba0b66342f57d1068feaa82070d328
97f55753b817843f88456f07496eb2e54e727f0c60c701f8e1e08335060e
5683f22857fc4fd0339dee36a48594217dbfb15a4b228bf7e38d46a34ef9
0f9d25eb96ccdbb51eb0b82541990f806323cac092afa528408756c03924
991d7fa7eef875dcb9b38aae6cbd068f1289cdda4ac716dc5f26b6efff0c
41bf2b31df008ddca138e06ae2ab00ac1b0e75b94f8c4f71116446d9c1c3
d7e1686c725feab9be235b0315da17875b2939b601f4560e32dd86841b57
043ff07796d3844e1e81d3e602a9e4b293192d7184473fb8d48c8530fc58
045ece3a14009ee51fe8df42938d956cdcfca348d405077a4838a1430762
c9bb7c0be4b801894962df0c4e6d132574272b15dd143f018ccc09c38702
a46698e1ac70a64eff7802be9a003b3d70ec225c98d30ecd1cffb06f2a19
537856655070a7931fbd3c5fe9089854a62fd6fcd5e864f9b213c3de0a7c
692888b026eb66af7b77d1898835f10d7c0a41eea17b086ef819479afc8b
5347be26489596451b144cd2924053b6db64c3ff4d668a68f6973fdd6f95
e1638ec9f9980211d7ae87e062321a444994ecc3946d8053ba076f3c6bad
86e4fd946d79c6b27b175ec5f8d4b796366738b7296beb7b8712eb251b89
ed5cd581c2c9008e9005de5050b08d8ab0a9662c0f0662c575bee2f06a61
ee6212e926655edc6f75b96a5f7aa21b38e7ee954eea0dd3758c108636ba
2be0aa458abd173c88c6dc6ac7726a87c4096fc5ac961b323850edf5c2db
53a5a0d95ef7e2dd70b887b4fc58b98b3c944c4d4013de14c22c4a1f8cb7
bdd424fc5ab2cd060e32a352365189b1c51951069ac0c032c25734e9a705
28eab16dbaa8844fa62ce8e6880569e62929df4a103beb415fdd5161a843
dc0415a614f11c14ac66eb34c3d38f51e04cd84860613693571b4ae1c11b
c147dfddeeda541252b3e6ca067c4500cffd484b7df735ac8a009f729b7e
11ed79ba3b5ba5a8d674135bcdac33735381e56033ba92dcdc9f29cbf6ce
b8864cb705d9f7c1bc0cc5a0f014fd650d901eb6c2f5ec9e0cad5d9e59e1
71848a8b37bd750fc17fc83e4af6ee1abd692ea22e0a6669ce5fff3a5c7e
c1e6f064a2823f7dd96e465ca978111f9411c7b955fbc9470edd9a8aebdc
6b8838c46b754751d7965263772b823a7176ac0df9bb2a4c219bc4a18e71
3a5630eb95ee1142470e9f6d824d2cab01fa121bf862340ab27f042fc7db
87ad3fdc4e16e2e8c18e425e2eb3a083c08ed01cf44a61cdc3aad7613b08
7baa64d541ca0fca7a6b5e75349b5f9804e8e36ef1460fd1ee7ff07fde9e
14f339ad526c9913bcb976320e8144938288dcd52d9784edc97a759cf199
9d279b625aad051f26ee310d4c1000b5fa4f14197d9526b7429a970f24e8
8a34095005ca98594b2b0de7e9254ba5e5034e3cad843a09dc5f7e38c3de
770befd390dbeede5057fe4555159ae1c40e46be314dbdfbc5da60fc6f13
bdcf97fa5bd4b2ffaabf94270e459c25a275d5d6546d2e887ecb3a5dbf3b
f26e1bf0448f37c87d3f762eb14317d7113accc503f5ad85c57cefd8e77b
db5d649659d83e00eef7f86bfe35e8fd9602d0a3d27c55f9105450e66c5b
2d25977db740b8a861a51ec0a2ae150b173b418c0740f58ad7c180af9013
6b84f6143636cc09f4327e73e123d35f26828f354cb34240cf67618acebd
3f3e4e9793629d197269c769ff6cf1094fbebc966d5985b680291910cad9
fef36a5fad0d039be1d85847a7b21b1aca5ab5f4a3fd91bedc8ebe7ae603
da44f334cfc0f68eded0850cb1e6c77e799df0bd877a47c36367f566a1c6
783acb8b626a233a5e4a635556b90fb11b10e98c2dbc28d97d6021a4daad
0baf6c6229a4c79472139332e4b037a080dc7f5fc91486814d1fcc598775
397772a41008246005d9ffd38aa3f24a4978fa8e9c5670c2f36fd3d941aa
6460af366d7c9ad092b1ea3f4d6ef12c449fccf28242516fe3900adaecc3
8391e2316b7f4e96194e74798a6bf0e622d094d59a6a241c77ee3999de6c
b9bf867de31cfe5d901c75a19dd5da2fb623634dee3ba7c0574d09a2623e
4eee01b195d1d71ed619205ceedba026b8b9c3e1973807dbe2d0c14ed5a8
7ea5e4add0daf503cf7d22e18ca4f44d642d7eb111d46bb7b6cf278b44c2
9c3f423b307e3051f3c70baf178789c080853859adcd18f13d00559ac01c
0a19507b1e8d8dd6147ac5d84f27b9942a4141dce3be9404455aa26d9509
7741f4e7caa6844b11e8d6ef27114767dea108493185be65904e4aba9513
5ce54d8d1c5515b37f06046baedb8da4c16efb66a510874890f1bde5bfdb
c9ff038fd487c7897cd33377f611c757a162c0a51e808d13f447dc39f703
22f9137263868ffff0b85f8bae6aeec72c3f5ed6f805a8417ef1a78ba0ed
936b3df002b8146182d255e6fd1d5a00a797d5db652e17032869aef003f5
df2f20c972f0d0a304ae2cc46f291d919d1864d71af52ce72c828a11e4ab
6a29732232d6ccd9c430757e1b2c3e14ad3f1d0fffa98789bdc49f80b22c
3077348f6c13d5fce5b9a40baeb82038725d956f39bf2907f82173d8d0ee
de676ebf8d8a031602340897547ab1755c02cdb7aa99eeea8f472d2dc2cb
dc2886c0c39c9ca7143ff68e8d10ce17abc35e24ee2f026a35d90791b4d1
d82a6e2bbb71544895edb50f25ccc349a812911b51210dd88da1c7f3c8e9
049b2195f2e31430283eb608a6be3ceb72f378897727f0bc4fb10ec7db90
bfde145b609ff808127dbd0b7462d7248554fb39f7f6a02033cbe06d30e7
abbfede2a45820aa6133393bf72e4e0a22da9e816cdea6666793dec5f703
9ad329c1c05b58413bcdbc72b1b6ed4af54beac1db8a100f47f7a5602422
285142843a9584dce2a46a167f3835d1c683503875f50efbd5c5ca13d2e0
451f3338ae609d19fc30b65071fffa72b6a6b1d8b795c4f5cc68ed8eede7
9bc3d7627cd38cf33a97d58135e343436fb4b2016dac5d7af738d310f41a
530b2bb373340eda5697b9a274233920381c095223c1417b608f4d9e4722
6f414e146ef0a144a5af378a887d8f48d7f83900fed0285036423e205b8c
94ff5228bb628c21b1d975bbfc0746d3520c56ca1296fe29c8f7990d3ee3
db55e1e7c30092552b7e0916116d20e7b1cf8584baa74b9cd28ba61557ea
44c993ba5210d77d5d3eb51105b24cbdfd5fd2b7a210e5afa36e48e50fe4
a0597da436b4251560ec7ff4f9a2551ecef11b2f40903dfdcc20af049b34
f72414c64a673870d7f1548cb9f0ab1b02455b419444fdd11c86b1a98497
bae6bb9111a63878f1ad2ef30f9f987caed9cbd7971ecdd487dae13e0325
2724868f12d355a18cc2c11c75802eb4bd6dbac5070146af02e9dd163201
64c55cb9b7b3f798d2cd00be5f8883c98d3cf0a6c70ec2e05e83a090eab8
fbfda992218414de6155532b76d7f2f9331b3c9dc55afda3e905d146fa5d
6914f87cfb30c702900715a5dbc02f6f78c5e5f9012f91966a71abb6dc10
c56353e3d8a41fea66f8511749911dbdf79b92b3f35ad9568c60dd489adf
b084ab7f053383a4c82e220c093f8bbdba9f2e7a20f9decdeb057d9d2731
eb3284cfb824a19be6c452ae52829e080581d9b3bdacda57b73ccf91c50c
f5882eadc44c19120144311c2abe286b3cb6487e773aa97838dd2c39fc1c
6c27dd6d61a5c97aadfc7a3f93d7acc431711cb4cf5d89b7cc2f36692103
08340a94bfc7e382ac4b2009cc237d53fa55125386789b5dcbf46c8e2cca
3061984b443a70fc5e92cc155562d122ef0108a0aafd6df2b4afcad44ab6
e02805996dfeed4a253b481eab86fa4da2856bd798d44f56e17941bfe0b6
b69c5bb62d6e633b307a30744ead658bdaca66e6f03433cf98c48d8339f1
fc9da2aa3f8c78176ec40f32884cc1d9f9336316ab32eed06501f2eb3b59
362e881012783b5c704fd0d40c11d36a422d0c7a516ca2d0eb2e6ca06a3c
4fa62cdef6c779fb36f2dd3dcb15a1050ecd2451572254478b872d3233b3
fd90f2346323d280184a37b73ccbfaa2e08e6355e34ef9ffd097422fb3fc
2c40c395fcd25c547d6a2b252664109e68fe0f2dfb65f1ea2fb062479d3f
aa0393c3ef38972d4ab96be6a67a1bcf8ea43b3f1999e2cf71cc0893a58a
303882a65391d8b28aef61cf35f88e9f4d818b549fd163d23995142cbf1a
d2bccbb02c7014f709f46d387cd0d1a9eb887bd8efd6783a75d9e127a83d
caa6c50f5bb141e3933af56850e8190f0f26ff74c9f8aaaf1c3efd7ecea0
51a0f4f8470e66e984bde2de4883c63ec7937a72f337e9bdb096aab8cef7
05bf1e6365ae05fc327e28789d0ec417f5e7509c8b6fbadd79762f27732c
8becd3c17642ac74de92636c9641750031877b95e7003b15943cef2e3a4e
d73534022bd01982968b60a5bfeaf3ba3e9a587a34719ce15bf6df9dfffa
d9d76cdf8ba8272d8135cd7eabad829df542e1df53a9f272e7c0cc5ce377
e52d85365adf1cfbbcde3fb74ee08414aee7db027e768f91c10a460d10c7
bb24912a43b07e212dc25b4794716c8a31d94cfe93493b6bdc80bf5c95ae
4e976b1f64c0d24e6a8ba9b86c60b51ac08b92779b5f334c7d3650835623
2fe960e995998f24b99f60a22f0788c62c072a9e97df4c4d029c08db7d49
af9a1cf7f66999ca8fd7db2028ce27eaad346f4493b3b35ac317c0b496c2
be48620ba4101a6b879390deb9a50c57dae752c2ee596e4a526309003309
c96fba70f489db86b3e24505fefec0a89fdee7b490d22eeb70028c7fdb33
35383dadba5485abbe87e683c42d01487632704c53aed4cb0cee7d4387e1
f4cf3773c871d53f7594802fde36cdf37dd09ff7fd17a38fd04a97230157
593a043ac0b1aa012b2159ee4eb892643c61f833c9fae9f47777a6575b9a
e34c0c598597f541b84efc70ad2152d2c421583a0f9b6f766e8a3ccd1186
0c1355eb5fe8bd578a3c3787da94172f2bcc6fab0d19643e80920a85944b
c4c80bed478757f1277bc1fb626e44888b649a64d3d3cade8e808dc06e8e
58620817e745ead6e78630ae930fc2900069fde1deafb250e177e5f31a73
ab7f7f510fe791d52b190d6adb63c8cedda38cd906ddf3f0fd6fe0ed9f1a
16c013028f08033ee70a173f39537a970ba5299e052451de8577ec0e99c9
b181642c0937ee0831e271aa518fde19da7bef4ac3feed2d0222af698d26
b79e9c7831be0cc19d345824e4d7037b8b2ca87beb1a085a95a1210d8f98
1bee476309fa419ab1bc72991b6ea8562c61e728f72e45f28f3829095411
24753b53ae3feee01dc4687b8fb5e3611ee981880c9cbf36a055845cf0d7
1f11aa0ffb4f3afa8772897ba91dccee3bb9e0a3b1fceca83644d7e729d0
26565c650e66ac7acd9102c5a7dd4b73382579ba5ce2038b862c7529dd33
eda08e557a6715ea998780ab61b8450a107f24c1a68337cb1b6f7b7537be
3cd1e4a47a7018180e90c83a5532d4fd0477f1d58d2ac704ed939a446aa4
1ed42a8b98a72dcb99bf68fc714f7632c34740ffa904bfa771ab00c2aad3
e95ad6d992df141a11f9fb26011782dd353db77a14ccf788a2a151e50e12
4f143457991d35a338739125792266672003868386bfa19014d2da188121
8eab5f75986c0ccaa0996234164234eea3abd1c1878760356fa57f9d9a6f
0cd290e76cd0c1e5a3a8dee32d89ede1c3a412455af669fc2b2a58c31901
5805b54f7ca2c43ec5aa33bcc2a69b72c9280959a8461148a47a23a962c5
06de15d5b1f463ca0a8c130b8c42dcd986519a349922dc574248e64b7c87
cd71f57d8494e74a92368f9a39db5d7fd5f6776188cff6a80f4cfa2b52e8
2aa66f9b5fab1d5c3f92edc2663669552dcbed67982ea8042bf699660bd1
7e20db7adaff781559888336e413bfa73cbe2c38c68406e1d53b3107b915
2069f819eb08ec8bc0fd8a62d0edd06b1a6835c2b33dee20dc13e88026de
86e1dc945d553ce86fc13c7e8cae19d09895e1482f387e2c43ccf900a6dd
d7801a1e06304c2ba4394c15c8f5a29b3a31cad9d837733a98c8c4079c9a
70e0cf4328fd87ac34cdf49bf0a46ba03bef3131222cb410c5900ac7dd2a
5ea45b909d469c314a978b15e60e9f176372454f398efb0d64394305e17d
d42d6fcca3f67519a27a39b47c509881f585aa5574b579fb4d79a43db952
5ca5236e5157d5db65d44eaf44aed3c38efd1db47931de8f2842cd10b4f9
4e6c646b5ff6322f693771cd3d8361532ace62faa55b1244c3527cbb9aa6
330efdadad6aac0af9edee6fb9ab615370d2156878993cb41e53666b6778
e990aab1ddb279455bc4e883cb24b48e8f4f90ac444dbd64ed16e8fd2561
3a0613aba1b9d0799fe9ff489964aa640e31a220427ff6e2370f827007aa
252f6a61029e2982813a4c744e4c42d1b837e2bfe9fe2f18a4e5b7e56449
eb36c7e5710279e4d7bc7d803fa8e98bf63fbccb01eabd4027215dd5f21f
d1d6045305795e7c8cfed1e375132c521674a3f450b83246212265c855a5
472db1b26769ac3586bba1ac0c129aaa8bd0e07b111c1392e7523a8d951b
b23a405423adfabd6a283a2c9c8bd2212d979367480f3f80a3aec6fbd875
0189c3680e3f1ea48b9df242a7f07c14e7eeae9507341f18fbca4b778015
f2b012d270ea8af23a72b405ee82058d511b204597c7c9a7999930317be1
d7fc79a3166230930c4fe299e2203fc129ba3607da39992cfa4eb5c48b7e
15a95d2f1633e69b40686919acc8fbcbe2c440894ddce1818e9b50328ef3
6dd1e3d8047354c2521cb1147c915cfe2a958d942284a8c26c018c5e253a
dc9c0b4abfb347477907b92325e2ca6740aa777f714affca63ff658a04ef
c4d9d4f3413197ce153fd7ff89f01f9650d7ad65593f11ffed9c54803397
a34d88d8b8d7f76830e1d464803218366b6b63684f14b83d653e76d6e938
5e2cd72baf3824297b3d0039429331774e2f7752e55a61f7336ce467a8fa
00a760a6429ac20bb311b5221cd8ba135a2c245300817fdb7403eb9ec9de
940610a9bb12e3a6fd9a990a238117d4739d75619b4bf63db90d0e79f835
a505a38727bcaad056169bd88c625f9485621e28bcf5890d57a92f35bd68
aef2eb1e76570d0897b77140ae8a197aabc30f1668859fb9ea7920fb5b30
5a872fe1c1e9a6895a741e272396cd8c09e017b074d46b0b650d8d9611ee
6de4432d59f31d5a5bfbc3b9e886fd951dbff2e70490e0939282d300d772
d437746c553324392a8088358507d8e4f3ee1b2a85de3881cdfbbb502601
9ed0d7c66854219732d7369e8149aff5749baec0e8d4d0ef0d8c93239493
36e0eefea17361d642dabcd69d7b2593434461e5edeb34760e0b73123dae
2e336c4c4b3266754ff50e3ea303d3811bb7e365645c0e8f3f99b869aa0a
c2c31a86d3bdeb91c70109535047b6575269593eb836f10afa794cc69890
416447f46aaa4dc8bbbab743d032d14e8483428f6db2666a40256f50f9c4
567b609d67fa76f5b831bcda1a8d657e00ab5be844f3bdd6b82e41e757d1
77716b60a70442b0d3457bd2695f394fc622e95821fb4324112d4eaa810d
1c808b0f9460987015c09f77e615d4751321681a349a63a39ff5bb98f2fc
12303d60f20f0980eb51d8640b0ed8549d39994387636a4fd5915d14ec89
9ff54f30caa666f27aa4363436636f5babf18ec48eaf3a08b67e91e6f70a
5d7b130c9b28040da58667d60feb164373057300e1d74d21688134ca3966
d6df32c7af0877864a4d0fd5ac282a2fe0286c0f8e342567845e5c8f8ea9
2eb77dc063dbc4c14b719e0e1fd7fc02ff30665d619bb918e0f50dad8f47
5987ee35082d399966ae9b24e47182712a1512cf3a32bd23dc46984e9776
5f81e274d1d2a89d3471148be45dee06ddad4c0e26030569d0d5bd2cc10d
d59d47f561c30f1ffc5cd309225de95b0eb235506cb616ca834c02ce619e
1774c2efba839d64f5889ad190dfbd8f112366b233f80606519ff2ceb90a
37162cc33f17aaea647e05f78d210a75366b338dc5f881daa89b802318cf
9fbaee5b3599c6855b6de6fd
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
%%BeginResource: lddri8a.pfb
%!PS-AdobeFont-1.0: DidotLH-Italic 001.000
%%CreationDate: Fri Jul 17 16:13:41 1992
%%VMusage: 30136 37028
%% The digitally encoded machine readable software for producing the 
%% Typefaces licensed to you is copyrighted (c) 1992 Adobe Systems. All Rights 
%% Reserved. This software is the property of Adobe Systems Incorporated and 
%% its licensors, and may not be reproduced, used,  displayed, modified, 
%% disclosed or transferred without the express  written approval of Adobe. 
%%  The digitally encoded machine readable outline data for producing the 
%% Typefaces licensed to you is copyrighted (c) 1981 Linotype-Hell AG and/or 
%% its subsidiaries. All Rights Reserved. This data is the property of 
%% Linotype-Hell AG and/or its subsidiaries and may not be reproduced, used, 
%% displayed, modified, disclosed or  transferred without the express written 
%% approval of Linotype-Hell AG  and/or its subsidiaries. 18 Linotype Didot* 
%% Italic 13735 
%% Linotype Didot is a trademark of Linotype-Hell AG and/or its subsidiaries.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.000) readonly def
/Notice (Copyright (c) 1992 Adobe Systems Incorporated.  All Rights Reserved.Linotype Didot is a trademark of Linotype-Hell AG and/or its subsidiaries.) readonly def
/Copyright ( The digitally encoded machine readable software for producing the
 Typefaces licensed to you is copyrighted (c) 1992 Adobe Systems.
 All Rights Reserved. This software is the property of Adobe Systems
 Incorporated and its licensors, and may not be reproduced, used, 
 displayed, modified, disclosed or transferred without the express 
 written approval of Adobe.
 
 The digitally encoded machine readable outline data for producing
 the Typefaces licensed to you is copyrighted (c) 1981 Linotype-Hell AG
 and/or its subsidiaries. All Rights Reserved.
 This data is the property of Linotype-Hell AG and/or its subsidiaries
 and may not be reproduced, used, displayed, modified, disclosed or 
 transferred without the express written approval of Linotype-Hell AG 
 and/or its subsidiaries.
 18 Linotype Didot* Italic 13735 ) readonly def
/FullName (Linotype Didot Italic) readonly def
/FamilyName (Linotype Didot) readonly def
/Weight (Regular) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /DidotLH-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 39655 def
/FontBBox{-263 -291 1120 942}readonly def
currentdict end
currentfile eexec
19ab8f27af2fe2cdabf6dfe4f61b68ecd1a2f71943e983df91bd6d42c70c
f917948f1614fcc8b71f74399fcd541d67354165563b35f3a68bfb00f148
9cea12733ce09ff3fa05babc20cb45497ca1ba53426bd16016b26e9e42a6
2bd3da447d370d3182ccd992468cb8ddd04e491a0cd0c047a775a8431cae
5468110d029dd66f9ee48ab85608952fec05b406717a0c53eb73662f77f7
76c878b5d27dd9c6e33309978a58833446ace86f1964fb1e8fd0df8e26a1
7124aceb83959a3a8fdd5c75a1824a3bea39f42028842f20af31b2a59b53
231096fc0121d4d18e55b661c0276e6a7d5139afe2abfc60e8d38c52196d
bfc55e4e5300a0d00e299b2180d82d61038df5b3345cd7d6efcfe56c6a51
c49a4f1d2800597ece23dd0961ff4283d029fc876041a3d60653aae4779f
42ddcd4a66bac2b050d9208a89f290f2d0cd3d641f5e77670443a484fd85
c453dca56be59ee83b469edb5970b305a13a4bc209dcd4677812b23889c8
f5b42d05e9ac91b54a28b088ce8bcf9c09ec038db2f4ea3684aff71dfb10
31f4f83d571432a0426c7f02d09f359fb6b9604c6c7ea85cb40e54b8e6d5
53d03e481afbf958234558b6096593f69c297f2be01bf58aa58b190c104f
101fcafa257c42bdda100b7812ff9aa836f6150f8f8bc8dbd2c4d211ce56
613a86fe9410ea09ad8584ecf449e12739cb578acf34b9f3b837cae7c2bc
a6333d43a89ea6be8b3d4e6c51e5da45636d92c464b353c538ee568851a3
f43ec50a257979a8e7cdc1ff6e653e6b31b337e5b23130c45c05886c5891
c623da8cae669a1b940adf5a5fcb59ef3baa6cfb0fdd2bbd7ed4a133b535
f858c7b80959cb0db9eaaed9d113ab2ce1341616bfc1771abc524f672df0
5996ad0f2148d32808c35e488dfbbc535e96b48073dad93455ce4afb4a9b
918d219e263fb8984694b575e052209651c16d3f515e1ad4ed0cbca87938
d47f4ef271ccdfc1dc445ef3da09d6132c6a24e9c568439b4a560caf240d
e0ed98e0664f6a998e0b615919b00a47c96bbb356dcd4025b1fc780a72c2
33a88569842cd8b823c0f50b0cebd7c21fcb1072e942a7760ac4f1dabff2
43cd583342e8dd93764e4d830a9a9483c8e9bea854c33d804476a58dd532
d76451dca262a637a8e3cf69e1b17d266107d2293a256d879f9f28fdf915
d30492e3d3273ff06cf6ecc4f1577b0e2161f7ad49d09b9f4549cff94077
aed91279f0c50b8fbaeb3b9f1734ddd6dc8f98cf27049827182de2d5698b
de85131d5c267a52da0ee0db1930f21ec61dd5a6cdb3044b63f68cdb6b8b
80344d24f386caab0c7dfddf301a4c2f744079f21adc03b0b408f8d72d70
cd5142a463ae469597b5c69d8a65d432f664cf061f00746797e4366d0ce4
9e096b415a12df181210ab11c9601b1aab9d9536a29293c51519de526e26
e63522836fafa7e200fe4340b45d92229b74cce1d5c90677bef659093f26
2f9b22f95b30444737a0ae953372db781e5e437c227b73a818b22be29f05
a1d67e3850bdda33e969583da8a4426281a1a0fc60133bdeab6e4000525e
b1c943e3cbf572133fcb12a7560bff84867b3b384331e3e759aa9cc5d822
45c6d654a715773918d255a92af53b29f9b2751c1bc9e3eae4ad26b1516e
fea142bb84f4f047a83e5ef522b22413867806de55ea27cda4ee274a14bd
7cb9176b9894114ff32c926df9a154151953658cf3c64165bf7f298129da
98a5cb63ccda40bfbac97a99276ec45364ae3b262443c1f0966d4a7f53e2
a6b1e441f71ecf6f6233b7bbfb8c17bc8b7b8a49fc919af65197f8a4bb93
6f1098ad5f4b02ab5be844f7a17964403ce6cb73ba727bf90cb6eb0747dd
2fa710c10e2c6e4a51265fcf82b07e642f27dc0f0d90e7546231a1b081f9
32041ef7c293230a1ff92bd92012ec2eb5e8b293c2b02f86bf788be9702c
085ad72a2f0fc06af76ebac8e9b7231b03313265f94996ea47302946bd5c
0f77d004af09310b82818e0c722a4b1fdf72df5038e2d8256318b6a5c60c
e42c6885dd83f02e457e7229e1a737f83cce6e9d9c0ac08d0278f04f9fd3
511fd8d6f19d21f77d4ca355a15d50a88eb21f042959b84748b3647e099c
d8bbada8c81788cc654b0a8a9d49478c5a8b6c570b8451551bf6079c77cf
c616e97f419666353bd8e5bac2b1873c725f3bad7ad51e7a282869c6ea2b
3d0b96d14fe853255b018b21691daa85ec4c4ea809c5d7c6f9cbe458fa19
10d52db913c82db26373ecf4b691f43ccdf5ca46c0229d2c1cfe830a700e
8e59e0fb92d5fc4579a1432eaab1868c446a2fbc84fdecdc847146e003ba
d3227bccd9dd8f229cef2e43aa353d8080e5eb39967462257d5f9a763239
c32fa917c05b5649410ab2290a1a9a1563e014d2dbd47592040d36d69873
5b3725a6d3993dbf21f90693902b8e48fd2434d82ec533aa691911847b04
fbe057967b753cdce7ef7dbe3d7ef680e1b04a9430736a5668de61906a2c
ce0f0bbfe70557776c565f5fc09168a73f274359e1a81f4e1c249eed6239
1d295f53a4ed35a539dc0ce4d602cf9aac53a51f5257b468a5b775d4c764
7de8d3ec26e40a8e9a2cc1081f1f266609281d85f00b3ceb2794c0751b29
754c4e02c938c644ba30698e90121454a3460f0dd40c5dba724909c1a523
ba7a3f41c105c0ba6832890b3c91ab9511c0294f0d9b41ce415467d6c538
01e666192930ce140263a09f6cb39f59792f0512b7612ce36a4f1ce9567b
2e7d822a440e1adf7cd532d0f25a4455c95493c75b638c8578de97432892
22f48db50426caa508ccf140febd5aaa0ec03cff2deaba293eeeafb05e6e
03e483a853489cc8acac26f6663ebf138b5d93a22320665a102cdd6f9ba6
d267fb65bf74f415261b3a9bcd0cfd6f0db2fa804e8e84652fbc0343b734
9186cdc274f7a6880fb7a05b4a21aefbc170b4ac4e1b1e494995912672f6
082e7db9ab15244dcb757eef802a2360abb0483dbcecdc9d68faac6063e4
d464d87c5c1935010f24d5e5cb9c261ab6da98f00133430ce02c3f30bb72
c4d92e51c2097d65d1f22b1b025ef1da0d1443bca54cf2cc265853e1e2d8
b90414b004b7e1ad2ac948ed9b9b51d213ce1562fce027a943648e24cdfe
2779ca6d450d4fea9c2dae7e33ae016be0b2101afa9faed948f18084d3b9
896c081244fa47846c4b213e91acf53356bdfff56823bf8233687ecf8c39
06b2583e64978f5ff8e4abf45b732640c5fd86ef40f088ceac05cda98532
0a977e8cc12b7971af22eed19e0d7717c23243f874cf68e9db6b4db070f4
13e946598156b9712119bf835b69cf785e017af3fed472a423a59813825d
8e1d776c9e20997077564f1e26779dc28931520b82b4a3bf82b7ae9a7b20
59152ed0d628af83004085fa2406c917abfb62d688bedf7210bd8cf179c4
069c04ee7caf633ba34d858cbf2bccf40cd06c05d06211c5a830e17a51e8
09289702be955cececa852a734034efa9e4bddf53a78748c6e8ece9ba632
e6a5162b8a737b9c52d03693bd848ae0384134427f7939a9711a5c33fc41
b70626c45a3fad12740c32a3c298c9ca7192f8d5eff37e799ac608ab2c49
4c5f5e9bc49c59e29c49da2f650de64c667159b489dd9d9e741fe2785888
bfbbc0a0e926766bce797350547155eeb7bcc6cd75d2befc13cf528bf290
7556b766260c362af7068a882e3699f29a0e66ae55987224f051e0edba92
3a0f6f6e89ed29f0fd32db476c67e8b83edb56a96022fa89b9b974e2d95f
4a74ea8d65a58fd1f86b0addea73eb9b18fbcac07f86b09092eba30c7335
aaba9c62f94bbff8121df0c1c992aa3a96116b950d1b9de60cf3b7b2339f
1d0d70dd27966d823d9c03eeff6eea5e07add8810bd3cda5eb25c39ec416
a42cb254a340e101f0734abbb3bfcc5f0d3cc4641b9ca40ac41c3c5f8735
ee47e728aeb7e0bb27b630aa0bcc55289e4626bfd360f36619c346da6b93
ef3b53f85ec598b18cb160ea31470d8111c3f5d4ea70a83e42fbe4fe9f1b
836e50fecd66f5ad968942d2d31730852f485b3878e0e2d109e6d9018f85
e7ba1aa15130ffbcf8d7ac0ae4775d933af02399a38b91f487fe8302d7e6
83bf122f739f42a6c17d9f43fa49de463620d3966002545bfb30e1d39b33
43f5fd681d5d50d38fbbc3c79a507556ea63af6dc813ca4606481244ef0b
1c42169287ddee604da96a2695732d0cb75d50a57831b0ff9fb54f077b4b
f90abe89f5da40a9213b43ffd23a8831b0f410a266c56e0a9dd3f4c7b939
f46accc6bcfb7cd12385e21cf23eec1fb3c39b16e26aa8c63fbbc5317a12
567da35a9997d235ec611b26f2ed8d32b6ab71638ccf1bbc821e364419e2
67e05874f06fc41a77cb05dd613dcfaebe34f5ddfb64990f1d0f2e234926
438f97f660824e290a945f9c101cf9c77deecee53aa91f473423c44c0f47
e9117b01b80ea969d576fb5f6e59a7e8184b1f00aeedbe7660b4f9339c0f
6a2c23741c89ecb6fe12191b5cb96cf74166a4e688b83d79a005ad67e151
5bce373e3508b04c9f07cbe2ebae7e1dc62d1e0913564fe13f40a67de540
7c18d3da9fe95da6c2e2d5df5fa32dc804d4b66426e21fb9c81bbb2de443
9b82f200c26770723639a6a0ff1d6e807b3a29311a107708dc1655b19c22
246e9b73461c87dcd19596dbfb788e69a54b519859a906d5e95896b54ff6
bb2e7a856dccc6303d0d55094fa718b93e17e34f493dd01511dd544fcd48
07e35daf65b6da5db3a5588b23c319df7d241531e7844e6e52eed56bb384
d023acf398ba043ac9c0af6e57128611d40d4dc52985e5db621819b31bb7
049c2b6b6361fa2f3d7958fa51a5339c1691a1759a33a4fef8b897628427
16e8d28950a83668a6ccbbf59d03ee5956fab758e6e86824f23f6ce355e7
647bd044b9a58ff6c85b8f59f1b7b9519c5bc8d61350c49f3cba012515c7
22a71f812a2404da764dd5c7d6d53640fa933701c4d648a8a8d9bf39058f
0e64651a37ce03c8f662a9a834f3e986b2ee75ef0c58439b06a8d4f42080
e6ca773896cbfefc338fdcc38ed278cf21ac34e87d46da13aada03562abe
dc4ae75c05d79123436159985222da3b221c25fa9b0930e9787d1cbb39e5
a3df8293e10be8374eb984e0d742aa10c5dd0da38d05e1fc2d9f9e1689dd
f9080636267e93caf896e1758585c6bf15b55110e0866983248cb44c395b
e858fb5f034e571f17acb351521a05aaedd308734f5001f539ec15577b63
58308fcce6bfb79ad055dab8fd90955b4da15224bf79b0b751aa4508ba63
2be6692eeb2a093385224f5c908e81bf50bb8761c9eb2ac4cbb221f8d028
4fb96b2ebcd0a699e733aa64be63682f5c7c0c0d303eb5e01911b34cd18a
3c6f284bce1f67d849b7b3bfdc1bc0484159f4b86496fc9d80580535a4e7
0dbfb32a7ea2bcef0e9faa3098b5138449712172de74ff5a80bc23c90293
e2c1acad60bb1380f85ad1ef2ff153b419289de843cc63c327ebb889fbd5
d864caa3b81caf931632e45b3ed001e1f3661d2e7ed8891c13c106a987e0
998a323808ddaeea98786109bdc1cbf03f7fa022362e6a73d5989d88365e
7b70ea0a7d42edabf56fcca2586d8e9baa8748f0034b2a31945a574edf8c
ce5c35e9a10739ae0944074019a690586d18e4c4a167fcf9080579132c62
d30a823653a1271b13b1b7ddf5b01249b34fe01d54cf02b78146d79e2e5d
b52217f45e5066f92019f53c9d4f05854db84b142d132f62e132dddd125a
54b6d9320f16bbc76958d12d5aeb6fe1835c687d0743b1306260b34da8a9
60546c2ea1213cf0184c500e8a133693b5b7c855c88ec67bc14636248e17
1b90b2690b91aa9a09552c1995fe0ff9001214f2bcb31a9305e902aa1e2d
bb9bf5b9eb145ecda56987ea29c461a5f80cab3a553ca8a534ecd302cd32
5ac75a22668e36dfabbca177f042ed07cff85f99e9dc1484d8a52e21f968
ad89cfe5908dbcbd57947a253e2d8c6eda3c19973d21baccfef8f657d283
2fbef9da7f02a9f79ae0db0aaaf02601fc4f93a9e82a6c539837a5adcdfe
d8072ac50deb385320a0f632d86551ffe1ca21561ef38587ff59ad0ce486
f74be997197f2c89f7644801f666481e201eafe27409c518350f73f747b2
a8b6aaa70fc27d3fd1e7e3805e091084679610501f1a5d59fa723c154c90
0ecbbd9e5e9ce3c1e759919f76dfe37b1e5e1ded43f098e211b42c8a6e36
a99f2116964293df783ba2075ea2ad571b707c3eee486e871d1789fc5e4c
06b9e93e14b766ca8abeb2e1cc24f73db484d561e749b99f696f822c3f2e
0e5030eb6ee9cdfa3af82c3be5956dfc75e8e7195d12f3b2adbefad55886
ddab94417d207c2f7c023f93eeb03f1755454bf33f4e9deb90746bd4e01d
c69f079b6d1b0dc4ac696d63cba217dcbb63e7c9309dcde4607d6d66537d
fcce2ade079ca969d2d21510bdf6481e0478d70824f9d3efc3a0660a6fdb
b0b23b962d4f317418a5169a446b5dea48092e403ae8588c2c3e29025465
33e1e097add44573c8a395caa1e7774808872c8dfdf2fae3161acdfe8004
7bea4beb6d070ee77219d13f1fbd152d37798f5ea446238f75e194253853
db2857d0a74b25d84b9124cc92b836a8f7e7c1fcfcea9eb98034648add87
61ac92066f64dfda8596f9b9163a9c65b7dcaadb40bdf67e57e3a9d00e59
3de7f4bbb103bf991c089f47740fcf3a41f1f78767bb8090c337b33be20c
dbbcc762f2bc9435d3710f104e7f91d99c33dd1e1b603098bbec7fd15510
5699d38042d86d38b23786b5adc4b36f6399e80129c2492aad18828ab3bc
0dc2e8e0eeb35bca1ff7e743297bdd768fae75543898bdecba8b2cbf7a17
a12c912c531e3a1ec67d7f8fea5231fc9e403e1e5c9b1054ab696b179ce6
cd4406c6d9cddb990c0070cd016f4709124db69b1e55627f79264968e9c0
9e52677f98d3ff55d72beba9bb2d9c19fb99aa0b5e92e60d648a0b930aea
00a46df85f302d990849557d142baa2d7ccca22e383fb10f495e1f1a86b1
42fd7baef04ea8b5ab53909d85d9cb9f523dd181bf5d37b697e2b1cb8ad7
d6021ea6917cd58b2223d0f52f158280ea8e803c4d1f5571a518b3fada86
b2c55d342a0728bdfb64288b34996102b65c1bfe9f5d774fe88062b86eb1
bc3126e3c00a8f833397a7979a8c804663a7f3ac43832ea15ee1caaa18de
0370cbb8fca8042756fbd964166c4a21781dde3b054433ac17a83f09e725
acb795075dc972a1d6e35cf5c52a387bb88aedea2927e431678d8e22163a
39017297f8a64d1c43a5377a64309853c2f53f4c00dfac05d9c12fad8e85
a3bb3e2cf68507ac11b424aeb5622084fafa0c67848d8fc6eb0d88ea6d4e
72be255a71eb63741e572cc0f7e76bf4bccb8029331402015614c10e8d76
a117ebd31c3e9e1d5ba15c11da507b59e608febccfca035d243380c68340
d26d1e24bc6abe5b5f8b505f8f8b4df65fa9f83d4ed413da4da50765b5e7
fdf917e05939c2a6f9f3d5297aefded5cd72c8e83aa16300f3c5508830ec
bd6f07a2e6fc7ac52215af62b791799c380c11b0d3d8c72cd3d823e33063
185c2d91bec0858a7797d9e42729be1b6dceb8a9dd86555c4c075cff1e52
c278e04c5febd8de9fd585434cfd846ea8d46c708ad67b06c7e5ddca902e
7ece75824f7db879f824738b6d467773eb6d246d27c794802e4eecf217df
43df811a57302ef63ef6e32b536b9e789d5cb27a197ca411ef804b4d65e8
eee439060f18b00fe2fa9747b01b58e43b5e5cc23a30f827d00a9ecb2fb5
d4a33e30cadc80aecb41405894a9cf7ab9df8aff54f9097494db640b6f6e
fa575ce5ce88d17d4c33fa339db284451d3d763b9bf53d60ea013b7b03fc
8cbdd0890cd56c377a3a27b93fa2e411c90a03ffd2f75cbe025a0c545a62
0f0390b14141334ac2e4a9c8128f9bbda4ebebe598db91e3585874f70e72
c8e21793948ea767e87bdf37b756fbddaaa1eb05f11d8ae48e2b21316a78
7cfbd1ed0fba075731022b5d1885035bd4c47a6a85933c2815faf892d5dc
77cdcb2af1273f432a851d0e014e3d32310878e00fa4f2651d3bd4763714
872eb7c70a1b844ca9d38c1badb06a5b83d345ce24bb0266e5bc2c591869
d063a6938088b71e2882d5639817f597ac6238e770d391f65ea900fc93a8
1673be557e527b9a5c92b11770050a180738501fdba503b90aab54588713
58688d9ea50b6973cd74a89310535da43e5e0cec0988649088644a12b762
3cccc845d906477e9787c2a447f8a5c15d6945345eb0ec70a0ef8f42fb7b
6c43e21dc78e578476fa6b36e9d4c8492df667af6eb44f6102afef0867a5
4f8d3a7f5f31f355904de4a7e9b884c4004300dde8dd468da18d42f9212d
ff91bd8fd12719aa9c8e6487c927fb7b437fd0185ff8fa3cac9d18f2b152
c8a821682d2bc5d80bbd21560cdd7e061c1dea1430f4559528b2f78db6b3
8ff079c530bb29ce3969ace75e224607919e20c2a5979934d97e4ecb0378
e72150ce745f63efd52718cee342740d9d6e69ed8c92a68cea9983facb80
42fe9d02470fa6cd8d28e170a73a837212128a5c75d90256c76fcbcf16a8
75d30b3c926798326bba81b4306c3e8502c9788a2e41d89623188340be1b
8c6224f4fde256c709cdfe1d20d4672f122d7490b7d2530d2e7f76255221
21fbe51b2515082933503768d98092a8c08294dba3b2c47f2005968231d5
20f97668d7ec222471e630a22572fe83998ef72647740b17958e0ef672ba
d663d96867b34ac9bfca19235fa22f18f7d79a6f974915b83e80b57ecd29
8f8f6bd8fc2c0c87c5106dae1e064483c7a90ae3391fa2ad6b6a62114637
6f4cf76813a78c107ef764803b2f5eef634bcebc021d61d9aecc6cf1a632
9dadd87855bf3ddb7b36cd0f8e67ebfefc66e35688086fa7a70d668a5dad
144f2e45854b0209c1e814794a1d78fcce7e1d6155f7960df0a5f34b87d8
181ec82788e0551ff2b0c77c76215c21dc2e82ffa684b32c6511aa0b8fd1
0657544af3b074a79c999ee3c1c2d21bf2197edef545276fb4c2552653af
d6c5e4feb38096e0a19edd4c91b395182dbc4b98aa846fb230a18cf8d48d
30f653df2a3226b08dc3b5a19c2c3dad63e961b875e1d45f677118f73c0a
33a1199b61d01c25bd9b162ed644044479240928dda171e43a2963418c64
bfbef5b0063f3e91a355b6f0212441ab4285bc0c850c2ccc95e0a75aca00
ea4c086700cfa549bff2ea986f987b1f09c1bc93f0eb3cbe8bc5d6404b10
80dd5167110694f4dceb0fcb86d25ff109b6ce2ae7db0a058030e2b5a9e5
c8fa682b4b683d8e2f043924d5c5420e6454c745cf28df968c626a2d40a7
1787441b2bba026c4b1152fba8654d494bc7bfcdc65f78a935affea4aeae
3a80a7112029d95cdbc327248367c85f813e09db4c956977d8d60c36f7d8
58d481c4e954f77a6c80847a9a6b4838b589dc6e8c6cf1c96df73c8fc0eb
b657c6421d871689c7d52c126f065ce31205d8c25de272a8ff03d2823a4e
3f9e323b9c810d665eb950d1640913d0a44addc657546192722333257ea6
13b735e48181ce3ab2abd27d28f3c6a8386f177ba276180f7c58c25e3a5c
ef6df80bccbf3a99a6cb7f7db0e67425d88cb80390e2a67d5e18bc046dbf
b1aebd43958d2fee2fe1ba819035671db1ca9bbd638af169fee14683dbc9
0b93de1e1675a1ac2bacf152fd4d00149f348853cb694d65aadb65d9224f
df19500ac8fd1ec14568c001a39d50f9553cba9b4cc375204e6eafa0dffa
c6df7587241074d338429f3ab77aaa8fada3f6137deff0750d97ce3eef65
c7d8337a0b93c3d94e62f8d6c8ee397d8b7d7ff20b12d190724ec6d503d2
1434208498f4d92f1e6677b5c0746c59a4257ff64dacb283a5caf59fb352
1293170446873dc60170ed3ef09b354b4ac95de2cdc52872929207ee9143
eca3af8892ae1c2e555f949239eaee938568393f4fd8cb2c45c79625cdba
0870efba92a2850835d297ddcfd26f72efa0d40d8396fe1526a391ac8cea
e2e28d060a99dc849b873e04593d76a0f6ab9c19cb365c3aaa335d12f963
c3a3d83b6ca24c98d8a17e6747d34d50f5fea8f04cfaaebf77bf620abb7c
a4e06e3cca561604d7db29bb3bbda6c3aefe9845f6e25576f51f053c2689
767b7a0c41547ed3d559023f143fd8abeb95fc93be1eca8215c2985317de
30168275d23e8b736e1265864e532ce6bf83a046f3a43f73a5f12afd9122
8a780cbfd3af672d56c070a6cc1e51bfc2088656372eb55e79fe8f10d25d
c92f73a3033ebe2c0c501b84f18c88b5f3f9c1c98d92c81d4f1297c5ca8c
96572fe4c2b4f46b6b8a3b3653c6e7cb10f4f846387f2bfd0309f63fc383
2ce164d5bea6dfd58143825da698c81732e3c185dc5c5b493bd762652a38
f6dce41986dee8122b8444e9d86e313c4de4425dbc3d6feaf1a0c1bb4c31
7ad2527ef45b3abd6557448519252c2ad75e46ba191c7255acea830ab445
dff78f64fe3e7157a9d67df73b6e4cdaf507345e09de5bb581104973470b
b121de67eef234eb7129c1f444ce4de26d0533f07d826c6ac21a1125d426
24737f4e1069189a421661ce499093382fcbb96a5ca093ec713de8af2525
aa7491bfba0cab5050124885d09dfc33f436323555ae2bc5d883652406fe
d1d03711a338416b516ab8f2b40d98d7622032477ef7ca759f5e1ec09b97
fd9801449ce431974b3476e0fcec0ad09b2a396f2bc0ac13094ad7395833
a3364bf057943fffdccef0bcf46da03b1b42e7500a0100f19786f54eaf7b
797b2c003770a518a5d4ce730b5b2b25632a1fada5afa922a87ced0e31f1
e3542cd09db698b17c2039cf4a677dad4439fa591143deb53b2484c3115b
b3e71c7da1ffd9829293464b2b029edfc577e74cbbad869d665166270537
440acb6b8fd98b05f46ef8857d89909d578ca634e05078b6896ebff23afb
7d376b4847cdc083de0292941f79045c30a49a91fcdf08ae6b0316edb5d8
3a44cb9fdd864ad8036145ebd3453d4f13d7aeaefe3f8e5888947ce88636
6c35a20aa496a99404bba2b63bf78b3b965385f47cde61ef7ca5f3ade54c
2f35b9d386f84e996c73f56a199afd32c81cd313f0395b32649685ea0265
fb26b0171a964d4549b709744ddbf841d5a6565ca2ab3c051fdb9945cd36
28eef689205bea726236561ea185c51f2af771fee9ddf178f2a6710af3e7
208348b359977ed5d7602c132e6915346873dfb6875e7a05674f0b19eed8
64f1b745d0234530cc1cf652b0e5175cef166880ddfdea2f397e7ab6cfd5
8e20743ca01392d5530ea53b9c4fa17bb868f8b54699d7f2e6c200ec2d06
7440b233e7a88055916e17827b1dd11127a93c28d4cf849e81cf4fd037fa
3628ab9a01494b6fd82beead417f842e27109cc5ed9d926333a841825663
df234a0940ad68b2ba5accee0420025f10561af977edd08435dbbcc1c6bf
e73b8c1b70b360d8cf7b0188300c3ffe5f9c51a8056397ae31aaede320a0
564b200d9de42fcda6cb2231bd1de98a47758ab851557f593f85a23c1a5b
0dd8ddad33982990bb850c8389705295ff1bd606164f58110cbeae8cc027
551538d493aef64e726e4a54b2b664f7c157554de510d2a8f950001519ec
782e66ac0d0e45cad759b3fdcf026d4494a6d183ae185929437da81d12a1
7f342ff62e12c5cdb94cd16d526e10f97907ec1bfe751b67797c84bab8f2
078a37decc13a025c8e7ade5eb376ef651e4b238ad38919373b4c452b143
93afc980e0f4e65e8d4f82428c338c41d991d7bdc670afa09afe5c7c5f9f
deda9b4ec965f20fdce38ede3ef3d62ef19ba322d3b8bb101592c507b421
a96c4f23c76f9228ea7aaad552e367d012b9c6dc0ec71fc983d088fae58e
23e5d82dbd2e16e51ae3e0801b96c27287e21bdedfdb8687a23ccd618721
d82ef266b6a7cb066149759986703d65f28b640d23882c2c6edcd459cb1a
43bf0dddfa45c92ffdc3179eadc2886286d7bd0564cb97609863cc2487a9
d34fbd03e74b449c6647b1c65bbe3920ea281494948fb271da22945a9a67
94f53ae1c4bb3f24990159bc879018812a64647532abf0be1df4e17cc15b
572a7ac001fb6477fad36f2d696bbbbf1d1d5c8ec1832fa992b983d1d47b
c014b2a86b41b328b6636bcc9b69ca049a51a87a32182adfbac04776f4cc
778c47b944e5a320fe1d0fe5b252850a292a0387410b781c5f6056320f49
60719544cd24c38993c24bbf78f554a205581d6189c2b8617a4aba76bda4
1df4c099d69f29c90120fd7ed73dbb834db1ed6623cae0b12b4698ca1b12
28c0caab601fec1a6e5b99b9fdb1012416cfd4d3a6c294068f342d9f1c03
8027172b4ff88915f1e85991f2ac9dcfa384ca6da6f77588b5eb6f471ab6
1bddcde3c46ebb8d558e9c63e3c40b9cebbd286f0a2ff223f264f46d1904
2f8635659b3e0176eefbe5ef7606d1e1dac2aaab51a8e78261dd9d3abf51
ec2145afdddebfe7889182d1535d9fd9ca49e033794a3d9d730bdb05edaa
48db51cfc514650cbc529cd4a3cf51252820e23d0207fc76d45885d673a6
52a94b162126422583f277024f7a0a45408804dc0a74717a6e869742f199
8fee0757ae4103c66b78fbf3a070fa62e145d2980b707b3e494a7fb03f20
307ff8c7b40aa23c2c181894f0d63a23b7b65ac34273d6b54790a8da8a58
91d9362f948b3243d05eb16a7707c63dddad773c2d3fe9f8e35add30ca5c
eb738452e1cc6892dfd3eec23799be89bd18108b1ec542ac3f4b907b1bd8
07c450ce69ff74f8fb90596cad0d5bc4cebd20cbb0bdf744e73bd93fe5ed
d87ba63f020c57bc179f1a75ac0aa1bba4f2a13836ca5ad27674ef2ebb59
1df2099a9acecbc542f326eb02d6a8ed73dcc5e75ad8c31696d693a35687
a5baa4aa6d04a5db126aa0407cd900c69a9eaa0da4c1f1cdeaf6fd4afe74
ff3b435f94290e66b9d607eec91de74b048e016b2019324ce91b1fce15b8
db174ad225bd070f577c699903f9398da0784884f0bb0b2b435260676ddb
f0235c60e388c1699adde69f0bb2ffc85fd7e968cea51a9bbc6af47a4e2c
de45289ff781be040c81758688ea3828ad4d1640baf918a2f041b9d613bc
49bd0774657d53f6e2a8dceb2a0f02c8efdc5e24d10f55c884dffd9f41b2
14bd527f35e9d0d61c03e32ff5f1681d381b5a597ed1fb1e8e76a7f71699
08fbe72094a84f2458380f0f83852092274352398d633190648ef63f2a7b
435c7ea3b52427667c9e8dc4028c2cc1450a75ae94cb06af224e917b5f8b
1a13730a38f64965c9202d423423bd9f0e401b7d810ba7902ddb590f6838
6b8e5784f7292172082de565a5b9b08d51d99709d1fd1ee42841b2bf6aec
8da3e2479e955f4bb4e8d9e706992eba874aa3d5056f01f0e501d16796e1
98d7c5feca0a82e783f932f791a270d20a7e713223808fdf6fba1d60560d
176879f7154da64e51a36ef23e7157a9d67df73b6e9a318e7f1ec2d7a1b2
bf0b0f31a408d74b81a08e1ee8f49b15de6e6040e97fadc4d06cf0e67855
d289a4febdf78b312ec57abcb843a86e4903204a6e562b62abca36383d18
65fd0ea021ac990482e14551d670532c9fca76ea5948f98ea24888198806
dc2fd9514744ce7636987310c5e370caafddd533cf4109aa2e6342c50c03
049cd20bc84a3e61d80b2984977e34f975ef722349d2d4d0f01fdd318d0d
2575e8935f804cffc15e1ff3d87e57cfeb530e1cb4f4601e014e4c530247
183a336b2b1927a15aa27ceafd09feb572f431986cf274669a4680e82e89
f06e2f55c03d985aa1cf66f00770a79cefc93844626b3349ea55eeeaca65
393339224c7d5e58e1005410d227441aa0377f1432d37b6a5033aeb0194e
27a7f200f0903826b6b6d0a9dedcad2825e705c6c5661145c9963a28803b
094bf96fd306175c10711132f166838f86f0d0d3559e4069b1396e389526
c66658f770273f076391876462003ffce5e1afa95f3da246cb2c7b1b766a
fe9dff8188db9e2522a771d01cd042df7afdb1b9741927c9f6b93358cac2
73b6a779530f2a34e19b91fb473cb2d53b6cecfb3bf24587fd9e2b940955
cb0332794a83cae8cf540451a26d99113b88c7ae0e23430f9d61ce450059
78034b71ec1fb02f67627e418f1acbbdc2feee8292a75986de3611f97d09
f757f76f631eea9c92a73e387dcfd6d4e37fbcd707337e0026ba658b7817
20d84d507c62db755b5d25c79211b581f8753ef618485445d89da6bd61cb
0437b5611dfc1378edc62c73a9dfc9deda2588b54cb87ea5df380bf7cdf4
e1ac82ae1207db4e77daf60d54ff6cb704e91437d8c3596f9f9511510c2c
e444e92ca1ff8b8010b248dcf851af41140a67fe20d90721edeb7e8512ed
71dd2438427d0f3ddce2b78a14da165aa6bd7e5e4148cb76d584e33078a1
9cca903d51749d8876f10d013744abec792686c627f126011ce173176d07
c06871208f26b57b8b0cfa7000b06e2f3d86f8a69a7dc419221d371e7bd0
a5829437bbda440bcb3fbe9afc4905f845ab4052eda4a4864213806afa95
8758cbebc58d7aea1414ccfc522556be26b5c2521f2ace8d346c47cc446d
07a475a723c00b58d842e5c7b732c14b29c9b92317fad0c213293c562a30
2584696c813d83d527ac503428b87591f4882e9f7798fdd86a160109f4b5
b65c396c41280817d55febd52c37932294a1ae935337fe88434716b29304
2021561d28a7c0e3ce8986b564eefb1e30334bc8a4e9c7456d8914ba3ee1
42d0ff32d245db6eb5dc8967354b6c3a5964fdcaef7fbb7390e2af02a28b
18a655f4f838d7b65269cca6862589d3dd4001cea722418ce545fa4200f3
5765b48fedbaf4167253bbe2f3a177fec406a501a5c6d76147bf5b1e3af9
ad27ad44c10bcfba4e365654eea4a6e7033d4f74a0a9a86575a32bbced86
f173229399e9aaff801e2d3124975fbd177011a79545aa65c245e93a6cba
7ab0ef6c961287dfa519b9f52c4879afcbd4d264578e6cb71ee985d45aa4
d702bd8a82f6898e6ae6d3f34a9ae6738eea979a5393c0ce0a866e46a7c2
d51b54dc81ca224efc8df1a02dd9201cdb022afc8b0d1e533b2c99fb4181
55eb94ba94b13783dc854e2f69b18cf94563cd15aa87b1629afba017d9d6
2886585bf587de501cbef84a30011c49c233e05da3d06037523bd438b64a
c981fd2fc7892a37fb93893ba96b038c454e6f777704ef1d5dfca3752ee4
bd3d255c0e31a4af213216965f8856a849801cbc10c1cf1d5f252d3fc999
e2f3c351ee23c2e2925b155fdd4c465848856fee33d23d862f5b6ce97397
0027801cdaa4f7740f450b6f1fdcf1c4ca9f17ac027f0ffce6f982661951
862790c0b389a1e070181ad20d5c048ed79357f74debaa67bf51bf3993ff
b57445a9838f8806b20502e4e61d90c1dfba4f3c3d4c98fd39f38bae7204
b8280e014a8a9100de8d934181cdf2eebd0095fd0e40df698379a9cb27ec
3abb6f24237767b4c7a02a076dd3a32f5e44f48864a705d3361ef223e645
fd71af7f81340c42dcf22fc9c532e9baf42371691610faf0be8a3b1b06c9
cc607e3feb09c1853ada88e791d8ecc3fe66093fd6659e8de4a4e77f97f8
330bcc4e8f587bea271420f7cafe2dd32f98d16a0210352ce71ebf913979
0844725316e063271a0139f7256f9b73acc705171eeb9ea6f3a6495d4523
70e613f11e5a51080a1afa84bbf37ecb072a544e93174274aa0992e00f10
f8ac3821e72dab8903bb3828db43da833f8f64424c779bc9446c1f0b1fce
df7547a1fcf93473caf62065d799c188e03d59d6e1654f4368c1c9d7396c
606ac2c98e959ed25deb425cef2a55d118ededeb58323017b234682cceaf
bdab1b3a6487ea3388a36630d4b93aa8bb1bb2f676357a558f14628d1b38
3b1cdb786c4033fccc91528628499839d2f6fd118fdcfa33c887b7a10fe5
7f6801832bd118e0037f46f397bded622bcdcc8b8a53b1140b573ea523ae
9aa0b598ef0af7b343bfa8b0903bf01218398a1f694c790bf874411ca976
e1586a969d45c55ed08a7f2c25795245fc670e48ed620e7c1731b9033147
0367ecd8727a65f54180317e1732ee31c7570a697c5dd65dd599148bf8fb
33d7efb7f5a6757aadd6c057633e9713191dbcbe0d30bd4d1b3ca3392369
3298d1c7f9254d8e614667f24948fcb8c28174f2a41449fb62e52ec0ec1c
71108ac39e626d2b794d1f88dd39a482798260d9970a0ff84413a32aba8f
2092ff7af602a36e3ff4a950d7e490b317ac6d641c1dc0e8f6ca66eb5850
60358d475278b13957425e72bd77daee2182f73e0be77b445016f193b9a0
f0fa66a1b603edce6e0ea071554dc6f790cad26dbe8f3ad77790365562b1
35a7cdeba19b741e595269cee7ec88f2c18325a5af08685af2ce5d24fcbf
f5839698448aee82c1f518c3d610ce8d7bdf8d25c644179332d01d3911ce
1ef08881c6dcec32e272537e8df7a5a633a3cfbea7285e1ec25f17e00dad
ecc4773ba6c17693bc7e0183b1e6aa0fa35e6eff1f5a44a1619fd52fe5fe
0320df23b0ac473b2db5383027601246bc20464177d0cf8c00b4b3328c1a
040e52fcc960c1ee98a4ace3fdc3f7f3b86ca593ff3a33445ba05c1b42e3
c75f4784c5782717ae6cae167027f5e39602b1ea5ede10e69501e252b27d
9def6e3030e7a6b19520a9e4fd1b37cbcb0748273b891b330cbf4f4e2f91
01c0a73a581d99762328a3495906ba4467b13ac5a6d2e2359b81653d943e
346bde14b3b62bbd373ff912f4b61795eb4cd80e0aa3923ad89082328633
653a7581ccdbce27878580e06c7dcec3244e55edf2d92b22e8c102537efc
66e49eaff8ec4df37d2691da3508122e66698c0f5fffccc1b1fcefd4bdf5
2cd65aac776d13d8f9da7d46583aeb9c3732c271837af6e1411389d80d56
af8941397fc7f7e81f21ba3556290e61e19559e64748a3ea0cfe653ce52c
c9874bdb4fb0f10235a7f16342e084af5feb5e40455ad26d1076fbe9817b
6ca2c09948f7da202d3c3f5ffad517e0b8e8fad38460432f6e795510267e
dfe1e4dd3571944e3e0bb5d7c81b900847cae3fdcfb0a8ece92adf8c2f29
296e55d95819bc2cc03849f53c45de6ebaf4ea5a5fba7c6b54d65c2fb155
234c56dcad583bbd64ce2d60e9f59cac7296d346aabe24577a738a79a9fa
c6b8d4ca7bb6ad1c11d33418dd7b6042cbfd4f106fef35876cbaae054e30
1f4e0e645ed560fc968a279f1bd74104c43721d1c71a4e0733070619e98a
5435aba8f798509930ae839a7459960133f79e7b5f133655dc498af8bbd8
64579eefdcfd3da7af38e88df228a6ef080a7b9b4d8fe1c92c4028c6517f
c7ac7139a4ec21a98a66028dfa9ff3e3d4078f1e08760c0c11e42aa624e7
a2edc97da1417ebce1f95a6e169dcca5966e69fbe713c9aa809924be6fdd
ea0f12d49b17f1e6cbe6357b0e8ba43d1cb81d93af0ddfb5ecfbed3cea69
30ba660d3a5bcaeccaa33f07ca9368f28cd52bd3793b05fae3528d3dff5b
8b2e519b3dda3355aabf9c7ed74dce3de99aabc538d2a349f76542ad7c91
8ffd846c79e015015294ae36a23abb7e59f49aa4ecf1a5cbaec9d3c21918
1adb6169519094d75c23f50da82257e525efa43da99be25df623408fbde8
436e021ae5c592eb79936fd15aac24162ea28dca50173c4f731ff73c85b5
e5fe794c1c222e2ec62825363260f56bcea3241ebfae51becfa0186d4031
4e0c9b963c8f399ae5a55dcbdd14403a6a3bc0645d37e1669dad1fdefd59
dbbbdada05eb98bb5c443f9582d252a975e9178542dad67a5d55b65b18f1
0209a9714b051d431878b2696e08e65c21012fd2c039b8cf42c401fca3e1
fc24b914bec083de4c03992b8a377d8c026c86caea085711d6c83ea921d4
23e2e5d1f448819c048d98245386f8062a2333f551bb53f484c699887c9a
b9a1ffdfcbee979750deaddb2ec0c96fce55aa700d23ef0e5b027944772e
e8f44a314cc43e92ee9acc038d7dae45c8656363e043400d63bc775274f1
62419e7e9226304ee9cc9ea59a4afa16ade39c7ef2e118dd57122c3f7491
9a4b575bd94151847c200745abf3bb7515611a347fad11c2980c78537948
f83a0cbe0d3fa648d684505543c63e55e29dea935dba230b03635a636c16
87f1e5c432ea2cd7b3bf3fa2e9850df9ab69a7e2f82094e9f1936f36db16
abc17fd31cfbbce6bb63cf8e97706a3960c7adb757fbc07e197a932482d7
588e3705dc768517ab4fb57c58d160b994d4ca872bec628147fe0320a75f
91517f59d22bb7b6714a15ca49a306e9c4852fa5f432fc2d1a4ca9ae0578
0e08e9a02c8b18119259d3d8dd3a558e4f68d51bf988840df203bf202cd7
7111a46a2c3f416b4bdd8ac45686ac423043f5d840f35ec156f6c76df55c
8c3bf195a91412c4db33b67a6aab151f5eaa57baeb482edea077f7ef2c61
344598c23532facf2d4aec12ad5f0dd34a46e0e725b2a04d5c45e62b82d9
3305d7607e9546e742ed2ff028398c2858b4263220c259d5fedd9688d17a
6b30d391bfec352e20c716ddddb17db2fea10e35602bb6a7e4e967195948
5ebca0c590b77b38b2bd11f8bd3567c001cdb3618ef5880cec313777e272
852a0c832570e108cd4b98767a8fe1d2142acfda4fa9031a682a7972b64d
bb30134b6852c5d634d850dddc1d373202b7595a76b73c2a87b5f117fb6d
b050b7af3286383ceb8fbaa2f98b8c5328c7e93fff052fc1bb346cfbb848
819a022eb2617a7cc5dde88d7595fceec2a8c3a82c7807c390746bca8caf
339c3271def0e3f8f09feae60889feff3e95028b7633798dfcf031a28f14
247b3c385f760a10c26163cb1bd8c17428e2d639fce33a95d4cd287517b0
0c1d9f1898f3b6a64e9bc94b0a460fb882e9c34e718cb2f668664ea55da3
7e8bca12485b4bcfd0ddcf847f1abb1270062bd7a81569ddaa9050e5b652
234be9ac619c716d7a3b3c32db09e0e1627c001c0fd01a62ebbf9baeb2d9
94c05148c4bce6cf21366956584bdc2a209409acf9b617f4ea454ecc45d3
90c92a205c1193f7faf7a63250920ca31d1a53f7661261a814d01a55ba4c
96cca39e1b62f787eff9abf354391de95825204f03b7577f06cccb8509d4
8c92f63aa67250e4d6ba56824d0b828edf008324052cc97195a36c64778c
0b36d174c29577b0d739b4e48d51d1bf2a7b67c7b5d36acd398d05b9192a
7cf116fef7f91f84f545e7b426d311ad7dce2c007f58f57b2a96771b113e
05d4edfb9f34a67194499b6c5554ec8a651cee197550ef2372b9b3188803
27e10ba93cfb8f82bd01b60fba136ee9790fa1a12d134cc80c501ad093e0
b582a3469dc6f1a0a027371624ef1e1e88eb3f29df31182ff46757c58419
1d97431e740d59b7fe0389ec2cbc08fa10b6fd849794bf3242c819ea1f74
1338ff37d8f94a06fb849cb3a44a51ea6a7e1de64cd029d1bf20b0fc8532
9b38ee6996363aab2b7251e9d3779f82fd630fb78445d42af6f3668a0236
668d3d14a4fae0a3b2db45b62ddc171faf9f443fcd7de751d8e97f4d89ee
2a83d9a275cc79ba48dc830f53e21e9ea7e3ecaea38ba2f67efe21f3c820
7006f2601add8dc8478fabb6f331afa6848d182f70e8b937beb01624ca51
605f78398b4af686e663b401eda549328ac72819ff0ca11751cbf3964f4c
11f75ff9a1a2c56e1deec55ae5bc3ea000a42ca596450a6161346a93beea
20273b7ae483f19d60a76d1a815f4557b85b760fdd0f2f7d2ae03bcf2ba7
af34e8c4c676fbf762ababad79510fc7e6c59b24f3975ae262c7ffd69c42
970a601dd353724f51c4675f75530ced3d63d5a42ba3807c089bf8b4eef1
808684680bc39811b83bd78b225bc3ce13bcdd944aee02d03f68dc92f616
5680caabca59d626996f5cb9a437fde4826e94118ebbfe55584ac4dee977
9e40a8c120084e9b1cfcf7c7de4e57168d4e843a331f3a9245b36a1e8ac2
d4d2e1c3299da57a80c51b81ae279c8994da64e21b1c4572029d0df54dd7
fa748e3d423aee98e4f5c52172ee07914fcd3ff08b1d0ee0cb5ac43bedfc
8f2132147ad40ace56d96d130ddd10c1c4e7dd2674fdaded3c1c671ff136
ee6702b7ac12573b09a4c94c34e8ea85a61bb564cb073b6d8598587f14ef
c55209bd1dc7e2f6a3ad8d31d8757e57c8adc9c0e45a37ceef11dc511e9c
8454e3622b7cd501897dc3c4a0eb472450349a8cb09df09960f6ca7ba096
d40bea95c8d8d9f04420456f2cd4c8ec9f1d19cd13193dce63e9c6411f94
51c83b24f72fdbba16e86d55b23b03a05a8d1c17fd472a1f969d8b807cb9
6a0d97bd56e515a114ad793c1badd68e7bf1b5cb7ba98edff9b8693a28f1
31259e7373561d6e285474fdd7d64d105d38676d2da5fcc7aecf43159b5d
babfd0a5055e0fff59aa281ea84606d64686923218517b8c29b1fdbcf610
ef6ed5368db67bcf4aea0238fff4a9dd180e89c9dd756993e5dd3fd2d4db
fa064588ccaa7dc211cd00af982870d543f3e21bb04173729d59b510f910
caa0b3045c7035630329e237b2f6003938cf768608a50862e252a288d28d
b3a961658be57946296681c09791d8abbdeeafad3cb879b2c211feb6d361
8f7c74bec3385720d9effc91bad9caa65793dde68b628d4fb941534d10fe
882124bd231f1db9d500ecdf18dfb7751e545132e702b4ee7547ea751ace
779178bd15eb900254558d772fe88eae9f689ea9fc445f6ab4eb3778bc50
f97b16278904a44a0c8c7cc4cfa6c6b0bd6c9433a9e592bf503679293a4f
17a473534b4133642ff5ce398b25756b0f296c51a0e840597fe4efe27038
17a2d96812be26bfeb64e5d8741f5ccda0804d1aafdfb084871566e77436
fc2b0cef4615d567517f09c1f7f26598691619d19a10d0a901e72e913380
008cc166c926bd3cfb3d73e8ec2cf66ca5be5fea23ef2a2506952df629de
8a00a2499f2e908fbc8b51241ca08017fbb630f0c8bee7dffe508bd9450b
329eb6b26d41cf57176e7b7e0bb0efe447a86e4903cd37698500a6530f17
7f728b44a8b7865cb492c57b8f24024ba314e401e7a48a21e2f77400123f
f4e9fc0d12f43f1f92a62664ec7662c1f4dc47306d3bc79eb248b28d05c9
afc0fff8a98e33a9434b606ef0d938759f24811b7406eeabf413b17add02
8eb93e0bfc3202f9164e48d009c4a1f1d3e216a661b7024c35ea0c893cef
ecff7202b4b8e8c9914d49c4b7cf54cc0352e2f79e0e4cb31295227dbf20
6202b6f5149a1e0a4579f959beb04612641ddee12282b8198603b76e1026
6d28ada8720a982033fd82552b59276e24df69636f31a95389954acb4960
358b3fe2524cb680c07a6a24f71b6c6726b392da25357bf19c107e367b70
8a1f869e7ebd11d7578f5e605191a08bb7770f4bef87588d4114d603dbfa
35df49f6ffe70a8d5c5b353ea362c9bcdbc38d4348ff38b10c58a81dd67c
8d7d8fc151dfab2a4d6e3437d35ba0c5817897aad37e2950faec29a1422e
bf31a0c712bdca8036762ec7df9e2f11abcf0d9d04c13c2c0abf0a24c7b7
37a5d18992ad3fe163fdebc5a23cb6fec6d36869ff241ebc3add1c446dc1
27f66932877982d8eb66f1b8c5e3d80e84164a18edce0ea73a95cbb38e19
62a8cc596e3654099766e9c9912dd1eae6304e0c5ebe4e0d0463d2fcb2d5
e5dd390292949334efb8feac9ae4a8dc0faae68bbde9b71463824baae4c9
6a00d0c886880945f85fdbbaa6ce70b9fe6b33b6c221d8f33c2678edc480
7d414ae148f7ead1487e9a56c0dfa7ebf39e4f18028805e69cba432d6a3c
39bfa3b1ecb4d608c92e4af264c485bfae73e31c91fec5c1e1815d39518d
c773a9d18906dba9f3fe69a5339e214a603026ed5c2822f3f7926df4e488
27d88b433122ecbede95862b3e1d304627359397944f4a854ca75fd4d22c
eefc230103976416dda4d2ae7ee1f9ec564b937cb7cf241d1610e8aacaec
44dd89aaeba09669d47a5a0964a750a96cd15ee7efb3ae461e0ec24424d5
88413a2242c4d6093e8cad45e006be03c0300466f039e55c7f2a8c845af2
0de5dc40e516cffa4f551d3f1a4dff7ecffac4d51c3d6f8f14636b1c487f
92ce6dc08a18d2bf733141f443898b6e960e80883141b0dd468588af7397
63f935866553da06432c52603f1a650418e1b9edf7792ebb77d86c1973f7
84a1f8692ff14d473443d3680113c90bb3cea04128169a29dce516b19ec0
2962bea2fd63b82219ccc731f52f813fce22a4956882d3019f6179e4a0ce
5d4b2e090704e0ab3289835b7926c43c33d68608f3a15a019a6fb93b2cf1
258dd30b92d758460136858028ab7a18baf862fb51b0b7abb0aefe0eb557
51d814b447a317ebd056f69141f2c3fd4cd5ce4ed3523198ecc5b48eade9
bb714f4911720aa856199c5a620476dcbcf6e9b2efe8372d5e8ca03b7a65
c365b3fa208134ed7c273c61821887dd0fc253f805d0df1cc897faeb5353
a20f7380ba3ef92afc92bd8b781993d2c044cfa8ecb62ea9edb8903387fc
b2d12ec46bbade3a2bdf402eb81afe657aac2c7e3ad7f4e3e089cfe196e6
194ffd8db96abf5caac0144004d798b20131639dfe0c118c254dd8d8095d
d2711c14b9391e200fcea31f98373f8af84730b79fc0cd436785e4034053
4a9e012d3affb8e9fc3064978805b1e4988185776a33e3b9c33987be19de
3d1616f41d2471479aa42640252b74fd33850f0265de18c5333f1f20132f
2b8c5db04f4c6a005bb1490a41e0c075bb31ef2e707e5d8301690fdd598c
6660cee426b520957bb604a563b40586678ddfc868fe9272752929e60ffc
0bd08551a6411e533c0874af71939153052b1e51cb149f93defce756817c
ffb10e08e65ebf67691536b8c213cec4bf887a39a9312e563703703ae45c
a7d593417cd643a2c373954cb75c3b6877888ff59892b78c471df29d3293
f9273920d1d9798da60542bf3ad74b3b61fb5c57b51ea88ffbc14a86b9c7
3e42da0f582147226e1a8baadc1c158f831188a9d2412eededd759bb2902
a3a52ab1914fbd15ae3fe4a722e0cf050b4694454998485c93eba7d5be8d
f3d504d46ab6c0adbeaf61a38026acd4ba99b8cb4ba889469461eb0373b7
b7081a49067bf9748b5a826236fd61b9dae3411c15a808155acca6bdeebc
080fadb0bff0533e0861d2406181de0155bafe045b7acfaa3c103f9a53ef
f01729cb86d9f8d86d24948161f2d5971bca58b242053e1571c145c635ec
68700630ceb0ead2cdb563da7cc42f742994142dec77e31726e26b1c1595
0032c56c48b1eca7d151cc48627ccebe25e7632b0753b147b38d8fa7cf0b
cc7bc973996a81e9cfeccd71423156b74055401e347fa4f0f4b0e2be82b7
7698353bd87f3813754c5b6727347ee18654665d375b70603bb7ca3efcf8
4e5d367fff203d5a3c713118ec9020a1f2caadb0212b6d7834f5453b7f19
8d95561f305688796d265c5d76cd7e469e782cc27c13659824cf6553a951
bea13506dd5bea311470c537b375510158f04f5ac5e539dce0d0f6f6ce71
50a6f120091d43e26a9aca738a1a04727adba25e05dd6908f3dc03459acd
fc79461cca8bd9fc6e1d7db7bf5801eeaace60d5a68cd41509aca8bdb58f
936232b5360c7be7046496d18101ed5adedebd0a281d70919afa9a626aee
25a80d7a54e8fa3b12f6643275e240eb424a93f6d1ec86d51a121c20ab8c
dafbbf2f8f1d698dba5cf9c6acfbf4230c21821bcfd98f2e873f7fb79cd0
f31ecf4c3388d2869ddb34618a58d3e8e75f773ba1167223eab9e8856fa7
453be0f6e31c3d2e02d26375e3f035cefbc86acbaf8369761002ed00d16a
ed58d6917a693a09eb6bcd8711b3937592bbcb52877ff108f35c53d91e78
28c880f7f0fc07e728a635126987a2c7863343351de2b6080e7d51fb0b8d
a0d5efd542a59e322f28597c59fe6191139a2121140d901e24b4a870cca7
ab1a79551d80625843d14941832e04c11cf7389cdf25df88c975f69d2414
dbc7f6710273b7e3ce9ea7acef4c612841d762805fb07aadf6c6e95d92b6
1d5ec2f32b0e302f7e5d67194b2f9d57e5be31a0171f6707b97c943fdb4f
3bf33b9d13f8860769241b86ca2985a78040a6743ef83907ecfea224bbd3
60cd09423b43858a57e0267939cedce2c3477f74f6e45d758215a733d370
409fd5f2ce9e971a3eb15b4a965474a4be1dfbc00189f7e9bb784d065d59
62b36c9376eb1f3fc829e699d28fc9611be3227f7bb0a22ca6343c07a53c
3dc67f8fa7d53b124b02387415530da6cd06ebd52f1b86ad93e620c9da46
d3b098efb9a639c801d592154ad398583345d0f6c8f7aaf45fc81e9fd4f6
f0749d9e98525ac52ad095b0b0e8ab1551b0749e47974bcd07095e688da1
57c1f1bb31521a20ad3310386abb6095eb82ad9b26da18064629ba46014f
239dc2fe14cc8e4a4c1b37acb67c5296488a7261530477a543f3a24deb03
6c9adcdda42421d6863cab6deaf8d9d1c69d9f9d2a18f6b39b2f9ce4e368
429c213716fd02b0ac614a06d29fdcec1232e89829121c8102aa284616bb
b12b6c995b2362fe6495eadf29562a473bf3f4670a78ab40e89dd6faa5a4
6d4d2eaaa17c5fc6e9de1e65bed2c3abc3657f52f51d55dace696219d33a
07b6770ed038728adca08b84169a20fcb28f6954d3985f8ed5968208cd4b
0f8d81629c32e1ed3ad1ad2b4b76bf39f2ecffa62169a65fdb42a06f6da7
9295b064956a1c869b33cdc7ce4a31fa3844bd1cd3ffb82771ed073c6ce8
915f3bb7f6e3a5827b2c1dfcfb7eedbde1ccc202d27eed9d7c56bd936d33
926656c6ba1f3c181fc3587edd7058527319a8628249c29f73ba8dfadbb2
2acaa4ed8dd35eb941754647c6fd9f64b8c3953b457c7146691583c14093
eedba2cfec0601004a95b3703f86c880299ca13a0f4f4c87a6d0043cab22
cacd25247233f2c1f4649fc0fde2dd12998234bf29edd5704250fdd92e66
df6678565d90a8d0322726be072aa2f71f778994a0aeccbc9c17b06f6323
57a539183d261d478abf9da074086e5d1eb542b81180af0efc6a1b9038c8
3ac45a44c47e1c4542288682869cee97d02ceee5a71a5774227f7617fb00
58af4f16889ba9b59c754e55de38c3565102f96f35ee9f59be19584c6b8f
8cf156a23d97ae1bafaafe6e8378c0d4f0085204fc908cbbeefba36f8ac0
63ae33c8df90eda64945fc7108b4a87c25c9e0b16f80ef93cd7113b93eba
1c2112c6cc1d4ef73898afa8e8b73a13106bcdcceb5eb2c94736f249460a
2de9c5c3ab5c0e6948cd735d9321f86dfe13dcba957710d252c173bc5707
0acef6d23cfe8810ee326bbd73c70fd662c252434a28475964500d7a6d5e
cf298c573ab27614d737cbc6b78de3d804047b385f8ae69fdc6e939d7a8f
5cdeaec6cdf0b71e9f4ec3cdada4400e23a8353af5bf6244acaf9f1affab
7638d8fd4cd96ff5dbe697ad04dbc1329e7f03cfb745e2d854df40f3bb2f
2aba6797d046f3eb8fab98b50e0764632929d9a11edb25e41d80917af4f2
5ff5e6b1d832f6c2d566d1b8a6a1fc39bc31c8a8d4f44273df75a0bbbf0c
d3b4f1f1f7ae7b90d5dab91cffeb7a92e6cf1cab26a25d07c3eedff518f8
246798cde18cc25688bf1715b29dd4c59309354b96e6a513554ca027c586
8aad381a5046273bcae2f55e67ae0386531914e3d57ed64506eecf415788
d89ecf7efeeb7a4bff181e216fec7ee4b3632597be579ea21f9c409e5840
4977a73f155289bd1dc3ddc896772528f2999022fbed4eb55a9b6762fffd
fef6b87c26ecf4defce17e3560fa30418081e5c5e4add2127357b9dd8242
777ce5d1f4406e14bf5bcc6f7c874bae0483655e9dc569cf4c7067ad5e04
d00b66f486a38c76ae0436a987769033cd8460596e898759c47f7774120a
a0399a2cb66e34a9482fb1602094e933d459cfbce8f54f76f7a2fe2cf628
a6c741cebd11f5d4dbe5cc925a91c556b1ad39a1e241b5d22d9cdb92b95e
35fac463a75994c0e5dd4ce5f1e26cb0868535aeedd759ae5e0eb0599153
8089f15f35ef01d0c82b68dce4effbf639aa4cf949f568bb110e5de2aa14
5d816cce49ca115426e2719671bb994e5d623d7172e006535d06cc1cd6e4
41f2084e8b4dae9ec8c48b962248c2621e604f8e670ffaf21b532a0fbc56
09b2fbe8ccd6aac9c38d136a7cada67dccf638a96baa84521f5fb6a22bb4
865651d2a03a4ba788ec837f229abf3a249ed1080b965ce87d02ac906193
2d4bf9487235db0df598cc637e7abe246d26d3517af298e08e43548138c8
5264af6b15fc71b0dfad3e3116f57ee9d6f3a7b508e1568a207e53b562a4
8cdecde85edd61e45dd2585c39e9d268d71d33c27a5fa4424d131ab55758
0029fc5a0ab374125f64e4a7ab42cc7a89ad49ec87263048b44cdee5adfb
ec0bcbbc974564532ae7270fb80e08fb927077007e69c5761fe85ff18ea2
b7a981338afed70e2dfa10882fa3be1d7aa1f87b6d44616e557c7ea1e1f2
18d817d7647a78d34dde045bdbba08b0dad39a931edb1c6c51b580697f23
7b941498793a9659c3ac8fa74c280236db2a9a093ff9dfc58313524e46c2
5ad341529a3bdd3a166582db8ef407661422f21aca0f85b887ced5ae7610
87c94dd22ae420f60b3d712259e6e5aa6926fb86368f6f6bc9e1232a1138
65780b192dad038263ebecba46897dbeb4870ec237afcbf258546eb4d5c7
94215a6c9b1754df54e6630de2ba9d48e03fe5caae3395ff95cfe5b6cf8a
331a629368b1611b042cbd638891db5620bd2705ddc8c2076796111c9e2d
85443eda0ff1878c88fde73316d8adea6b90950a139df2b94aa96e5a6d85
745a01e5c367d81a7db7ee2808eea338eb4e4ed59badcb67d06be4355715
ffade33840a215944914ce4cce3731aa05039782d2ea817e142f3c4bbdd8
a33e419dd6f7c18ae0bf81b56d5104dd708338306a2d791e8d32760c893d
25541c2161c524f53d8b37d51718b8a55f0fc7a4b32616e660dbfbffaa3d
bd6ef692bcf52ee79cd43a8c602bfbef37f0217db70b60fdca7f3139bcc0
b07ca75c82bf75a05d6816d6ecf993d95dde0f98ad4d5c6717d812fd462a
ec0281399b612bf5194199fc80de916b22125af9c87a459edb2460224019
a2134c363ca294b2e3de6d72e701eae567fbfc0021bf7f30cf17b38d22bf
47afdb6e305751d8109d92510da8d52dc45e2d1f2e2c03322b0ebbbcaa50
4be0d276ba863cc2ea6810eac9ad199dee3f88e21294ac6f1a973691a9e6
e992c18bb596fff551a3b43ee2362b96997aaba1fdad02d107b961ee542b
c4ffd830f7033d26e7cf3661072876c066e9903724df13e2c4807fdb67c3
bdfa128d54c831e14a91c4060fb1639332c1a222c4b3f36c0a438d554fb0
72fe7cd5dc87f595e17a1eaa0d07b255a6181ce4eb644fccff1f595247d5
015745b24a7011dbee089f43794ba6af87f2a9948319f778bc9063bbc8d5
fe792a6712df78da142535812761d3cf9c8a485d862c4f8b00768d7b2609
737b1bbc9b5a3edf7278a88f008ff6da1b468c72795a1e672e4bd34baafd
2e1bf64287f78c9539e0e8485fe628dd9b594b41ca420ecd3ce27918507e
5e1bb7ca6d5d360eb78a377a5df2e0adde76cda7565af4f2c9438e0991d0
20a06ae7023360fbf6bc0ee2ab91b969980625990e64671f9a2dd808b9e3
efdfe0c1270123988bc8015ae8740487d3b8661843471588bb4d7fc35846
f0a8defecd5f04eb5600eb8fb44923aee8d1104302e9281529c33c682552
9c5f9e48a506a80bd07734b8c4b0e399dd74fbfdd14de1804c20184b8465
3bad9a735b3a503ed1319251905ef54f886794c11d0200763005679825ae
e46b6d263e86eb60bc7835675b208ac07f1d8ded5f5c5bc14cc38e055f06
f1d57b0bbbe3a7350e6d4c387e88ba9ab62c0d87c65ff7c037e007d42ad4
3c4c3bd355ad4cca3095f6a5a72439dc6170a8260edbdcf92ca5d38d0d9f
c327b0588ea395f835d4be381aa1c1e2404321517afb276ef4518deb32b8
52f7139fa45ea1308bcd1614f93927fc6787b72f9fe7f25f58ee54fa3925
23f7d015a5420581b444d9f57fed2137a73c3f52a4ebf61e027626c403dd
a888f0fe67235542bff62ec907202c1557e053898fe5b4e6d18686009f90
3e15fca68d5750d9e12692258d42449f427f904ee320b62be99f27fe4f16
59ed13f52a383a9a38c55e953e026882af7e5d3a22fd07b5c1071d635334
14b6c9a0460001f451c047c1a2fa9dab8e228573e59674f14f44b2848bd6
f8b4dcd8c9259ccbffc3556e8e228dceea7d8ab861c8d77f8410fcdf2872
a4525a722cbf792e7a5e5a2bd9207e43475909d76c132ebc70d8d95b3269
f7993c2be58ec25de92ddf614cbf6c09bed5dd003b4251e2ab395baeafce
5873b8263d4bea72d7d6402efeb65f392929368d15292953755cb219d923
5472ba791660b6971c39b808338aa4c7356779327c37a091b3f9b2a4efb0
ed6b04151a8579c434558f39468d7c5bd030ae6b3afb865f8a6960637ee6
34ef91be23cadea7dbb06585ba79c316504a4dff2e91ca625974556a4a5a
f50625d057ea882e39ea70585a222e7ad1d4533dd89cdbd6b8e265753b2b
f47fa7a9390a01308f8e91617beee6f39e61ccfdfe7dd6d00a7cc0466486
16f9fb6dd515cee04731aa4055772101b337be39725269482e886721e31b
a3800772e896dece3c2fa5a525d26d048aa8079daf005f37312129c15233
d79095514fa6f1c64fd79dc9718cf04ed5d908e77dbb688c19cae3e22269
9b8dd06b33d20ea982670ee8e74440cda7d614d5378542c808b7ee38114f
67fa4062384e6db845376566ba9a91bfe6dc599fde702064de19c3e047c4
d49a6851549bb6d82dff8a214f62a405bf9ac796c36f09227b6ec58932bd
d258aa5fa27983c9b8362b57bf88075f89c6ece4e2411bda7c454b631d6c
159e96c72152887520f9fd117d47bf28b58d992c3bb4595967799a09fc25
c3809772febf317a8f7d20d3196d1aae44a35584a312d90bb4d515669872
2943b2ca8255d106f7e50b3dd7fbbcc9337b9562dd34ea544e41cbd185b8
3ab28408553279ac0d735f1d4cd0c00c218281c0a53f2d73263de97967f8
beaf45adda796f9e13ea8168938c1f03bf9b45a63fad601019bf0edb0ecd
2d216a3f863a454cab2c3f592a1bf32c284a582647adc77bdcb944504994
604324c2ced414403c687b97f2f5835852389f4119c3bb4c7546f9b1b1ca
f5b954ba95376c4806f1a8250cafa0f46b6681c7da1f317acb695f6c2a66
550599a03ff92dce2fedc9e5878ca3e5505d90cd077ad706a3e16a83e3de
8f97ed7616f777a67e6b624ce3a978c9dc6ae4a3dc691469a8b1e68c67e4
e59662828b75b4d3f1ee3609e781916ec32527059955392a37d5e3aa6b93
a02a61576b225b744664c91176dbcc10680c186e77a2984b7a918b313d09
a3b5d553209f3e5edbbc2a0373fe7b4345ca5551acc9323ca30b08644941
c0cd198cf1721407f1176da6bd7743ca56b09b1c894a818488eacb162aef
d85643da1bee8b2e57a9cfee3eed246e32b816eb81620ee7b7692cd1a227
68f163f51298a005e1d7c9d1b87ded27a45ecc28cad3ceac8d98a8eca5df
dbffaa7d054736f95ef5f11fff9168fcb3233bd104ecf2692427be084fa0
05087830fdcc67d68d0e703b7a15095a079edbd8a9a13f1080778f5af350
df080e642e824513e5609cb500ae1a0b2925674bf1ac5e1412a00cd52b2e
e244ba359141f2bc1ce503695356c7ca6fc212f5197c856abf8a65504414
3e3502b2658ba37039eedfab07497d797f208fb3827e0997c264a24b1157
be27445c54405b155ad43b36d5acaec89c414f9273220daecb93ce637333
657767a2eb5ebb811f495c9ea2d05e0817ed038a843d40617c66539d1461
7fca165a20dcf75fdb18bba12e139344fe5f46bc6fa626c72ef5bd608a69
a559fbea9564e3cd91aecab7b7150f50e315d43516bbcf6318d89964f401
e8e1a01181d61a6b6416c26b010621867bbf8a67ae98df1d41b30d83b8a9
29a2a6664a359dd1e852177099c124ed61dca31553b1d253dee4e26c3c97
212114f122a6ac8286492402c4baa1c18af8d41c6a8602d0929cc8364f43
5b9e6f00de8307af6024c029944eb56c32b6c7859c34b01f682f3070002b
beb53f95dd82677a19f1c192b289d41ab671320654b0b1a63805978533d0
1ca37351cb07e03b4fab4b283399aca436dcbf7cbb2160a59d3c9f4c4759
83ed83fc70d49a4605f6693de3b180e4731dc3d030874fc32569202cab60
004577eaee5d4055139604a27b96ce20d106c851882f7ecceb079f28ea85
969d142f1bbe8dbf9a5147ded50490e113459b61a9b2ccb27624f9648fcb
89649f719f35f8e8714e69ee30b4274ab9f9f89c599d3968a6d0366dadb5
2bb8ec92f04743e76c76a9a57d2bc9a13e0280db797c159aec78cfd38cab
ff033ff964953cabc75cb8b1a62d202620ed4795a6df2752b5853dae63cc
350554c57d594e1945aa82aff2fc3783cff5256981a3493b844bdc646cb3
645a4c405d4799d54fcdaa8adf882c47c5d97aee560ae3a3eea170f36f51
289656b7181d39ac1bbad8fbe933a78ad2d3e8608f10348ee476d4ba2dbf
b35f7c7c991626a7e53f81e8b7402054edc7cb7978e534dc72f7134a3f8c
7d43df33c9b8ab657d6596b486f5aa39ba1173a9c64e163e104b842ad75b
b878f56aea5a579549631f9996894a4abef722f32996f905311619c2bf62
f6ca051b338a04d6d6254ebcbeb9f51686481cde00610458b438f96564a3
e6d29bf389f51c6295775404ccf6bb84eccd752c3572c76e58f15ba1c0f4
a597a4087038ea7983eb557d7a34a7fe64f6b7d32f647f572dbc082f623b
283d3eef452defa4447c22741bf0209a988276189000f875a4a93e051b96
3c5529f7183e4920625544827923befd9b51175590d9154a77b8918e111b
19eedab96167cb06a6f01bd4e5ac4f98b0ea3a6e7f80e0ba905b51cf21cf
1a5cf4fd9b81c7453f33f542867cd9ce6e976fb84cc0b9741bcf481f3e38
f59a0540b90ce8e5040ebaabafab2317da80d47586871c268692d70a09e9
32f837d78fd582a28a63f3b30c0c0f6b66a97c3a97926aa8e78982f98c27
739b43182f4e1934211958fb5dde5ee08bceba30fa450b005e838f69f2df
2ae636f4dd63effd9d2499dbe615b6c0a89685f2e726ea90eba5496d29e0
6caff5b63b3f66db048d662991cd608b4dc7120dbb1e78731637e0e553e2
1e8a78c9ce1d4c8c7eca8d91cdd7094aa479f5076df938bff465daf74e8c
04b006f77102f4a2cd1a9d5114c6dc666a8f6ce7a02c620e0d04246abafe
a3924317a9bc85ac8ffe06223d79a8a1a97921ff022eddb6bb54365ba22e
b587a5231da6f77a06979ac6aaf2f19c6fde88106d4e1e0636aa536458f4
c9f5c74b53d01015da03cf150a0796af19c7978a094a67ec226c18a4280d
04dec18ef6909fb9dd3b7ba208f8075d5cd7b53007facf1531d051b251a8
f294cc83b540428aa306325c929b1b76d90f9f80a46c8d4cede7b3e3cbfc
0a3fc522ac5c12db1b3102150a1471450e73839da905daaa2cb461f309e7
7dd264fb631ae0141a9d8474dbfff96ea79cab0c4abc7c6db49e411e4b39
5f52f98fade13aa80329ad887d1af739520cce8fe9a157eaf3d492ff13d9
b436658475757799e0af1de0908a422b82d2f7526db539fcd8da30ea8f50
5ef621b7654ee7a5beb6f3327ad7ad2c159c1ddceab2ab9d669237df816c
873ab1fee6f12414a914fd1a6e3ecb33b2ad36bd5e963f572ddbfa33cdce
d97730abf7a2dad09777180d45411b68ed8648ad2efd901f65b69cf4483e
56ee9e6f25815f37eaae3984bbb58011c2e0f6dc048ad0f5ff6d8531a8e8
17a883b47ffbf067ad63b10808319c645261f757926e9f35baf490b73450
e2120b827f9c3a62476b279cb110a1c4d61f85b4d0be280ef10187314fa1
e42cf9e0bc1029586dda81719cc4d6d128e5bb62f8fd9f7c955588592e99
9995781efbe39e4e725145f0d69b1a6ee3a0cd38329d959f8af7f41132d9
c904ef7d40885f3dca595846077d9189e983dd3e73a5505456a8acbeefa4
51692d3c19e02bc3446923da09ba88b5c247aff032c787e300832cf9d24c
7454596dc90cc7db81adcd811a737495e3159650e7e49cade4f0f77c94c5
4c0d064e542904d29512e12f924051d2e9845ab123158aa3fe996e44b659
2c146c7cd2e5a6edbd85ddd2998f570b089d6c79f11c2e3b7d1d00901a5a
e80bfa3ba5f6ef85fc72092ec105453c5203191b04748bb50cbb8d2d5248
e40c3094131b5478a9a4cfda1e297be4708812f3cb2f83eb70f3c6c6089b
7f530f0a48c3dba543b30c225d42436040ee5363119c6e604287320e978e
e6a78bd43466c303d44d547654f8f001869ffbfdae9da2a9a4985d204183
61fc25e2c7d04cebd395c1659117d6ded9657dc83415e5b586bf24dcd040
db4c67dde98b0e496ba1ec40e1e4a536415411c5eaa03b0ad9a0b2bf7fac
755ab366467809305bd525d5b22122f5d26a8425c2728602d7badebd0492
9a143ff2ca92dddc8179cb0514fdd10dd299964db0bbc70c56530383a057
9b7b0455e5d7c40101b808e77fff559b76cc813ca93ea0ccd60510990066
1fd59b687526390446beb555a20289b260fc3d9843a7fffdc6c7484f9066
34fe81625615ecec68fa29c1da98119a089304c6646c0a59664fe206e636
db393e0f2d683641b9a672f15ba1281efccf978ceefb9b717106f1149160
df4bb56586dfeb985a2722d35ebf1d621df702ae9e46586bd7e190b620dd
01ed38e2dd43abf65f2d855f51eceaaa91e458fbb1c1454fcf6e67bbf60b
cb24c19053f0dcd2ab91f70c9e941828cccab00d3ec4ba97c40e58da7570
b7d9e5e6b986ecfae67bc3bcc65b8bc27ba729139dfc73f0649f4daba002
66b2f3d0986bb2638c39cffb3a1d6a103df096cdd9eb3f76ac0c04f235a6
9c33cbe175fac0d0181f4220214bef57f4a0fa2ee2b4418bda08d35fdf0c
f64f81b322760a6263a4d1204bcf0444741ec002b4f93844f42b6c138e40
8b8a053045f6d5cea67cba4844af6fba4561f2316d2f60910195888d9f8f
69a979126a7af4b23810a276082a5e23c1fdbef1cea3c4130ed20598cbb7
edae55b5bd3655ce7ef7335548cb20fe5e00bcef9837be63b79fd5c42c72
d9cdf3b039e3e3d90aebc0b2b7a23fcf802bf71c89084876839b0ca5f349
87be7663ad6fae39a4d46d54003c3d07c062d9abbfd1c4c9b8fc604bbddd
b82cefa4365af02c1050ae04b8926a1b4f44307d491ea5872acf004b2b17
4ff6ab9241df631c83e0265807f6c472f1e3eabded956446188daff3da09
3b7c9f5635b0603703a537022cd4181975727f20e78aa5e972c08c3143a6
db18c11dd7978666d9db0f9af5d9d6dbfff8861f83ecb3b7e2cf991ed841
62660e165b5419d8352f6e76505767c752a1637e37fbd24483b02dd52989
536c26b5441a4b88f43221be04ff8acfca2439b808bd52652964336352f5
81157416e212078750783cfe3213acad1cd8280fbbc0036ffc4d9102f915
263edfcb1d24b773ce928c69eb85d5bc5b68c0ab9264f340b95e5cc88e17
d90bc2b997e8f8fcab276467396225d1d958ad8bf950767d1b962442ab2e
5f43b959e9914841bcbe07e70b382ba8110e3a2f9065a881083c3f3a9721
702acad4d2645a802fcc35e4bb933665b0bba230d2b88dafd3af9c30435e
6518a0284e67ba076713948b88781c5e0cb7022e9570d9faaf82863b1506
38115c26c7e96d4782cf9d98ece0d8dbd9853f8c09abffa21da860a3d9fb
f4921968cbd0467bfc7dac1e940a14c108ee644a6eecd31f4b01ec576f76
66be0eb4ae9427dea0f83e23df7a1862a836f184a51a0051f6fef7d17785
009a01892f60a88ea01f035cb5cfb39b6b7bf2691e2fe09c2f74a00be1ba
d3c770ea697a398c8a6eeb6126b0deba368d505b49b65ebd86ee85f83e38
5e8f2db7b83170363d4a0f001fb1e51859d81393e31be5723e6fa8fb9144
2e2567c0dfa81b701a4da583cadcd8cffbf72f4ff4c8e2c4ae279d52a8f8
c5dc86425d4935d1e0f2eaf69e030dc6cebc786015b2003c704cd0c44254
3fbfa969a494713a2ad56b28a305d8edb5c7685a3cfa85ff953da922634c
062e0bfb74ef08af9b3fec6f0ee57f465f3ec21290dec1ecaf49af331cb7
1309ba9afc8ccf64c0284fde3bf00538a9d29173739d5af5c7b3bd3e6f0d
5d9b18f628039c230e925fec57457e2e46c7e6a33fb0bdcfea4ae5164dca
e7ff46eaf0d4253c24a2873dcb33caf3c285c3461c8be6d07ed85919a98d
08146a84130262a21a49b07945d5c54254f494fcfb6703361ae135add167
d57efada430b46c60d06c4eb17b618f8fe1c7b3d44e6b7b9e721e443cbd5
8dd4edc3d5a7aa1f0cb58751f0b918ec149acb7aa64eb2c2cafa634b57cb
468495297a3089c20781934e2a8acae77fabeb508632849e7fafd18fa6ee
677115972f48d50194d199ec123cf61aa5763c221d4bd57e213104bcd926
5e36cfb3b33d885d9afc3dc6d8b0513c6d270462206665342d352e36bff4
cfcf694e9c20b6d2ffd3addd69eae31b0df0ef1088a1388f0819ecb3bc26
030b4cdddaadd96ea56518e642c92bd8d2b99217c1b8d5b74e8203f233ae
bab62e0c1d5777f3eb2c9f79902d8ef40811d742d94e065fb23e37569b5f
313a45c53c4eb94fd2bc1f85a06759b80ca258b690abcce7f3aaa410a3a5
b66a0f9c0f2d636ac8ad662e37a231c8e3be8c0c38834f0121eca21fa594
e742c87536f19b41b57851873a9125d60ee06e9bc716bcfc17e3e12ac0a3
c9988a244ddbebf282d76db3041c78ce3c7530448f2b558f647e0f22aa85
e9f23dc03219791451aa0243c88c380f8c57bb65e4904ca904ce354c558e
ba9a1b1451028b56033123e4f7da261ab31164a4ed85242ee4eb7c2af872
4ab8d2bd844ac3fc079575c9754bc918a93040f4fed81b22d4f8f17de158
2afca8dbf1d1500927a9861687c7d527268a70a64e8710fc3d517fce3095
b4e1839130a90093038afb560c36111e3a7454aa860ddd63356f5bb03844
b9407a24f878cc301193a65b198b6d3e9672a9abc2b96348f67904bf30dd
dc397fa65b0a810c3d2a318ccba015617a73e19eaa2df84db671710de604
c6143c1b213ec5d71de9a0a9d424b76cf2df06ed0760ec95fc46a8b7e312
d5d1ed09aedb7e6c8378ac039b7333b159b01ce2a446f7a50a216fdd4433
8001bedce3030e3c540a16d36a6afb64165f35cb23a3997ecdf8a817a895
4fa6140a16e558376ee08031d7f4457bfd42e009a8ab1223b93b6498759a
2e6003b95d192b71e166b2abb24968514f0fe63a1d0a1253fffdc8d8515b
d81ee8170983727246a427db2801d06d66eec823af41b4278fb45457746b
96aae024334530182796f97c0f6dc0575fdf4cfccc538430730e36786e55
1d48c6cc492db4108e1ce0ea403faff49eec11f04193ef037b64bb7a6e95
a8e759cbc6a9aeb1ce1110a23132124dd41ad3d8f5ee6a01727f46aaf945
fbd1f1816d1db4395362a828e73146d94eb097b98fae8670f9ec632212ea
48fbc45dc9e798603107b23bf84572c878a8cf363c9108540c4224f5777e
1b55d383970af7a2582ce2ed1f743beb5e84d9ceea12123981253407eb3f
58169df42434dddad4fccc324c39b1b95d67afeb550803fa0e9340e96a2e
19b0b8156bccb1a5648c548dee0cca50d68df0f031f3f7d30115ca095fb6
777253f3675eacca4ec097f29e8f2053a0bc48a1a0fd7115dc9a5cd17665
128d5f7b7d5459a117ebe63bb005318b75839be6739cdd73108c65704917
75a2f8ed82f59331da85b97d118fa313c34563781dcbc67d73a55f7a15e3
7f620e6b3fc34d78572bf6c134a59adc603789f740ecac0f960958b6fea5
e36a244ee16bf8ed5756cdc7c541136128355b8b5eab027cdfbe7eb1b60f
04e80a2e101e868271f0fe0b665509cf227e6401b0451933d6326d251062
c84c2223125b4fe767aeb162e8789981d2a12edd6df8725760829704c971
718ea5414b3f5a467e579d916373bf53106e1af45164a14314dadf3ce8c2
8386cf6d3c0f509439e2d99e79379ff879e1a40be00072cb325231792c13
18ef76b592da5641b90f5b68dc39256d19fc51892ed9d0ed22c578c66ec4
447f50403b063eebef192f89b46efdff65feb7af123a8e2d979a5613279c
fa26f33ca0ebc28a82d1148c0895d5c0d3a156100453c4cc515c79407679
91953c40652823ee395d79d27fef8e020923322060cd61413fb29cd694cf
eff580bd12635ae1b884191696d197548792c5205598481a2a81eaaaca62
512d225246ccde2cc1da88377b515270050412e901bf9e3d2d3d1ced15ed
3c6e7563deb65b43dbbef9da4c3e288cfc8558c6c14d0a51ee93b7b22050
b18288882baf79c59dfb4e8b46c539d7a86674a680935ba9ef055e15322d
83db5d03c1e140fb93730f0c6ec3cd9ebfc9399ae526e5b723884d0ec2ce
bb71ebe0640d94062c62684c6ab00b88456079e9ecfd42539ae554b1160f
1950d7bf9bbdf45906b8e55fc5602ea7e0bd88cdfca601c20f574c3f8f46
91e805af9fb93343faf5785c7c8036c87bab2498c78f6c5cc5faacf76648
248a2514417f719dbcd53c71b5cc16afa204123922fa3d6d4ea1ab772310
e1fdadb95005ad80061c21670ca9284c69d3dca3da9d4ccff491cc48b851
7e2d1e722e4d1e8f581c43e57eaa4c5e4ed9f8e8dbb3ae24acbfce26800f
632426103d2ba4a931fe27050f7345cb31243dfe8904ca0d27aec276197d
36b91fd580656f122da03f52d667c76e5c0c1c5372034a0c33e6183c3d11
69f3bca63d2d205b5ae964f04091e2e56bc95b45f08459873bb0863b7085
527aa91d0025889569a754fe00a05bae749829daa7aa12fb05c9793a9463
e5a31ed5da1b11ee6c4434fdd2be7ee6247611e62ce68409628f95d51587
f3242e606f37302f0c40279d52971f33260e12b1d1cba4faa5bae20ec5d9
20bdf75328e30fc2c0b44d922cfc0a4aaf0bf8ed50c70289d1bc0a9cb3b3
84526d10ef4b59af7b0b06e23363ec415bd1779c18cda78d46ed9266fa14
0c2a66f5be8150290d594a4c125908e2270724d1a7bcee293a4666c16514
ea2182f49fe1e36776d4bd6dd96b13dac263a8b23a529a3a5a73eddd2c40
022945d9a34c3d7f54acf07e3ba078d10e7b0cd6018f1478d20d8933fd39
4408b09e65179e0b5586f3f03dddccca09df48223566846573309a7cfc4d
6dd094acaa16e79a7012b3c5aee7e57235e9798a9e4b460ea9cbadc6ee38
0b3c88b39ed0582a86c1527cb463fab8a1490f5cf62c37b232fd87eddfec
3e1627655437de4cd3a0c59bfa353acba67dee0a603ea8b0a67acddf71ab
4e91f745412ead1ad1569a5a98dc0810ab5e2156115aec2cc5bca676a014
ef986b22a7fe19fcd97d8e6acaf49dbee6aac62e096511738d0243dd5201
2d699f791995d005d80a45d5fa96342254213e40433cbc667a27b0331544
3ad03592d7c0634439d7e819b0405b8e183bb6a33d35db2065a35c3a7ad0
b91fc4f5ef2a7d9b23218d4efe8c4a0d558761aac80a850533265dcdb593
9a7f5fe70abfd5b3d4eeede5e6bd08ac6bbe756b4ed21174fbc3623461ab
cef401a28d50e31f00cb8fc1d1c4368181b8a8ceb719645f0a705a7db99e
14c1d2408608848be9cc195b5b576d0709dc8f29609fe4a7e8d04167e0ae
1fb511e99c32c2b69176f0c9449858d81af9960074cf52de201949c01bfc
1c3d290b427d5e72f04b923ecbc4a15d0ce549c04446efa69362dd6e2e8f
605a938860af4faf380f517f2b6d619306c9574a5d6b2383a909679b116e
c339c20f9e72736a3726706b64fcc0e024a153fb3e9b56e92d4e5fe751cb
1e0449ee82c2ec19d3a1816ad9169e83d7bbc960bc2724c85974ba05be60
4b9812ba00f235c553c5bf8928519a62dc45e94985acf68c7efaadbbf388
a25ff9518ef84ccb340a35e05716b1a0346761b5776f22c8afb392bc6c61
d0a8d02ce27b96c71b44157348e9bf811d4fde74ceede2861488eb1aeccd
5c9522b97aa9a17aaf92759dd0ceed46f819b77fe935f7c1d4eb7382cc84
0a27f5059cc2e0bbe1bdde017e9c10cc732f80bfb3b37b00e64e3fed3cc4
a2f7aa3cf3bbfb6550c343831ac6ca116613cac2db68c4a0e5277de70512
72839fc590ba76f54f5188baa1a1499d51871a5035ab53e61dec8adac83f
1342cf57a99e4150422b6899c1ca8d539645edddeba1dfb5a5d85dfd7486
bb239717b3d0041ce13d9aee276f5cceb7e5845d1babb6055f28742c4937
156e144467d8fa1598c18828538fd5aefe31b0a8c1db0a0e9c41b8b62ee3
70204aff5739817b1341f3129144eb5fe8b357f6e005ac52ba9db014d108
8dc49ca796b04e44065554d396b4500589a745fd5f09d6fa47692986125a
2adf07b2ee20ae3f7704044cb17ee5866b76489dd756f7c1e7049450c486
945b6b467cc9b9beb3d03948114d348a9186efdd751f0580a30ab970fd65
d1345fcd891961dde44602d8be722889c331bec0ebd99de37732a4f49e97
b285916cf1fb018b1c03a1381a18cf02b4a5a4ccc889d2235887d8bd2ef3
51620cfae4c52b98c82cbf71ddd12eb935ca76439c35655cbd74a22436f2
2a456837b318b4e621c8a18a535d8977bda4427257cee67c27d4b6130b76
c6c69b8a809da157e1334ddba6f3872b21ffb2863e5767c6037e49231c21
d2964dfd9e503a83e3269f468474c69852d03b1fa0cdd2061668e0770a99
894febd6d6b7b890648d24c4ce031e11d097b02219ae4d52c92d62a2783d
23c6f944e7af3f5fec245fcf88d32a66d7f029bb4a97081e7471cdd3c93e
693bbc50510dfddf4145947b36daf3f6c9d16ac7cc991d4fce16f82a9fb3
cfa842df77dab8d2a2cb8f830e891e3782a8476ca54e0e2eb191036017de
aa3aa37d4e9f81aa0ee73bd0bb452e12a2b49b479360efa23d9a0c010489
2b139767a60ab40a45e19b04d3a5b967c9704d291281bea40a8636037a15
88168ebdb10cc3bc3100e4004cea97c0f2be485d262eab888596ed528018
450582f29be5c2458669550909627303e9d4caa864833efd158ec71a1306
564d5b8f1755a29da278f363f6e4212574c7ca73b045df948f1019604474
d005334d4c9d90f345a2c5b4f5da97220c70b6ecd5e0b16f7e76f9cf1432
c8ab7497ae653ef6411e5fa9604c28d2c031ac499f300c5196f9624e7503
40b8354867cbc3dc1deae3f781a3f9b4f4d2721ab3472f3f304d8804b33e
b221f580853e6755db4e57ccaf8cfebebe668ba09c90e4cd46d578c61e3d
279ed49b96041ab260409e22cddebd0c458c421d468ccbe63e6d9c1cb8e3
8cc3f97f06ce0f21bde5dfd675c2a49323b06e08cdc1b591e1b5db7dc232
4b7b8bccc7b685e92306b763f05c0732bf2e69dae0233eb4d6dae8e51e85
2797174a90941bff713bb1fa300822ec3b876c0eab99c9b522846ebc59d5
21030e25c048048ad2f911a1071e85fc259168d09aea20a54849c2b4729f
72b9a4c2edc2a71b970ff7ebd93361edf54211bd1895fd73479ff5457832
b1e14344a221148334281b9034e2e5407b3d9ec625be28ed4223ea3e04de
cd337476782088cff5f79b583ef4afcbae47b0186ea506bb50b67c3697bd
ad545c5801932696513bd7801e6f6889b8f067c98af4bec7227fc07d931a
259931e0a1dca3b456500744b965ffef1e488e36cf4160c875b2a06bc09a
d5e5dde02f46b0fecf1e40747b6784fbd2b85183d4ff392b6d4098ffa317
e8f2f7748ef18d08e00ed57d254e9ee59ae170de6b8e5616533cb068f99c
a6e710097228686395ddf1e58fd2e7389faa746400848533d5638a3b7279
d514aee8a88d08dea951d76b1d5328a9510287b7f9cfff9dbdcfb51039b4
383012f392d4190066bf9f76c499eab4e31bae681a4c83139e1376307751
1ef878db7883e13345a1623e1bd80ca9d271b505fafb391fda6c8b209e55
898e5e3e0b4fe932d86b61874e094f349775c08a34e62d703678df1aad38
55586a9f0eb863d5ecc119f6ce1e2bfd943557436ae0a2cb4e0426231277
d1049b4d770ac3a637f1e42ee4f1750814b1ec8080787a90f7c418c8773e
4b5d68021bedbea402995142c12ed2998402f911cecd4abe760dce53a2cc
88216177d8ccbcc024dbc55fb2fa02d5a17001fb728a406c2a79e713746a
8aff586b3bfe56dd7432f956213a95e52397761f44dae30a735889ffdba6
18f86fa97d29e352f228f682c75157504a178b5a248a9cd056dffd884305
5915d141b7eacbe1f5ac4729d498994144c4f8b4bf69ae70af5f45fcc36d
e41e59cad8be5ba11931597972e66803468b0e2a7ec1413da88defa3a2e0
c3fa72982741396956c059b8ab9df0eee087164ffc54d6416a7dbda976a9
9ebe9623bc097486a39ab29a4fecf3bb60f6c4153740c056111c937ce137
050e63030efce60fda2c91cdaf349ec66d852f092be68c821ff017a33598
61cd63c3adc0f57cb67c4d9b236bb267e7b3f155a5208c31a30bf47daa1c
ac2ce794dc4426690588f12fd3cdbe6445e62f765f3b4a71c1c9893d9a88
5b6d499dcacf30352f60a3d49e64312c5a054b70b66bfa801b92f8cd64d7
7df6d2bc68714e94be89679d0448eb33c813370a4bbe250278ba8483f207
f5e4c97dbb35be492f79d58ed83374e9902c13d8b934523356d81f99bf52
8265c652cb19d730df0d2fba9026c09d27b211c963dce5831075d1afb6ad
78f38eb94be3a99b567d7d593ca9c6a75b333a509d4b3e86bf1ec238198b
7b14c502e6415091bc1933c638261351d2b520bac2fdcba2089ca6aa78aa
4250b696c367dae7ad3eb463f6ca858b4881a03489df94c010bed9fdb5c0
900c359ba675dba59c22b26ccf788b287baaccf1be0060bd8c04d3132bc0
1e90938f67099f22743f58cca388aa16e9e0476670f3cc61b44d62c218ba
a6875c60480c35d4e7908569a26ab36c66b0fca0b0f2701072fff6723405
498945c2e69ca17ddc032b8c2abf1dbecefbe660fcdc96dbc22d1d31072a
1f4346c4dd2e739112c1c428f9a366265fdbb4a01ea5f6e8a3444e735bf5
1af614454e565a665eabcc88ed2a682a99ca75bbd923c18691d7d5a47844
7c25e15b6e6dcde8834bc241c27515fac66274c0af3e38f99bd1ade11e0c
5082670f63d3cfc14087d18b7f0e625f4c43847d57f755ea6c1db33177e0
1d826a42e75a5dd9896e9f5159ff2c2fbc0dc88e53dded44f3a6af8abcf9
b2db1c830febb1cec55c50a72379422282777f93c69c7784f4893f07b024
a685d1d424e31150a946d69bf8d88ae2809c27f96951099751f61b2f034a
c8f6805a7266b42c4b21ad07c49f94e3605ef974753696c3e10b1d030f98
a607ddae95735042091c4b3625168880198d233037544ad01c5695ae3c76
8ae957b08efc408396c1da06aa6a90130c82c7ce1c11a7e6df4b89e0e499
ac59274e80ab7f644ee0c97ee3b825fcc1f7a400d5cad458edf6255b1f35
0f295f911578908ba1864cefcd7cba0d79428b93cfc7076e8d5079aeeedd
4779b0df120bcd58523c5b3100bcefeb39cb313f70f5a3891c9b7ee2681e
85aacff4790c427eb047e2054257dd626d5cd74afcc17acfcd8804f5903f
de157a80b3e835f15838cc66edb4aca74ae337c9ed27d226a454192b0804
67c1de0f52ee9af91db8f958619cd431f27c0eaa201b915bada4974c7417
222a214dbd514dfa3141c5d96606c735281dc708784679b1e1669250bee4
55f2a36bbc4cd187f8a6041cf10f403f8f47f5282db76b60d5086295dd61
1a6d976baa3ec8a64da0bbae3b05c14908dd2d01b636bcc0954c875530ed
94cfaa538f415268568cbc84824933ea7c7d662ab60968c9590cb88d1154
43daaaa7bd5f959de2abb5652af388c7226b56371615a8da588d384947c8
a299b71531dfac5b6439db5c41ad18ba98445f77da9162dc2ba99cc21afa
876ccb67666b2eac7dda93bbf6c89cdbc81d03205c835fcd4dba84873c49
57da83cacca62912db36f7550bc4e28d22d64a1451e367c72b9db8d0e603
c06835f8d4aa1de7fd2b43b9d40f53835021959dd4bad21f45730ce1227e
f7f0f5f017fc01529fae12faacb85574a73632ffcc3b2c69dbb13b3644ca
7169e6a6dbfd2f474bd6595b0ec3018eaedddf27059e76505a0aafc82486
7aca064267743a55ed2c41a3341f833b8c588e685a37ac1dece5a9e935db
f633103ab162c7a926c8da61c5c566c171e747027836ee94916da8b9569c
2be585a884320e24d03e34059a1410f4edd6e77b27400e755aec4a834fbf
e2ee4cfd7ebd409240f1fcc50efe35c02e582e1b6a6a8b7d2320f30601a6
57d02bc6581c4789316d7b3c83cc13a06384ffeb1d5d9f8511e0ee7fa2cd
8b221de1a23fc88f62b565988561fbe9a52be3f50a309d2052d2f0a8663d
603477915994cb13b557f6e0b9f01b9581
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
%%EndProlog
%%BeginSetup
% THE FONT
/DidotLH-Italic findfont 1000 scalefont setfont
/doTranslation {
    50 200 translate
    0.6 0.6 scale
} def

/resetPage {
    doTranslation
    resetExtremes
    resetIntc
    resetText
} def


% Measure height of path
gsave
    nulldevice
    0 0 moveto (x) true charpath flattenpath
    pathbbox /XHeight exch def pop pop pop
grestore

/TextToConsole true def
/WidthUnit 1000 18 div def
/ForcedWidth WidthUnit 5 div def
/HeightUnit 25 def
/SubscriptFraction 0.5 def
/MaxUnits 7 def
/MaxSubscriptUnits 5 def
/MaxSubscriptIndent 250 def
/AdjustScale { } def
%%EndSetup
%%Page: 1 1
resetPage
/CurrentLetter (a) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 2 2
resetPage
/CurrentLetter (b) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 3 3
resetPage
/CurrentLetter (c) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 4 4
resetPage
/CurrentLetter (d) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 5 5
resetPage
/CurrentLetter (e) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 6 6
resetPage
/CurrentLetter (f) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 7 7
resetPage
/CurrentLetter (g) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 8 8
resetPage
/CurrentLetter (h) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 9 9
resetPage
/CurrentLetter (i) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 10 10
resetPage
/CurrentLetter (j) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 11 11
resetPage
/CurrentLetter (k) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 12 12
resetPage
/CurrentLetter (l) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 13 13
resetPage
/CurrentLetter (m) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 14 14
resetPage
/CurrentLetter (n) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 15 15
resetPage
/CurrentLetter (o) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 16 16
resetPage
/CurrentLetter (p) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 17 17
resetPage
/CurrentLetter (q) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 18 18
resetPage
/CurrentLetter (r) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 19 19
resetPage
/CurrentLetter (s) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 20 20
resetPage
/CurrentLetter (t) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 21 21
resetPage
/CurrentLetter (u) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 22 22
resetPage
/CurrentLetter (v) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 23 23
resetPage
/CurrentLetter (w) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 24 24
resetPage
/CurrentLetter (x) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 25 25
resetPage
/CurrentLetter (y) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 26 26
resetPage
/CurrentLetter (z) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 27 27
resetPage
/CurrentLetter (A) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 28 28
resetPage
/CurrentLetter (B) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 29 29
resetPage
/CurrentLetter (C) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 30 30
resetPage
/CurrentLetter (D) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 31 31
resetPage
/CurrentLetter (E) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 32 32
resetPage
/CurrentLetter (F) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 33 33
resetPage
/CurrentLetter (G) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 34 34
resetPage
/CurrentLetter (H) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 35 35
resetPage
/CurrentLetter (I) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 36 36
resetPage
/CurrentLetter (J) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 37 37
resetPage
/CurrentLetter (K) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 38 38
resetPage
/CurrentLetter (L) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 39 39
resetPage
/CurrentLetter (M) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 40 40
resetPage
/CurrentLetter (N) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 41 41
resetPage
/CurrentLetter (O) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 42 42
resetPage
/CurrentLetter (P) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 43 43
resetPage
/CurrentLetter (Q) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 44 44
resetPage
/CurrentLetter (R) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 45 45
resetPage
/CurrentLetter (S) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 46 46
resetPage
/CurrentLetter (T) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 47 47
resetPage
/CurrentLetter (U) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 48 48
resetPage
/CurrentLetter (V) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 49 49
resetPage
/CurrentLetter (W) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 50 50
resetPage
/CurrentLetter (X) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 51 51
resetPage
/CurrentLetter (Y) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Page: 52 52
resetPage
/CurrentLetter (Z) def
CurrentLetter letterPath
LeftRightWidth

showpage
%%Trailer
%%Pages: 52
%%EOF
