% This file defines the symbols of a \TeX\ math symbol font.
% Character codes \0000--\0100 and \0133--\0177 are generated.

% (Improvements to the author's original characters were worked out in 1982
% by Ronald F. Whitney and other members of
% the American Mathematical Society.)

% Italic corrections have not been computed for most of these characters,
% since they are generally not slanted.

vardef sim_squiggle.r(suffix $, $$)(expr squiggle_dir) =
    z$r{squiggle_dir}
    ..(0.5[z$,z$$] + (0.5rule_thickness*(unitvector(direction 0.5 of
	    (z${squiggle_dir}..{squiggle_dir}z$$)) rotated -90)))
    ..{squiggle_dir}z$$r
enddef;
vardef sim_squiggle.l(suffix $, $$)(expr squiggle_dir) =
    z$l{squiggle_dir}
    ..(0.5[z$,z$$] + (0.5rule_thickness*(unitvector(direction 0.5 of
	    (z${squiggle_dir}..{squiggle_dir}z$$)) rotated 90)))
    ..{squiggle_dir}z$$l
enddef;

minus=oct"000"; cdot=oct"001"; diamond=oct"005";
plus_minus=oct"006"; o_plus=oct"010"; o_times=oct"012";
eqv=oct"021"; leq=oct"024"; geq=oct"025";
subset=oct"032"; superset=oct"033";
left_arrow=oct"040"; right_arrow=oct"041";
up_arrow=oct"042"; down_arrow=oct"043"; double_arrow=oct"044";
infty=oct"061"; elt=oct"062";
for_all=oct"070"; there_exists=oct"071"; false_that=oct"072";
cup=oct"133"; cap=oct"134"; meet=oct"136"; join=oct"137";
left_brace=oct"146"; right_brace=oct"147"; vertical=oct"152";
backslash=oct"156"; integral=oct"163";

input mgsym;  % symbols common to other fonts

cmchar "Times operator";
beginarithchar(oct"002");
x1=good.x(1/sqrt2)[.5w,u]; y1=good.y(1/sqrt2)[math_axis,h];
x2=x3=w-x1; x4=x1; .5[y1,y2]=.5[y3,y4]=math_axis; y2=y4;
rulepos1(angle(z2-z1)+90); rulepos2(angle(z2-z1)+90);
rulepos3(angle(z4-z3)-90); rulepos4(angle(z4-z3)-90);
rulepos5(angle(z4-z3)-90); rulepos6(angle(z4-z3)-90);
z5=whatever[z1r,z2r]=whatever[z3,z4]; z6=whatever[z1l,z2l]=whatever[z3,z4];
fill reverse(lrend(1)--rlthrough(5, rlend(3))--rlend(2)
	--lrthrough(6, lrend(4))--cycle);
labels(1,2,3,4); endchar;

cmchar "Asterisk at the axis";
beginchar(oct"003",9u#,v_center(x_height#));
adjust_fit(0,0); path p;
numeric ast_flare; ast_flare=hround .7[thin_join,stem];
penpos0(thin_join,90); penpos1(ast_flare,90); z=(.5w,h-.5x_height);
x0=x1-3.25u=0; y0=y1=0; z1'=z1+.5ast_flare*right;
z2r=down; z2l=up;
make_paths1(rev.r) z0e--z1e{z1e-z0e}...{z2e}z1';
fill (for d=-150 step 60 until 150:
 combine(rpath1 rotated d,lpath1 rotated(d+60)) & endfor cycle) shifted z;
labels(0,[-150],[-90],[-30],30,90,150); endchar;

cmchar "Elementary division operator";
beginarithchar(oct"004");
x3-.5dot_size=hround(.5w-.5dot_size);
y3+.5dot_size=vround(math_axis+math_spread[.5x_height,.6x_height]+.5dot_size);
x1=hround u-eps; x2=w-x1; y1=y2=math_axis;
rulepos1(90); rulepos2(90);
fill stroke z1e--z2e;  % bar
penpos3(dot_size,0); penpos4(dot_size,90); z3=z4;
penpos5(dot_size,0); penpos6(dot_size,90); z5=z6; x5=x3; .5[y3,y5]=math_axis;
fulldot(3,4); fulldot(5,6);  % dots
penlabels(1,2,3,4,5,6); endchar;

cmchar "Minus-or-plus sign";
beginarithchar(oct"007");
numeric shiftup; shiftup=-vround 1.5u;
rulepos1(0); rulepos2(0); rulepos3(90); rulepos4(90);
rulepos5(90); rulepos6(90); rulepos7(0); rulepos8(0);
x1l=x2l=.5w-.5rule_thickness; x3=x5=hround u-eps; x4=x6=w-x3;
.5[y5,y2]=y3=y4=math_axis+shiftup; y5r=h+shiftup; y5=y6; y1=y5l;
x7=x8=x1; y7=y3r; y8=y3l;
fill rlend(3)--lrthrough(8,lrend(2))--lrend(4)
    --rlthrough(7,rlthrough(1,lrend(6)--rlend(5)))--cycle;
labels(1,2,3,4,5,6); endchar;

cmchar "Circle-minus operator";
beginarithchar(oct"011");
draw_solid_circle(w-2u,2*(h-math_axis),(.5w,math_axis),light_rule_thickness);
penpos5(light_rule_thickness, 90); penpos6(light_rule_thickness, 90);
z5=z3r; z6=z1r;
unfill reverse(trunc_start(z1l{up}..{left}z2l, z5r--z6r)
    & trunc_end(z2l{left}..{down}z3l, z5r--z6r)--cycle);
unfill reverse(trunc_start(z3l{down}..{right}z4l, z5l--z6l)
    & trunc_end(z4l{right}..{up}z1l, z5l--z6l)--cycle);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Circle-divide operator";
beginarithchar(oct"013");
draw_solid_circle(w-2u,2*(h-math_axis),(.5w,math_axis),light_rule_thickness);
penpos5(light_rule_thickness, 135); penpos6(light_rule_thickness, 135);
x5=x1; y5=y2; x6=x3; y6=y4;
unfill reverse(trunc_start(z1l{up}..{left}z2l,z5r--z6r)
    ..trunc_end(z3l{down}..{right}z4l, z5r--z6r)--cycle);
unfill reverse(trunc_start(z3l{down}..{right}z4l, z5l--z6l)
    ..trunc_end(z1l{up}..{left}z2l,z5l--z6l)--cycle);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Circle-dot operator";
beginarithchar(oct"014"); autorounded;
draw_a_circle(w-2u,2*(h-math_axis),(.5w,math_axis),light_rule_thickness);
penpos5(1.3dot_size+eps,0); penpos6(1.3dot_size+eps,90); z5=z6=(.5w,math_axis);
fulldot(5,6);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Circle for copyright, etc.";
beginchar(oct"015",18u#,asc_height#,desc_depth#); autorounded;
adjust_fit(if monospace:-3u#,-3u# else: 0,0 fi);
draw_a_circle(w-2u,h+d+2o, (.5w,.5[h,-d]), rule_thickness);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Circle operator";
beginchar(oct"016",9u#,v_center(7u#));
adjust_fit(0,0); autorounded;
draw_a_circle(w-2u,7u, (.5w,math_axis), rule_thickness);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Bullet";
beginchar(oct"017",9u#,v_center(7u#));
adjust_fit(0,0); autorounded;
draw_solid_circle(w-2u,7u, (.5w,math_axis), 7u);
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Hardy's asymptotic equivalence sign";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"020",14u#,v_center(2spread#+rule_thickness#));
adjust_fit(0,0); autorounded;
x1=hround u-eps+.5rule_thickness; x3=x1; x2=x4=w-x1; x5=x6=.5w;
y1=y2=h-.5rule_thickness; y3=y4; .5[y1,y3]=.5[y5,y6]=math_axis;
rulepos5(-90); rulepos6(90);
y5r=vround max(.3[y1,y3]-.5rule_thickness,math_axis+.5rule_thickness);
pair theta[]; theta1=(x5-x1,2(y5-y1)); theta2=(x2-x5,2(y2-y5));
theta3=(x6-x3,2(y6-y3)); theta4=(x4-x6,2(y4-y6));
rulepos1(angle(theta1)-80); rulepos2(angle(theta2)-100);
rulepos3(angle(theta3)+80); rulepos4(angle(theta4)+100);
make_paths1(rev.l) z1e{theta1}...z5e{right}...{theta2}z2e;  % upper bar
make_paths2(rev.r) z3e{theta3}...z6e{right}...{theta4}z4e;  % lower bar
fill lpath1--rpath1--cycle;
fill lpath2--rpath2--cycle;
labels(1,2,3,4); endchar;

cmchar "Subset or equal to sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"022",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos4(90); rulepos2(180); rulepos5(270); rulepos3(270);
rulepos8(90); rulepos9(90);
x2r=hround 1.5u-eps; x1=x3=w-x2;
y1-y3=spread; y2=.5[y1,y3]; y1r=h;
x4=x5=.5w; y4=y1; y5=y3;
make_paths1(rev.l) z1e--z4e{left}...z2e{down}...{right}z5e--z3e;
fill lpath1--rpath1--cycle;
x8=x1; x9=x2r; y8=y9; y3-y9=spread';
fill lrend(8)--rlend(9)--cycle;
labels(1,2,3,4,5,8,9); endchar;

cmchar "Superset or equal to sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"023",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos4(90); rulepos2(0); rulepos5(-90); rulepos3(-90);
rulepos8(90); rulepos9(90);
x1=hround 1.5u-eps; x2r=w-x1; x3=x1;
y1-y3=spread; y2=.5[y1,y3]; y1r=h;
x4=x5=.5w; y4=y1; y5=y3;
fill stroke z1e--z4e{right}...z2e{down}...{left}z5e--z3e;
x8=x1; x9=x2r; y8=y9; y3-y9=spread';
fill stroke z8e--z9e;  % lower bar
labels(1,2,3,4,5,8,9); endchar;

cmchar "Precedes or equals sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"026",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
penpos1(diag_width((-u,-spread), rule_thickness), 0);
rulepos2(90);
penpos3(diag_width((-u,spread), rule_thickness), 0);
x2=hround 1.5u-eps; x1r=x3r=w-x2;
y1-y3=spread+rule_thickness; y2=.5[y1,y3]; y1=h;
path p, q; p=z2l{right}...{u,spread}z1r; q=z3r{-u,spread}...{left}z2r;
save t; (t.p,t.q)=p intersectiontimes q;
fill z1l{-u,-spread}...{left}rlend(2){right}...{u,-spread}z3l
    --trunc_path_end(q, t.q, point t.p of p)
    & subpath (t.p, infinity) of p -- cycle;
x8=x1r; x9=x2; y8=y9; y3-y9l=spread'; rulepos8(90); rulepos9(90);
fill lrend(8)--rlend(9)--cycle;
labels(1,2,3,8,9); endchar;

cmchar "Follows or equals sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"027",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
penpos1(diag_width((u,-spread), rule_thickness), 0);
rulepos2(90);
penpos3(diag_width((u,spread), rule_thickness), 0);
x1l=hround 1.5u-eps; x2=w-x1l; x3=x1;
y1-y3=spread+rule_thickness; y2=.5[y1,y3]; y1=h;
path p, q; p=z1l{u,-spread}...{right}z2l; q=z2r{left}...{-u,-spread}z3l;
save t; (t.p,t.q)=p intersectiontimes q;
fill z3r{u,spread}...{right}lrend(2){left}...{-u,spread}z1r
    --trunc_path_end(p, t.p, point t.q of q)
    & subpath (t.q, infinity) of q -- cycle;
x8=x1l; x9=x2; y8=y9; y3-y9l=spread'; rulepos8(90); rulepos9(90);
fill stroke z8e--z9e;
labels(1,2,3,8,9); endchar;

cmchar "Similarity sign";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"030",14u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
%pickup pencircle xscaled .7rule_thickness yscaled 1.4rule_thickness;
%if vair#>.8curve#: pickup rule.nib; autorounded; fi % monoline
numeric thin_edge, thick_edge;
if vair#>.8curve#: thin_edge=thick_edge=rule_thickness;
else: thin_edge=.7rule_thickness; thick_edge=1.4rule_thickness; fi
penpos1(thin_edge, 0); penpos2(thick_edge, -90);
penpos3(thick_edge, -90); penpos4(thin_edge, 0);
x1l=hround u; x2=4u; x3=w-x2; x4r=w-x1l;
y1=y3r=-d; y2l=y4=h;
make_paths1(rev.l) z1e{up}...sim_squiggle.e(2,3,right)...{up}z4e;  % stroke
fill lpath1--rpath1--cycle;
labels(1,2,3,4); endchar;

cmchar "Approximate equality sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(.54x_height#,.66x_height#);
beginchar(oct"031",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
%pickup pencircle xscaled .7rule_thickness yscaled 1.4rule_thickness;
%if vair#>.8curve#: pickup rule.nib; autorounded; fi % monoline
numeric thin_edge, thick_edge;
if vair#>.8curve#: thin_edge=thick_edge=rule_thickness;
else: thin_edge=.7rule_thickness; thick_edge=1.4rule_thickness; fi
penpos1(thin_edge, 0); penpos2(thick_edge, -90);
penpos3(thick_edge, -90); penpos4(thin_edge, 0);
penpos5(thin_edge, 0); penpos6(thick_edge, -90);
penpos7(thick_edge, -90); penpos8(thin_edge, 0);
x1l=hround u; x2=4u; x3=w-x2; x4r=w-x1l;
y1=y3r; y2l=y4=h; y2-y1=spread';
make_paths1(rev.l) z1e{up}...sim_squiggle.e(2,3,right)...{up}z4e; % upper stroke
fill lpath1--rpath1--cycle;
z1-z5=z2-z6=z3-z7=z4-z8=(0,spread);
make_paths2(rev.l) z5e{up}...sim_squiggle.e(6,7,right)...{up}z8e; % lower stroke
fill lpath2--rpath2--cycle;
labels(1,2,3,4,5,6,7,8); endchar;

cmchar "Much less sign";
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"034",18u#,v_center(spread#+rule_thickness#));
adjust_fit(if monospace:-u#,-u# else: 0,0 fi);
rulepos1(90); rulepos2(90); rulepos3(-90);
rulepos4(90); rulepos5(90); rulepos6(-90);
x2=hround u-epsilon; x1=x3=hround 12.5u-x2;
y1-y3=ceiling 1.1spread; y2=.5[y1,y3]=math_axis;
fill angled_stroke(1, 2, 3);
z4-z1=z5-z2=z6-z3; x4=w-x2; y4=y1;
fill angled_stroke(4, 5, 6);
labels(1,2,3,4,5,6); endchar;

cmchar "Much greater sign";
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"035",18u#,v_center(spread#+rule_thickness#));
adjust_fit(if monospace:-u#,-u# else: 0,0 fi);
rulepos1(90); rulepos2(90); rulepos3(-90);
rulepos4(90); rulepos5(90); rulepos6(-90);
x1=hround u-epsilon; x2=hround 12.5u-x1; x3=x1;
y1-y3=ceiling 1.1spread; y2=.5[y1,y3]=math_axis;
fill angled_stroke(1, 2, 3);
z4-z1=z5-z2=z6-z3; x4=w-x2; y4=y1;
fill angled_stroke(4, 5, 6);
labels(1,2,3,4,5,6); endchar;

cmchar "Precedes sign";
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"036",14u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
penpos1(diag_width((-u,-spread), rule_thickness), 0);
rulepos2(90);
penpos3(diag_width((-u,spread), rule_thickness), 0);
x2=hround 1.5u-epsilon; x1r=x3r=w-x2;
y1-y3=spread+rule_thickness; y2=.5[y1,y3]; y1=h;
path p, q; p=z2l{right}...{u,spread}z1r; q=z3r{-u,spread}...{left}z2r;
save t; (t.p,t.q)=p intersectiontimes q;
fill z1l{-u,-spread}...{left}rlend(2){right}...{u,-spread}z3l
    --trunc_path_end(q, t.q, point t.p of p)
    & subpath (t.p, infinity) of p -- cycle;
labels(1,2,3); endchar;

cmchar "Follows sign";
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"037",14u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
penpos1(diag_width((u,-spread), rule_thickness), 0);
rulepos2(90);
penpos3(diag_width((u,spread), rule_thickness), 0);
x1l=hround 1.5u-epsilon; x2=w-x1l; x3=x1;
y1-y3=spread+rule_thickness; y2=.5[y1,y3]; y1=h;
path p, q; p=z1l{u,-spread}...{right}z2l; q=z2r{left}...{-u,-spread}z3l;
save t; (t.p,t.q)=p intersectiontimes q;
fill z3r{u,spread}...{right}lrend(2){left}...{-u,spread}z1r
    --trunc_path_end(p, t.p, point t.q of q)
    & subpath (t.q, infinity) of q -- cycle;
labels(1,2,3); endchar;

cmchar "Northeast arrow";
beginchar(oct"045",18u#,asc_height#,asc_depth#);
adjust_fit(0,0);
x1-.5rule_thickness=hround u; x0=hround(w-u);
y1-.5rule_thickness=-d; y0=h;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
rulepos1(90+theta); rulepos2(90+theta); z2=z0;
rulepos3(theta); rulepos4(theta);
z3-z0=(-4u,.36asc_height) rotated theta;
z4-z0=(-4u,-.36asc_height) rotated theta;
rulepos5(-90); z5l=z0; rulepos6(-180); z6l=z0;
z9=.2[.5[z3,z4],z0];
fill combine(z3l{z9-z3}..z5r,z2r--z1r)--combine(z1l--z2l,z6r..{z4-z9}z4l)
    --z4r{z9-z4}..z0{curl 1}..{z3-z9}z3r--cycle;
penlabels(0,1,2,3,4,5,6,9); endchar;

cmchar "Southeast arrow";
beginchar(oct"046",18u#,asc_height#,asc_depth#);
adjust_fit(0,0);
x1-.5rule_thickness=hround u; x0=hround(w-u);
y1+.5rule_thickness=h; y0=-d;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta+45)<2.5: theta:=-45; y1:=y0+x0-x1; fi % near-45$^\circ$ angle
rulepos1(90+theta); rulepos2(90+theta); z2=z0;
rulepos3(theta); rulepos4(theta);
z3-z0=(-4u,.36asc_height) rotated theta;
z4-z0=(-4u,-.36asc_height) rotated theta;
rulepos5(180); z5l=z0; rulepos6(90); z6l=z0;
z9=.2[.5[z3,z4],z0];
fill combine(z3l{z9-z3}..z5r,z2r--z1r)--combine(z1l--z2l,z6r..{z4-z9}z4l)
    --z4r{z9-z4}..z0{curl 1}..{z3-z9}z3r--cycle;
penlabels(0,1,2,3,4,5,6,9); endchar;

cmchar "Similar or equal sign";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"047",14u#,v_center(2spread#+rule_thickness#));
adjust_fit(0,0);
%pickup pencircle xscaled .7rule_thickness yscaled 1.4rule_thickness;
%if vair#>.8curve#: pickup rule.nib; autorounded; fi % monoline
numeric thin_edge, thick_edge;
if vair#>.8curve#: thin_edge=thick_edge=rule_thickness;
else: thin_edge=.7rule_thickness; thick_edge=1.4rule_thickness; fi
penpos1(thin_edge, 0); penpos2(thick_edge, -90);
penpos3(thick_edge, -90); penpos4(thin_edge, 0);
x1l=hround u; x2=4u; x3=w-x2; x4r=w-x1l;
y1=y3r=floor math_axis; y2l=y4=h;
make_paths1(rev.l) z1e{up}...sim_squiggle.e(2,3,right)...{up}z4e;  % stroke
fill lpath1--rpath1--cycle;
x5=hround u-eps; x6=w-x5; y5=y6=math_axis-spread;
rulepos5(90); rulepos6(90); fill stroke z5e--z6e;
labels(1,2,3,4,5,6); endchar;

cmchar "Double leftward arrow";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"050",18u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos2(90); rulepos7(90); rulepos8(90);
x7=hround u-eps; x8=x7; x1=x2=w-x7;
y1=y7; y2=y8; y1-y2=spread; .5[y1,y2]=math_axis;
x0=hround u-eps; y0=math_axis;
rulepos3(0); rulepos4(0);
y3-y1=y2-y4=.24asc_height+eps; x3=x4=x0+6u+eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
z0r=(z4r{z9-z4}..z6r) intersectionpoint (z3r{z9-z3}..z5r);
fill z3l{z9-z3}..z0{curl 1}..{z4-z9}z4l
 --aux_stroke(z4r{z9-z4}..z0r, z8e--z2e)
 & aux_stroke(z0r..{z3-z9}z3r, z7e--z1e)--cycle;
penlabels(0,1,2,3,4,5,6,7,8,9); endchar;

cmchar "Double rightward arrow";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"051",18u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos2(90); rulepos7(90); rulepos8(90);
x1=hround u-eps; x2=x1; x7=x8=w-x1;
y1=y7; y2=y8; y1-y2=spread; .5[y1,y2]=math_axis;
x0=hround(w-u)+eps; y0=good.y math_axis;
rulepos3(0); rulepos4(0);
y3-y1=y2-y4=.24asc_height+eps; x3=x4=x0-6u-eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
z0l=(z4l{z9-z4}..z6r) intersectionpoint (z3l{z9-z3}..z5r);
fill reverse(z3r{z9-z3}..z0{curl 1}..{z4-z9}z4r
 --aux_stroke(z4l{z9-z4}..z0l, z8e--z2e)
 & aux_stroke(z0l..{z3-z9}z3l, z7e--z1e)--cycle);
penlabels(0,1,2,3,4,5,6,7,8,9); endchar;

cmchar "Double upward arrow";
beginchar(oct"052",11u#,asc_height#,asc_depth#);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos7(0); rulepos8(0);
compute_spread(.45x_height#,.55x_height#);
y1=y2=-d-eps; y7=y8=h;
x1=x7; x2=x8; x1-x2=spread; .5[x1,x2]=.5w;
y0=h+eps; x0=.5w;
rulepos3(90); rulepos4(90);
x2-x3=x4-x1=3u+eps; y3=y4=y0-.48asc_height-eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
z0l=(z4l{z9-z4}..z6r) intersectionpoint (z3l{z9-z3}..z5r);
fill reverse(z3r{z9-z3}..z0{curl 1}..{z4-z9}z4r
 --aux_stroke(z4l{z9-z4}..z0l, z7e--z1e)
 & aux_stroke(z0l..{z3-z9}z3l, z8e--z2e)--cycle);
penlabels(0,1,2,3,4,5,6,7,8,9); endchar;

cmchar "Double downward arrow";
beginchar(oct"053",11u#,asc_height#,asc_depth#);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos7(0); rulepos8(0);
compute_spread(.45x_height#,.55x_height#);
y1=y2=h+eps; y7=y8=-d;
x1=x7; x2=x8; x1-x2=spread; .5[x1,x2]=.5w;
y0=-d-eps; x0=.5w;
rulepos3(90); rulepos4(90);
x2-x3=x4-x1=3u+eps; y3=y4=y0+.48asc_height-eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
z0r=(z4r{z9-z4}..z6r) intersectionpoint (z3r{z9-z3}..z5r);
fill z3l{z9-z3}..z0{curl 1}..{z4-z9}z4l
 --aux_stroke(z4r{z9-z4}..z0r, z7e--z1e)
 & aux_stroke(z0r..{z3-z9}z3r, z8e--z2e)--cycle;
penlabels(0,1,2,3,4,5,6,7,8,9); endchar;

cmchar "Double left-and-right arrow";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"054",18u#,v_center(spread#+rule_thickness#));
adjust_fit(if monospace: -u#,-u# else: 0,0 fi);
rulepos1(90); rulepos2(90); rulepos7(90); rulepos8(90);
x7=hround u-eps; x8=x7; x1=x2=w-x7;
y1=y7; y2=y8; y1-y2=spread; .5[y1,y2]=math_axis;
x0=hround u-o; y0=math_axis;
rulepos3(0); rulepos4(0);
y3-y1=y2-y4=.24asc_height+eps; x3=x4=x0+5u+eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
path left_path;
left_path=trunc_start(z5r..z3r{z3-z9}, z1r--z7r)
 --z3l{z9-z3}..{curl 1}z0..{z4-z9}z4l
 --trunc_end(z4r{z9-z4}..z6r, z2l--z8l);
fill left_path--(reverse left_path xscaled -1 shifted (w,0))--cycle;
z0'=(z4r{z9-z4}..z6r) intersectionpoint (z5r..z3r{z3-z9});
left_path:=trunc_start(z4r{z9-z4}..z0', z2r--z8r)
 & trunc_end(z0'..{z3-z9}z3r, z1l--z7l);
unfill left_path--(reverse left_path xscaled -1 shifted (w,0))--cycle;
penlabels(0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,19); endchar;

cmchar "Northwest arrow";
beginchar(oct"055",18u#,asc_height#,asc_depth#);
adjust_fit(0,0);
x1+.5rule_thickness=hround(w-u); x0=hround u;
y1-.5rule_thickness=-d; y0=h;
numeric theta,delta; theta=angle(z1-z0); delta=3u++.24asc_height;
if abs(theta+45)<2.5: theta:=-45; y1:=y0+x0-x1; fi % near-45$^\circ$ angle
rulepos1(-90+theta); rulepos2(-90+theta); z2=z0;
rulepos3(-180+theta); rulepos4(-180+theta);
z4-z0=(4u,.36asc_height) rotated theta;
z3-z0=(4u,-.36asc_height) rotated theta;
rulepos5(0); z5l=z0; rulepos6(-90); z6l=z0;
z9=.2[.5[z3,z4],z0];
fill combine(z3l{z9-z3}..z5r,z2r--z1r)--combine(z1l--z2l,z6r..{z4-z9}z4l)
    --z4r{z9-z4}..z0{curl 1}..{z3-z9}z3r--cycle;
penlabels(0,1,2,3,4,5,6,9); endchar;

cmchar "Southwest arrow";
beginchar(oct"056",18u#,asc_height#,asc_depth#);
adjust_fit(0,0);
x1+.5rule_thickness=hround(w-u); x0=hround u;
y1+.5rule_thickness=h; y0=-d;
numeric theta,delta; theta=angle(z1-z0); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
rulepos1(-90+theta); rulepos2(-90+theta); z2=z0;
rulepos3(-180+theta); rulepos4(-180+theta);
z4-z0=(4u,.36asc_height) rotated theta;
z3-z0=(4u,-.36asc_height) rotated theta;
rulepos5(90); z5l=z0; rulepos6(0); z6l=z0;
z9=.2[.5[z3,z4],z0];
fill combine(z3l{z9-z3}..z5r,z2r--z1r)--combine(z1l--z2l,z6r..{z4-z9}z4l)
    --z4r{z9-z4}..z0{curl 1}..{z3-z9}z3r--cycle;
penlabels(0,1,2,3,4,5,6,9); endchar;

cmchar "Proportionality sign";
beginchar(oct"057",16.5u#,x_height#,0);
italcorr x_height#*slant-.5u#;
adjust_fit(0,-2.5u#);
numeric theta,phi;
if monospace: phi=-theta=90;
else: phi=angle(4u,h); theta=angle(6u,-h); fi
penpos1(vair,180);
penpos3(curve,90+theta);
penpos6(vair,180);
penpos8(.3[vair,curve],phi-90);
x1r=w-x6l=hround u; y1=y6=.5h; y2r=y7l=h+oo; y5l=y9r=-oo; z3=z8=.5[z1,z6];
y2r-y2l=y5r-y5l=.5[vair,curve]; y7l-y7r=y9l-y9r=.2[vair,curve];
if monospace:
 forsuffixes e=l,r: x2e=x9e=.45[x1e,x3e]; x7e=x5e=.45[x6e,x8e]; endfor
else:
 % Fudge the slope a bit, to force the sides of the infinity to appear less
 % round. This prevents the middle part from looking too un-round.
 numeric slope; slope=-h/8u;
 vellipse_set(1r,2r,12r,3r); vellipse_set(1l,2l,12l,3l);
 vellipse_set(6r,5r,15r,3r); vellipse_set(6l,5l,15l,3l);
 numeric slope; slope=h/7u;
 vellipse_set(1r,9r,19r,8r); vellipse_set(1l,9l,19l,8l);
 vellipse_set(6r,7r,17r,8r); vellipse_set(6l,7l,17l,8l);
fi
numeric tau; tau=max(.8,.20710678/(superness-.5));
make_paths1(rev.l) z2e{left}..tension atleast tau..z1e{down}
    ..tension atleast tau..{right}z9e;
make_paths3(rev.l) z6e{down}..tension atleast tau..z5e{left}
    ..tension atleast tau..z3e{-dir theta}..tension atleast tau..{left}z2e;
make_paths4(rev.l) z9e{right}..tension atleast tau..z8e{dir phi}
    ..tension atleast tau..{right}z7e..tension atleast tau..{down}z6e;
path p; p=(w-3.5u,-o)--(w-3.5u,h+o);
fill rpath1 & trunc_end(combine(rpath4,lpath3),p)
    --combine(trunc_start(rpath3,p), trunc_end(rpath4,p))
    --trunc_start(combine(lpath4,rpath3),p) & cycle;
unfill lpath1 & combine(lpath3,lpath4) & cycle;
penlabels(1,2,3,4,5,6,7,8,9); endchar;

cmchar "Prime symbol (intended as superscript only)";
% Zoom should correspond to the average zoom factor of superscript to text.
% It is currently set to 1.35, and it appears in three places below.
beginchar(oct"060",3u#+max(1.75u#,1.35curve#),
 .8asc_height#,0);
adjust_fit(0,0);
numeric light_stem,heavy_stem;
light_stem=hround(1.35*.2[vair,stem]); heavy_stem=hround(1.35*stem);
x1+.5heavy_stem=hround(w-.25u); y1+.5heavy_stem=h;
x2-.5light_stem=hround .5u; y2=1/12asc_height;
numeric theta; theta=angle(z1-z2)-90;
penpos1(heavy_stem,theta); penpos2(light_stem,theta);
fill pen_lrend2(z2l-z1l,fine,z1r-z2r)--z1r{z1r-z2r}...
if theta<0: (z1+.5heavy_stem*right){up}... fi
(z1+.5heavy_stem*up){left}...{z2l-z1l}z1l--cycle;
penlabels(1,2); endchar;

cmchar "Ownership sign";
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"063",12u#,v_center(spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos4(90); rulepos2(0); rulepos5(-90); rulepos3(-90);
rulepos6(90); rulepos2'(90);
x1=hround 1.5u-eps; x1=x3=x6=w-x2r;
y1-y3=spread; y2=y6=.5[y1,y3]=math_axis;
x4=x5=.5w-u; y4=y1; y5=y3;
y2'=y6; x2'=x2r;
fill aux_left(z1e--z4e{right}...z2e{down}...{left}z5e--z3e)(z2'e--z6e);
labels(1,2,3,4,5,6); endchar;

cmchar "Large triangle";
beginchar(oct"064",16u#,asc_height#,desc_depth#);
adjust_fit(0,0);
y1=.5rule_thickness; y2=y1; y3+.5rule_thickness=h+o;
.5[x1,x2]=x3=.5w; x1=hround(.5w-u*sqrt48)+.5rule_thickness;
triangle(3,1,2);
labels(1,2,3); endchar;

cmchar "Large inverted triangle";
beginchar(oct"065",16u#,asc_height#,desc_depth#);
adjust_fit(0,0);
y1=h-d-.5rule_thickness; y2=y1; y3=-d-o+rule_thickness;
.5[x1,x2]=x3=.5w; x1=hround(.5w-u*sqrt48)+rule_thickness;
triangle(3,2,1);
labels(1,2,3); endchar;

cmchar "Zero-width slash to negate a relation";
beginchar(oct"066",14u#,asc_height#,asc_depth#);
adjust_fit(0,0);
x5r=hround(w-2.5u)-eps; x6l=hround 2.5u+eps;
y5=h; .5[y5,y6]=math_axis;
numeric theta; theta=diag_ratio(1,rule_thickness,y5-y6,x5r-x6l);
penpos5(theta*rule_thickness,0); penpos6(theta*rule_thickness,0);
fill stroke z5e--z6e;
labels(5,6); zero_width; endchar;

cmchar "Maps-to relation";
compute_spread(.45x_height#,.55x_height#);
beginchar(oct"067",14u#,v_center(spread#+rule_thickness#));
% this character should be followed immediately by minus or rightarrow
adjust_fit(0,0);
rulepos1(90); rulepos2(90); rulepos3(0); rulepos4(0);
x3l=x4l=hround u; x1=x3r; x2=x1+.5u;
y1=y2=math_axis; y1-y3=y4-y1=.24asc_height+0.5rule_thickness+eps;
fill rlend(4)--lrend(3)--lrthrough(1,lrend(2))--cycle;
labels(1,2,3,4); zero_width; endchar;

cmchar "Empty set symbol";
beginchar(oct"073",9u#,body_height#,body_height#-asc_height#);
adjust_fit(0,0);
penpos1(vair,90); penpos3(vair,-90); penpos2(stem,180); penpos4(stem,0);
if not monospace: interim superness:=sqrt(more_super*hein_super); fi
x2r=hround max(.7u,1.45u-.5stem);
x4r=w-x2r; x1=x3=.5w; y1r=asc_height+o; y3r=-o;
y2=y4=.5asc_height-vair_corr; y2l:=y4l:=.52asc_height;
x6l=hround 2u; x5r=w-x6l; y5=h+o; y6=-d-o;
numeric theta; theta=diag_ratio(1,rule_thickness,y5-y6,x5r-x6l);
penpos5(theta*rule_thickness,0); penpos6(theta*rule_thickness,0);
fill aux_stroke(pulled_arc.r(4,1) & pulled_arc.r(1,2), z6e--z5e)
    & aux_stroke(pulled_arc.r(2,3) & pulled_arc.r(3,4), z5e--z6e) & cycle;
path p[]; p1=pulled_arc.l(2,1) & pulled_arc.l(1,4);
p2=pulled_arc.l(4,3) & pulled_arc.l(3,2);
unfill trunc_both(p2, p1, z5l--z6l)--cycle;
unfill trunc_both(p1, p2, z5r--z6r)--cycle;
penlabels(1,2,3,4,5,6); endchar;

cmchar "Uppercase Fraktur R";
beginchar(oct"074",13u#,asc_height#,0);
adjust_fit(0,0); path p[];
penpos1(hair,0); penpos2(vair,90); penpos3(1/6[hair,stem],190);
penpos4(1/4[hair,stem],210); penpos5(1/8[hair,stem],190);
penpos6(vair,90); penpos7(cap_stem,0); penpos8(cap_stem,0);
penpos9(vair,-90); penpos10(hair,-135); penpos11(hair,-135);
penpos12(vair,135); penpos13(vair,135);
x1l=x5r=hround u; x2=.4[x1,x3]; x3l=hround 3.5u; x4=.6[x3,x5];
x6=3u; x7=hround(6u-.5cap_stem); x8=x7;
x9=3.5u; x10=5/3u; x11=4/3u; x12=u; x13=2u;
y1=.47h; y2l=vround.35h; y3=1/3[y2,y6]; y5=3/4[y2,y6]; y4=.6[y3,y5];
y6r=h+oo; y7=.64h; y8=.57y7; y9r=-o; y10=1/6y7; y12=1/5y7; y13=1/4y7;
z11-z10=whatever*(z13-z12) rotated 90;
% p1 is the initial tip of the inward hook.
p1=z2r{left}...{up}pen_rlend1(up,fine,down){down}...{right}z2l;
% path1 is the upper left stem. path2 is the lower left stem.
make_paths1(rev.r) z2e{right}...z3e{up}..z4e..z5e{up}...pulled_arc.e(6,7);
make_paths2(rev.r) pulled_arc.e(8,9)...{z11e-z10e}z10e;
p0=z10l{z11l-z10l}--pen_lrend11(z11l-z10l,fine,z10r-z11r)--z10r;
penpos20(cap_bar,180); penpos21(cap_bar,90);
x20=x7; y20=.75h; x21=hround(w-3.5u+.5cap_stem); y21r=h+o;
% path3 is the upper arc
make_paths3(rev.r) z20e{up}...{right}z21e;  % top of bowl
x22r=hround(w-.1u); y22r=hround(.64h);
numeric theta; theta=angle(z21r-z22r);
penpos22(cap_stem,theta-90); penpos23(cap_bar,theta); z22l=z23l;
penpos22'(cap_stem,theta-90); penpos25(min(cap_bar,y7-y8),90); x25=x7r;
z22'r=whatever[z22r,z21r]; y22'l=h+o;
y25r=vround min(.56[y8,y7]+.5cap_bar,y7);
angled_pos(23,dir(theta+90),24,left,25);
% p2 is the outer edge of the bowl; p3 the inner.
p2=z25l--z24l--pen_angle(z22r-z24l,z22r,fine,z21r-z22r);
p3=z22'l--z23r--z24r;
penpos26(cap_stem,0); penpos27(cap_stem,0); penpos28(cap_stem,0);
x26=x24; x27=x26+.25u; x28r=w-u; y26=y24r; y27=1/3y26; y28=-o;
penpos29(cap_bar,0); penpos30(cap_bar,-30); z29l=z28l;
x30r=(w-.5u); y30r=.09h;
% p4 is the lower diagonal stroke, in its entirety, intended for aux_path.
penpos26'(cap_stem,0); z26'=whatever[z26,z27]; y26'=h;
p4=z26'l--z27l{z27l-z26l}...{right}z28l--z29r
    --pen_rlend30(z30r-z29r,fine,z29l-z30l);
p4:=p4 & combine((point infinity of p4)--z29l,
	   z28r{left}...{z26r-z27r}z27r--z26'r);
fill lpath2 & p0 & rpath2--aux_path(p2,p4)
    --combine(pen_angle(z21r-z22r,z21r,fine,left){left}...{down}z20r,rpath1)
    & p1 & lpath1--cycle;
unfill combine(combine(rpath1,lpath3),p3)--z25r--cycle;
%% \begingroup\thinmuskip=3mu
penlabels(1,2,3,4,5,6,7,8,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30);
%% \endgroup
endchar;

cmchar "Uppercase Fraktur I";
beginchar(oct"075",13u#,asc_height#,0);
adjust_fit(0,0);
penpos1(vair,270); penpos2(cap_hair,180); penpos3(vair,90);
penpos5(vair,90); penpos6(cap_hair,180);
x1=5u; x2r=hround u; x3=x1; x5=x6r-u; x6l=hround(w-.5u);
y1l=vround.5h; y2=.5[y1,y3]; y3r=h+oo; y5l=ceiling(1/6[x_height,h]);
y6=max(.3[y5,y3],y5r+fine);
path p; p=z3{right}..{right}z5; z4=point .5 of p;
penpos4(.6[vair,cap_stem],angle(direction 0.5 of p)+90);
make_paths1(rev.r) z2e{up}...z3e{right}...z4e...{right}z5e;  % upper stroke
penpos7(vair,90); penpos8(cap_stem,0); penpos9(cap_stem,0);
penpos9'(vair,90); z9=z9'l;
x7=hround u; z7r=z8l; x9=.5w+u; y8=hround(.25h); y9=-oo;
penpos10(cap_stem,0); penpos11(cap_stem,0);
penpos12(vair,-90); penpos13(cap_hair,-180);
x10=w-2.5u; x11r=x12-u; x12=x5; x13=x6;
y10=1/3y12; y11=3/4y12; y12l=x_height; y13=4/5y12;
fill z2r{down}...{right}pen_rlend1(right,fine,left)...lpath1
    ...{up}pen_lrend6(up,fine,down){down}...rpath1 & cycle;
fill pen_end(left,z8l,fine,z7l,right){right}...{right}z9l--z9r...{up}z10r
 ...z11r{up}...z12r{right}...{down}pen_rlend13(down,fine,up){up}
 ...z12l{left}...z11l{down}...{down}z10l...{left}z9'r...{left}z8r--cycle;
penlabels(1,2,3,4,5,6,7,8,9,10,11,12,13); endchar;

cmchar "Lattice top";
beginchar(oct"076",14u#,asc_height#,0);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos3(90); rulepos4(90);
x1l=x2l=hround(.5w-.5rule_thickness); x3=w-x4=hround u;
y1=0; y3r=y4r=min(h, vround(x4-x3)); y2=y3l;
fill lrend(4)--rlend(3)--lrthrough(2,lrend(1))--cycle;
labels(1,2,3,4); endchar;

cmchar "Perpendicular sign or lattice bottom";
beginchar(oct"077",14u#,asc_height#,0);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos3(90); rulepos4(90);
x1l=x2l=hround(.5w-.5rule_thickness); x3=w-x4=hround u;
y3l=y4l=0; y1=y3r; y2=min(h, vround(x4-x3));
fill lrend(4)--rlthrough(1,rlend(2))--rlend(3)--cycle;
labels(1,2,3,4); endchar;

cmchar "Hebrew letter aleph";
beginchar(oct"100",11u#,asc_height#,0);
adjust_fit(0,0); path p[];
penpos1(cap_stem,75); penpos2(cap_stem,90);
penpos3(cap_stem,90); penpos4(cap_stem,75);
x1l=hround u-eps; x2=2.5u=w-x3; x4r=hround(w-u)+eps;
y1r=h; y4l=0; z2=whatever[z1l,z4r]; z3=whatever[z1l,z4r];
pair v[]; v1=(4(x1l-x1r),y1l-y1r); v2=(4(x4r-x4l),y4r-y4l);
p1=z2r{z2r-z3r}...{up}pen_angle(up,z1r,fine,v1){v1}...{down}z1l
 ...{z3l-z2l}z2l--z3l;
p2=z3l{z3l-z2l}...{down}pen_angle(down,z4l,fine,v2){v2}
 ...{up}z4r...{z2r-z3r}z3r--z2r; % long diagonal
penpos5(cap_stem,75); penpos6(cap_stem,90); penpos7(cap_stem,75);
x5l=hround(w-4u)-eps; x6=.5[x5,x7]; x7=x4;
y5=y1; y7l=x_height-o; z6=whatever[z5l,z7r];
v3=(4(x5l-x5r),y5l-y5r); v4=(4(x7r-x7l),y7r-y7l);
p3=z5l{down}...z6l{z7r-z5l}...{down}pen_angle(down,z7l,fine,v4){v4}...{up}z7r;
p4=z7r{up}...z6r{z5l-z7l}...{up}pen_angle(up,z5r,fine,v3){v3}...{down}z5l;
penpos8(cap_hair,0); penpos9(cap_hair,0); z8=z6; x9=x8-.75u; z9=whatever[z2,z3];
make_paths1(rev.r) (x8e,h)--z8e{down}..{down}z9e--(x9e,0);  % right stem
penpos10(min(cap_hair,cap_stem)-eps,-30); penpos11(stem,0);
penpos12(cap_curve,0); penpos13(cap_curve,0); penpos14(vair,90);
x11l=hround 1.5u; x10=x12=.4[x11,.5w]; z10=whatever[z2,z3];
x13l=hround u; z13l=z14l; y11=.5y10; y12=.2[y14r,y11]; y13=0;
make_paths2(rev.r) z10e{2(x11-x10),y11-y10}...z11e{down}..{down}z12e;
fill combine(p2,combine(rpath1,p3)) & p4 & combine(combine(p3,lpath1),p2)
    & combine(p1,lpath2)...{left}pen_end(left,z14r,fine,z13l,right)
    --z13r{right}...combine(rpath2,p1) & cycle;
penlabels(1,2,3,4,5,6,7,8,9,10,11,12,13,14); endchar;

cmchar "Multiset union sign";
beginchar(oct"135",12u#,.8asc_height#,0);
adjust_fit(if monospace:-.5u#,-.5u# else: 0,0 fi);
rulepos1(-180); rulepos2(-180); rulepos3(-90); rulepos4(0); rulepos5(0);
x1r=x2r=hround u; x3=w-x3; x4=x5=w-x1;
y1=y5=h; y3r=-o; y2=y4=2/3[y1,y3];
make_paths1(rev.l) z1e--z2e{down}...z3e{right}...z4e{up}--z5e;
fill lpath1--rpath1--cycle;
rulepos6(0); rulepos7(0); rulepos8(90); rulepos9(90);
y8=y9=.47[y1,y3]; x8=w-x9=x1l+rule_thickness+eps;
x6=x7=x3; .5[y6,y7]=y8; y7-y6=hround(x9-x8);
forsuffixes e=l,,r: x10e=x11e=x6e; y10e=y8r; y11e=y8l; endfor
fill rlend(8)--lrthrough(11,lrend(6))--lrend(9)--rlthrough(10,rlend(7))--cycle;
labels(1,2,3,4,5,6,7,8,9,10,11); endchar;

cmchar "Left turnstile";
beginchar(oct"140",11u#,asc_height#,0);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos3(90); rulepos4(90);
.5[y1,y2]=y3=y4; x1r=x2r=x3;
x1l=hround u; x4=w-x1l; y1=h; y2=0;
fill lrend(4)--rlthrough(3,rlend(1)--lrend(2))--cycle;
labels(1,2,3,4); endchar;

cmchar "Right turnstile";
beginchar(oct"141",11u#,asc_height#,0);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos3(90); rulepos4(90);
.5[y1,y2]=y3=y4; x1l=x2l=x4;
x3=hround u; x1r=w-x3; y1=h; y2=0;
fill rlend(1)--rlthrough(4,rlend(3))--lrend(2)--cycle;
labels(1,2,3,4); endchar;

cmchar "Left floor bracket";
beginchar(oct"142",8u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos1(-180); rulepos3(-90);
x1r=hround(3.5u-.5rule_thickness); x3=x1r+4u+eps;
y1=h; .5[y1,y3r]=math_axis;
angled_pos(1, down, 2, right, 3);
make_paths1(rev.l) z1e--z2e--z3e;
fill lpath1--rpath1--cycle;
labels(1,2,3); endchar;

cmchar "Right floor bracket";
beginchar(oct"143",8u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos1(0); rulepos3(-90);
x1r=hround(w-3.5u+.5rule_thickness); x3=x1r-4u-eps;
y1=h; .5[y1,y3r]=math_axis;
angled_pos(1, down, 2, left, 3);
fill stroke z1e--z2e--z3e;
labels(1,2,3); endchar;

cmchar "Left ceiling bracket";
beginchar(oct"144",8u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos3(90); rulepos2(180);
x2r=hround(3.5u-.5rule_thickness); x3=x2+4u+eps;
y3r=h; .5[y3r,y2]=math_axis;
angled_pos(3, left, 1, down, 2);
make_paths1(rev.l) z3e--z1e--z2e;
fill lpath1--rpath1--cycle;
labels(1,2,3); endchar;

cmchar "Right ceiling bracket";
beginchar(oct"145",8u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos3(90); rulepos2(0);
x2r=hround(w-3.5u+.5rule_thickness); x3=x2-4u-eps;
y3r=h; .5[y3r,y2]=math_axis;
angled_pos(3, right, 1, down, 2);
fill stroke z3e--z1e--z2e;
labels(1,2,3); endchar;

cmchar "Left angle bracket";
beginchar(oct"150",7u#,body_height#,paren_depth#);
adjust_fit(0,0);
x1r=hround(w-u)+eps; x1=x3; x2l=hround 2u-1-eps;
y1=h+eps; .5[y1,y3]=y2=math_axis;
numeric theta; theta=diag_ratio(1, rule_thickness, y1-y2, x1r-x2l);
penpos1(theta*rule_thickness, 0);
penpos2(theta*rule_thickness, 0);
penpos3(theta*rule_thickness, 0);
fill stroke z1e--z2e--z3e;  % diagonals
labels(1,2,3); endchar;

cmchar "Right angle bracket";
beginchar(oct"151",7u#,body_height#,paren_depth#);
adjust_fit(0,0);
x1l=hround u-eps; x1=x3; x2r=hround(w-2u)+1+eps;
y1=h+eps; .5[y1,y3]=y2=math_axis;
numeric theta; theta=diag_ratio(1, rule_thickness, y1-y2, x2r-x1l);
penpos1(theta*rule_thickness, 0);
penpos2(theta*rule_thickness, 0);
penpos3(theta*rule_thickness, 0);
fill stroke z1e--z2e--z3e;  % diagonals
labels(1,2,3); endchar;

cmchar "Double vertical line (norm or cardinality)";
beginchar(oct"153",9u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos1(0); rulepos2(0); rulepos3(0); rulepos4(0);
x1=x2; y1=h; .5[y1,y2]=math_axis;
x3=x4=w-x1; y3=y1; y4=y2;
compute_spread(.45x_height#,.55x_height#); x3-x1=spread;
fill stroke z1e--z2e; fill stroke z3e--z4e;
labels(1,2,3,4); endchar;

cmchar "Up-and-down arrow";
beginchar(oct"154",9u#,body_height#,paren_depth#);
adjust_fit(0,0);
rulepos12(0); rulepos2(0);
x2l=x12l=hround(.5w-.5rule_thickness); y2=-d-o; y12=h+o;
path p[]; pair t[]; p1=z2l--z12l; p2=z2r--z12r;
rulepos3(90); rulepos4(90);
x0=x2; y0=-d-o; x0-x3=x4-x0=4u+eps;
y3=y4=y0+.36asc_height+eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.2[.5[z3,z4],z0];
p4=z4r{z9-z4}..z6r; p3=z3r{z9-z3}..z5r;
% Now the points for the top arrow
rulepos13(90); rulepos14(90);
x10=x12; y10=h+o; x10-x13=x14-x10=4u+eps;
y13=y14=y10-.36asc_height-eps;
rulepos15(angle(z14-z10)); z15l=z10;
rulepos16(angle(z13-z10)); z16l=z10;
z19=.2[.5[z13,z14],z10];
p13=z13l{z19-z13}..z15r; p14=z14l{z19-z14}..z16r;
t3=p3 intersectiontimes p1; t13=p13 intersectiontimes p1;
t4=p4 intersectiontimes p2; t14=p14 intersectiontimes p2;
fill z3l{z9-z3}..{curl 1}z0..{z4-z9}z4l
 --trunc_path_end(p4, xpart t4, point ypart t4 of p2)
 --(reverse trunc_path_end(p14, xpart t14, point ypart t14 of p2))
 --z14r{z19-z14}..{curl 1}z10..{z13-z19}z13r
 --trunc_path_end(p13, xpart t13, point ypart t13 of p1)
 --(reverse trunc_path_end(p3, xpart t3, point ypart t3 of p1))--cycle;
penlabels(0,1,2,3,4,5,6,9,10,11,12,13,14,15,16,19); endchar;

cmchar "Double up-and-down arrow";
beginchar(oct"155",11u#,body_height#,paren_depth#);
adjust_fit(0,0);
compute_spread(.45x_height#,.55x_height#);
y1=y2=-d; y7=h; y8=y7;
x1=x7; x2=x8; x1-x2=spread; .5[x1,x2]=.5w;
rulepos1(0); rulepos2(0); rulepos7(0); rulepos8(0);
y0=h+o; x0=.5w;
rulepos3(90); rulepos4(90);
x2-x3=x4-x1=3u+eps; y3=y4=y0-.4asc_height-eps;
rulepos5(angle(z4-z0)); z5l=z0;
rulepos6(angle(z3-z0)); z6l=z0;
z9=.381966[.5[z3,z4],z0];
y10=-d-o; x10=x0;
rulepos13(90); rulepos14(90);
x13=x3; x14=x4; y13=y14=y10+.4asc_height-eps;
rulepos15(angle(z14-z10)); z15l=z10;
rulepos16(angle(z13-z10)); z16l=z10;
z19=.381966[.5[z13,z14],z10];
fill trunc_end(z3l{z9-z3}..z5r,z8l--z2l)
    --trunc_start(z15r..{z13-z19}z13r,z8l--z2l)
    --z13l{z19-z13}..z10{curl 1}..{z14-z19}z14l
    --trunc_end(z14r{z19-z14}..z16r,z1r--z7r)
    --trunc_start(z6r..{z4-z9}z4l,z1r--z7r)
    --z4r{z9-z4}..z0{curl 1}..{z3-z9}z3r--cycle;
unfill combine(trunc_start(z3l{z9-z3}..z5r,z8r--z2r),
	trunc_end(z6r..{z4-z9}z4l,z1l--z7l))
    --combine(trunc_start(z14r{z19-z14}..z16r,z1l--z7l),
	trunc_end(z15r..{z13-z19}z13r,z8r--z2r))--cycle;
penlabels(0,1,2,3,4,5,6,7,8,9,13,14,15,16,19); endchar;

cmchar "Wreath product";
beginchar(oct"157",5u#,asc_height#,asc_depth#);
adjust_fit(if monospace: u#,u# else: 0,0 fi);
%pickup pencircle yscaled .7rule_thickness xscaled 1.4rule_thickness;
%if vair#>.8curve#: pickup rule.nib; autorounded; fi % monoline
numeric thin_edge, thick_edge;
if vair#>.8curve#: thin_edge=thick_edge=rule_thickness;
else: thin_edge=.7rule_thickness; thick_edge=1.4rule_thickness; fi
penpos1(thin_edge, 90); penpos2(thick_edge, 0); penpos3(thick_edge, 0);
penpos4(thin_edge, 90);
x1=x3l=hround u; x2r=x4=w-x1;
y1r=vround .75[math_axis,h];
.5[y1,y4]=.5[y2,y3]=math_axis; y1-y2=1/4(y1-y4);
make_paths1(rev.l) z4e{left}...sim_squiggle.e(3,2,up)...{left}z1e;  % stroke
fill lpath1--rpath1--cycle;
labels(1,2,3,4); endchar;

cmchar "Radical sign";
beginchar(oct"160",15u#,rule_thickness#,
 body_height#+paren_depth#-rule_thickness#);
big_sqrt; endchar;

cmchar "Amalgamation symbol or coproduct symbol";
beginchar(oct"161",13u#+width_adj#,cap_height#,0);
italcorr cap_height#*slant-cap_serif_fit#+H_jut#-2.5u#+min(.5cap_stem#,u#);
adjust_fit(cap_serif_fit#,cap_serif_fit#);
if not serifs:
  save slab,H_jut,bracket; slab=arm_slab; H_jut=hround 1/7w; bracket=0;
fi
%h:=vround(h-stem_corr);
penpos1(cap_stem,0); penpos2(cap_stem,0);
penpos3(cap_stem,0); penpos4(cap_stem,0);
x1l=x2l=hround max(2u,3u-.5cap_stem); x3=x4=w-x1;
y1=y3=0; y2=y4=h;
penpos5(cap_bar,-90); penpos6(cap_bar,-90);
x5=x1r; x6=x3l; y5r=y6r=y1;
if serifs: numeric inner_jut;
 if x1r+H_jut+.5u+1<=x3l-H_jut: inner_jut=H_jut;
 else: x1r+inner_jut+.5u+1=x3l-inner_jut; fi
else: numeric inner_jut; inner_jut=0; fi
fill serif_path_(3,4,f,1/3,H_jut)
 --dish_serif_path(4,3,g,1/3,inner_jut,h,1/3,H_jut)--z6l--z5l
 --dish_serif_path(2,1,c,1/3,H_jut,d,1/3,inner_jut)
 --serif_path_(1,2,a,1/3,-H_jut)--cycle;
math_fit(0,.5ic#); penlabels(1,2,3,4,5,6); endchar;

cmchar "Nabla or backwards-difference operator";
beginchar(oct"162",15u#,cap_height#,0);
adjust_fit(0,0);
numeric right_stem,alpha;
right_stem=cap_hair if hefty: -3stem_corr fi;
x1l=w-x4r=.75u; y1=y4=h;
x2-x1=x4-x3; x3l=x2l+apex_corr; y2=y3=-apex_o-apex_oo;
alpha=diag_ratio(2,right_stem,y1-y2,x4r-x1l-apex_corr);
penpos1(alpha*cap_stem,0); penpos2(alpha*cap_stem,0);
penpos3(alpha*right_stem,0); penpos4(alpha*right_stem,0);
fill pen_end(z4r-z3r,z4r,tiny,z1l,z2l-z1l)
    --pen_end(z2l-z1l,z2l,tiny,z3r,z4r-z3r)--cycle;
z0=whatever[z1r,z2r]=whatever[z3l,z4l];
y5=y6=h-cap_vstem; z5=whatever[z1r,z2r]; z6=whatever[z3l,z4l];
if y0>cap_notch_cut: y0:=cap_notch_cut;
 unfill z0+.5right{up}...{z4-z3}z6--z5{z2-z1}
  ...{down}z0+.5left--cycle; % counter
else: unfill z0--z5--z6--cycle; fi  % counter
penlabels(0,1,2,3,4,5,6); endchar;

cmchar "Square set union sign (Scott lub)";
beginchar(oct"164",12u#,.8asc_height#,0);
adjust_fit(0,0);
rulepos1(-180); rulepos3(-90); rulepos5(0);
x1r=hround 1.1u; x5=w-x1; x3=0.5[x1,x5];
y1=y5=h; y3r=0;
angled_pos(1, down, 2, right, 3); angled_pos(3, right, 4, up, 5);
fill lrthrough(2,lrend(1))--rlthrough(4,rlend(5))--cycle;
labels(1,2,3,4,5); endchar;

cmchar "Square set intersection sign (Scott glb)";
beginchar(oct"165",12u#,.8asc_height#,0);
adjust_fit(0,0);
rulepos1(180); rulepos3(90); rulepos5(0);
x1r=hround 1.1u; x5=w-x1; x3=0.5[x1,x5];
y3r=h; y1=y5=0;
angled_pos(1, up, 2, right, 3); angled_pos(3, right, 4, down, 5);
fill stroke z1e--z2e--z4e--z5e;
labels(1,2,3,4,5); endchar;

cmchar "Square subset or equal to sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"166",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos4(270); rulepos5(180);
x5r=hround(1.5u); x1=x4=hround(w-1.5u)+eps;
y1-y4=spread; y1r=h; y5=.5[y1,y4];
angled_pos(1, left, 2, down, 5); angled_pos(5, down, 3, right, 4);
fill lrthrough(2,lrend(1))--rlthrough(3,rlend(4))--cycle;
x8=x1; x9=x5r; y8=y9; y4-y9=spread';
rulepos8(90); rulepos9(90); fill rlend(9)--lrend(8)--cycle;  % lower bar
labels(1,2,3,4,5,8,9); endchar;

cmchar "Square superset or equal to sign";
compute_spread(.45x_height#,.55x_height#);
spread#':=spread#; spread':=spread; % the spread of `$=$'
compute_spread(5/4x_height#,3/2x_height#);
beginchar(oct"167",14u#,v_center(spread#'+spread#+rule_thickness#));
adjust_fit(0,0);
rulepos1(90); rulepos4(-90); rulepos5(0);
x1=x4=hround 1.5u-eps; x5r=hround(w-1.5u);
y1-y4=spread; y1r=h; y5=.5[y1,y4];
angled_pos(1, right, 2, down, 5); angled_pos(5, down, 3, left, 4);
fill stroke z1e--z2e--z3e--z4e;
x8=x1; x9=x5r; y8=y9; y4-y9=spread';
rulepos8(90); rulepos9(90); fill stroke z8e--z9e;  % lower bar
labels(1,2,3,4,8,9); endchar;

cmchar "Section sign";
beginchar(oct"170",6.5u#+max(1.5u#,stem#),asc_height#,desc_depth#);
adjust_fit(0,0);
numeric sstem; sstem=hround .75[hair,stem];
penpos0(stem,0); penpos1(hair,0); penpos2(vair,90); penpos3(sstem,180);
penpos4(vair,270); penpos5'(sstem,0); penpos5(sstem,180); penpos6(vair,90);
penpos7(sstem,0); penpos8(vair,-90); penpos9(hair,-180); penpos10(stem,-180);
y2r=h+oo; y8r=-d-oo; y2-y1=y9-y8=(y2-y8)/8;
y3=.52[y4,y2]; y5=.52[y4,y6]; y7=.52[y6,y8]; y5'=.52[y6,y4];
y2-y4=y4-y6=y6-y8;
x1r=hround(w-1.5u); x3r=hround 1.25u;
x2=x4=x6=x8=.5w; x5=x7=w-x3; x5'=x3; x9=w-x1;
pair v[]; v1=(3(x5-x3),y5-y3); v2=(3(x7-x5'),y7-y5');
make_paths1(rev.l) z2e{left}...z3e{down}...z4e{v1}...z5e{down};  % upper stroke
make_paths2(rev.r) z5'e{down}...z6e{v2}...z7e{down}...{left}z8e;  % upper stroke
fill combine(rpath1,z4l{left}...{down}z5'l) & lpath2 & bulb_path(8,9,10)
    & combine(rpath2,z6l{right}...{up}z5l) & lpath1 & bulb_path(2,1,0) & cycle;
unfill z5'r{up}...{right}z4r{v1}...z5r{down}...{left}z6r{-v2}...cycle;
penlabels(0,1,2,3,4,5,6,7,8,9,10); endchar;

cmchar "Dagger mark";
beginchar(oct"171",8u#,asc_height#,desc_depth#);
adjust_fit(0,0);
penpos1(stem,0); penpos2(thin_join,0); penpos3(stem,0); penpos4(hair,0);
penpos5(stem,90); penpos2'(thin_join,90); penpos6(stem,90); z2'=z2;
x1=x2=x3=x4; x1-.5stem=hround(.5w-.5stem);
x5-.5stem=hround u; x6=w-x5;
y1+.5stem=h+oo; y2=y5=y6; y3=.57y2; y4=-d-o;
y5+.5stem=floor(x_height+.5stem);
pair v.l,v.r; forsuffixes e=l,r: v.e=direction 1 of (z3e{down}..z4e); endfor
make_paths1(rev.r) z1e{down}..z2e{down}..z3e{down};  % stem
make_paths2(rev.r) z5e{right}..{right}z2'e..{right}z6e;  % bulbs
fill circ_end(1,up) & combine(lpath1,rpath2) & circ_end(5,left)
    & combine(lpath2,lpath1)...{v.l}pen_lrend4(v.l,fine,-v.r){-v.r}
    ...combine(rpath1,lpath2) & circ_end(6,right) & combine(rpath2,rpath1)
    & cycle;
penlabels(1,2,3,4,5,6); endchar;

cmchar "Double dagger mark";
beginchar(oct"172",8u#,asc_height#,desc_depth#);
adjust_fit(0,0);
penpos1(stem,0); penpos2(thin_join,0); penpos3(stem,0);
penpos4(stem,90); penpos2'(thin_join,90); penpos5(stem,90); z2'=z2;
x1=x2=x3; x1-.5stem=hround(.5w-.5stem);
x4-.5stem=hround u; x5=w-x4;
y1+.5stem=h+oo; y2=y4=y5=.5[y1,y3]; y3-.5stem=ceiling(.5[-d,h]);
make_paths1(rev.r) z4e{right}..{right}z2'e..{right}z5e;  % top side bulbs
penpos6(stem,0); penpos7(thin_join,0); penpos8(stem,0);
penpos9(stem,90); penpos7'(thin_join,90); penpos0(stem,90); z7'=z7;
x6=x7=x8=x1; x9=x4; x0=x5;
y6=y3-stem-1; y7=y9=y0=.5[y6,y8]; y8-.5stem=-d-oo;
penpos10(min(.3stem,thin_join),0); z10=.5[z3,z6];
make_paths2(rev.r) z9e{right}..{right}z7'e..{right}z0e;  % bottom side bulbs
make_paths3(rev.r) z1e{down}..z2e{down}..{down}z3e..z10e;
make_paths4(rev.r) z10e..z6e{down}..z7e{down}..z8e{down};
fill circ_end(8,down) & aux_path(rpath4,lpath2 & circ_end(0,right) & rpath2)
    & aux_path(rpath3,lpath1 & circ_end(5,right) & rpath1) & circ_end(1,up)
    & aux_path(lpath3,rpath1 & circ_end(4,left) & lpath1)
    & aux_path(lpath4,rpath2 & circ_end(9,left) & lpath2) & cycle;
penlabels(1,2,3,4,5,6,7,8,9,0); endchar;

cmchar "Paragraph mark";
beginchar(oct"173",11u#,asc_height#,desc_depth#);
adjust_fit(0,0);
rulepos9(90); rulepos1(90); rulepos2(180); rulepos5(270);
rulepos4(0); rulepos6(0); rulepos7(0); rulepos8(0);
y1r=y9r=h; y6=y8=-d-eps; y4=y7=y1l;
y5r=vround(.5[y1,y6]-.5rule_thickness); y2=.5[y1,y5];
x2r=hround u; x5=x4l; x9=hround(w-.5u);
x7l-x4r=ceiling(1.25u); x8=x7; x6=x4;
x7r=hround(x9-1.5u); x1=min(.5w,x4l);
fill lrend(9)--z1r{left}...z2r{down}...{right}z5r--lrend(6)--z4r
    --lrthrough(7,lrend(8))--cycle;
unfill z4l--z5l{left}...z2l{up}...{right}z1l--cycle;
labels(1,2,4,5,6,7,8,9); endchar;

cmchar "Club suit";
beginchar(oct"174",14u#,asc_height#,2/3desc_depth#);
adjust_fit(0,0); path p[];
rulepos1(0); penpos2(hround(u+rule_thickness),0);
x1=x2=x4=x30=x33=.5w;
x1l-x10=hround .5pt; x12=hround .5u;
x11=.6[x12,x10]; x13=.5[x12,x10]=x5; x32-x31=x1-.5u-x12;
x5+x6=x10+x20=x11+x21=x12+x22=x13+x23=x31+x32=2x1;
y30=h+o+oo; y11=y21=-o; y13=y23=vround .53h;
y30-y33=y13-y11; y31=y32=y4=.5[y30,y33]; y12=y22=.5[y11,y13];
y1=y5=y6=y10=y20=.1h; y2=-d;
% p1,p2,p3 all start from the top.
p1=z30{left}...z31{down}...z33{right}...z32{up}...{left}z30;  % top bowl
p2=z13{left}...z12{down}...z11{right}...z10{up}...{left}z13;  % left bowl
p3=z23{left}...z20{down}...z21{right}...z22{up}...{left}z23;  % right bowl
pair v.r,v.l; forsuffixes e=l,r: v.e=(z2e-z1e) xscaled 2; endfor
p4=z1l{down}...{v.l}pen_lrend2(v.l,rule_thickness,-v.r){-v.r}...{up}z1r;
fill trunc_start(p1,z6--z4) & trunc_end(p1,z4--z5)
    --trunc_start(p2,z4--z5) & trunc_end(p2,z5--z6)--p4
    --trunc_start(p3,z5--z6) & trunc_end(p3,z6--z4)--cycle;
labels(1,2,3,4,5,6,10,11,12,13,20,21,22,23,30,31,32,33); endchar;

vardef expand_stroke@#(suffix $)(expr in_dir,out_dir)(suffix $$) =
 rpath@#:=(z$+.5rule_thickness*unitvector in_dir rotated -90){in_dir}
  ...{out_dir}(z$$+.5rule_thickness*unitvector out_dir rotated -90);
 lpath@#:=(z$$+.5rule_thickness*unitvector out_dir rotated 90){-out_dir}
  ...{-in_dir}(z$+.5rule_thickness*unitvector in_dir rotated 90)
enddef;

cmchar "Diamond suit";
beginchar(oct"175",14u#,asc_height#,2/3desc_depth#);
adjust_fit(0,0); pair theta,phi;
rulepos1(90); rulepos2(180); rulepos4(270); rulepos3(360);
x1=x4=.5w; x2r=hround u; x3=w-x2; y1r=h+o+oo; y4r=-d-o-oo; y2=y3=.5[y1,y4];
% theta is the angle from the horizontal of the side corners. phi is the angle
% from the horizontal of the top and bottom corners. Both angles are guaranteed
% to be between 0 and 90.
theta=(z3-z4) xscaled 1.5; phi=(z3-z4) yscaled 1.5;
expand_stroke1(1,-phi,-theta,2);
expand_stroke2(2,theta yscaled -1,phi yscaled -1,4);
expand_stroke3(4,phi,theta,3);
expand_stroke4(3,theta xscaled -1,phi xscaled -1,1);
fill rpath1...{down}z2r...rpath2...{right}z4r...rpath3...{up}z3r
    ...rpath4...{left}z1r...cycle;
unfill trunc_cycle(combine(lpath4,lpath3),reverse combine(lpath2,lpath1));
labels(1,2,3,4); endchar;

cmchar "Heart suit";
beginchar(oct"176",14u#,asc_height#,2/3desc_depth#);
adjust_fit(0,0);
rulepos1(0); rulepos1'(180); z1=z1';
rulepos5(0); rulepos5'(180); z5=z5';
rulepos2(90); rulepos8(90); rulepos7(180); rulepos3(0);
x1=x5=.5w;
x7r=hround u; x8=4u; x2+x8=x3+x7=x4+x6=w;
y1=.77h; y2r=h+o; y3=.7h; y4=.2h; y5=-o-oo;
y2=y8; y3=y7; y4=y6; z4=whatever[z3,z5];
x0=x9=w; y0=1.5h; y9=.6h;
rulepos4(angle(z4-z9)+90);
rulepos6(angle((z4-z9)xscaled -1)-90);
make_paths1(rev.r) z1'e{x2-x1,8(y2-y1)}...z2e{right}....z3e{down}
 ...{z4-z9}z4e...{z5-z0}z5e;  % right half bowl
make_paths2(rev.l) z1e{x8-x1,8(y8-y1)}...z8e{left}....z7e{down}
 ...{(z4-z9)xscaled-1}z6e...{(z5-z0)xscaled-1}z5'e;  % left half bowl
fill combine(rpath1,rpath2)--cycle;
unfill combine(lpath1,lpath2)--cycle;
labels(0,1,2,3,4,5,6,7,8,9); endchar;

cmchar "Spade suit";
beginchar(oct"177",14u#,asc_height#,2/3desc_depth#);
adjust_fit(0,0); path p[];
rulepos1(0); rulepos10(0); penpos2(hround(u+rule_thickness),0);
x1=x2=x10=.5w;
x1l-x6=hround .5pt;
x7=.5[x8,x6]; x8=hround u;
x6+x14=x7+x13=x8+x12=x9+x11=2x10;
y10=h+o+oo-.5rule_thickness; y9=y11=.7h; y8=y12=.3h;
y1=y6=y14=.1h;
y7=y13=-o; y2=-d; z9=whatever[z8,z10];
pair v.r,v.l; forsuffixes e=l,r: v.e=(z2e-z1e) xscaled 2; endfor
fill z1l{down}...{v.l}pen_lrend2(v.l,rule_thickness,-v.r){-v.r}...{up}z1r
    --z14...{right}z13...{up}z12...{-w,h}z11...{-w,3h}z10r
    ...(z10+.5rule_thickness*up){left}...{-w,-3h}z10l
    ...z9{-w,-h}...z8{down}...z7{right}...z6--cycle;
labels(1,2,3,5,6,10,11,12,13,14,15); endchar;
